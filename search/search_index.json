{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Grafonnet","text":"<p>Jsonnet library for generating Grafana dashboards.</p>"},{"location":"index.html#introduction","title":"Introduction","text":"<p>This library depends on JSON Schemas generated by Grok, these schemas are generated directly from the Grafana repository to ensure Grafonnet can keep up with Grafana development.</p> <p>Grafonnet is the spiritual successor of grafonnet-lib. As grafonnet-lib was manually written, it had a hard time to keep up with Grafana development, this resulted in it being under-maintained. Besides that, it also came with a performance penalty in jsonnet as it used the builder pattern, although visually appealing it becomes very slow for environments that need to manage many dashboards.</p> <p>This library is experimental</p> <p>The code in this repository should be considered experimental. Documentation is only available alongside the code. It comes without support, but we are keen to receive feedback on the product and suggestions on how to improve it, though we cannot commit to resolution of any particular issue. No SLAs are available. It is not meant to be used in production environments, and the risks are unknown/high.</p> <p>Additional information can be found in Release life cycle for Grafana Labs.</p>"},{"location":"index.html#requirements","title":"Requirements","text":"<p>Grafonnet uses the Jsonnet programming language.</p> <p>NOTE: There is a significant performance issue with the C implementation of Jsonnet. You are strongly recommended to use the newer go-jsonnet Jsonnet implementation. This is also the implementation recommended by the Jsonnet developers themselves.</p> <p>The library can be installed with jsonnet-bundler.</p>"},{"location":"index.html#install","title":"Install","text":"<p>To add grafonnet to a jsonnet project:</p> <pre><code>jb install github.com/grafana/grafonnet/gen/grafonnet-latest@main\n</code></pre>"},{"location":"index.html#usage","title":"Usage","text":"<pre><code>// dashboard.jsonnet\nlocal grafonnet = import 'github.com/grafana/grafonnet/gen/grafonnet-latest/main.libsonnet';\n\ngrafonnet.dashboard.new('My Dashboard')\n</code></pre> <pre><code>jsonnet -J vendor dashboard.jsonnet\n</code></pre>"},{"location":"API/index.html","title":"API","text":""},{"location":"API/index.html#subpackages","title":"Subpackages","text":"<ul> <li>dashboard</li> <li>librarypanel</li> <li>panel</li> <li>playlist</li> <li>preferences</li> <li>publicdashboard</li> <li>query</li> <li>serviceaccount</li> <li>team</li> <li>util</li> </ul>"},{"location":"API/librarypanel.html","title":"librarypanel","text":"<p>grafonnet.librarypanel</p>"},{"location":"API/librarypanel.html#index","title":"Index","text":"<ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withFolderUid(value)</code></li> <li><code>fn withMeta(value)</code></li> <li><code>fn withMetaMixin(value)</code></li> <li><code>fn withModel(value)</code></li> <li><code>fn withModelMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withSchemaVersion(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>fn withVersion(value)</code></li> <li><code>obj meta</code><ul> <li><code>fn withConnectedDashboards(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withCreatedBy(value)</code></li> <li><code>fn withCreatedByMixin(value)</code></li> <li><code>fn withFolderName(value)</code></li> <li><code>fn withFolderUid(value)</code></li> <li><code>fn withUpdated(value)</code></li> <li><code>fn withUpdatedBy(value)</code></li> <li><code>fn withUpdatedByMixin(value)</code></li> <li><code>obj createdBy</code><ul> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> <li><code>obj updatedBy</code><ul> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/librarypanel.html#fields","title":"Fields","text":""},{"location":"API/librarypanel.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Panel description</p>"},{"location":"API/librarypanel.html#fn-withfolderuid","title":"fn withFolderUid","text":"<pre><code>withFolderUid(value)\n</code></pre> <p>Folder UID</p>"},{"location":"API/librarypanel.html#fn-withmeta","title":"fn withMeta","text":"<pre><code>withMeta(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-withmetamixin","title":"fn withMetaMixin","text":"<pre><code>withMetaMixin(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-withmodel","title":"fn withModel","text":"<pre><code>withModel(value)\n</code></pre> <p>TODO: should be the same panel schema defined in dashboard Typescript: Omit;"},{"location":"API/librarypanel.html#fn-withmodelmixin","title":"fn withModelMixin","text":"<pre><code>withModelMixin(value)\n</code></pre> <p>TODO: should be the same panel schema defined in dashboard Typescript: Omit;"},{"location":"API/librarypanel.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Panel name (also saved in the model)</p>"},{"location":"API/librarypanel.html#fn-withschemaversion","title":"fn withSchemaVersion","text":"<pre><code>withSchemaVersion(value)\n</code></pre> <p>Dashboard version when this was saved (zero if unknown)</p>"},{"location":"API/librarypanel.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>The panel type (from inside the model)</p>"},{"location":"API/librarypanel.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Library element UID</p>"},{"location":"API/librarypanel.html#fn-withversion","title":"fn withVersion","text":"<pre><code>withVersion(value)\n</code></pre> <p>panel version, incremented each time the dashboard is updated.</p>"},{"location":"API/librarypanel.html#obj-meta","title":"obj meta","text":""},{"location":"API/librarypanel.html#fn-metawithconnecteddashboards","title":"fn meta.withConnectedDashboards","text":"<pre><code>withConnectedDashboards(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithcreated","title":"fn meta.withCreated","text":"<pre><code>withCreated(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithcreatedby","title":"fn meta.withCreatedBy","text":"<pre><code>withCreatedBy(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithcreatedbymixin","title":"fn meta.withCreatedByMixin","text":"<pre><code>withCreatedByMixin(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithfoldername","title":"fn meta.withFolderName","text":"<pre><code>withFolderName(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithfolderuid","title":"fn meta.withFolderUid","text":"<pre><code>withFolderUid(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithupdated","title":"fn meta.withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithupdatedby","title":"fn meta.withUpdatedBy","text":"<pre><code>withUpdatedBy(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metawithupdatedbymixin","title":"fn meta.withUpdatedByMixin","text":"<pre><code>withUpdatedByMixin(value)\n</code></pre>"},{"location":"API/librarypanel.html#obj-metacreatedby","title":"obj meta.createdBy","text":""},{"location":"API/librarypanel.html#fn-metacreatedbywithavatarurl","title":"fn meta.createdBy.withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metacreatedbywithid","title":"fn meta.createdBy.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metacreatedbywithname","title":"fn meta.createdBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/librarypanel.html#obj-metaupdatedby","title":"obj meta.updatedBy","text":""},{"location":"API/librarypanel.html#fn-metaupdatedbywithavatarurl","title":"fn meta.updatedBy.withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metaupdatedbywithid","title":"fn meta.updatedBy.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/librarypanel.html#fn-metaupdatedbywithname","title":"fn meta.updatedBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/playlist.html","title":"playlist","text":"<p>grafonnet.playlist</p>"},{"location":"API/playlist.html#index","title":"Index","text":"<ul> <li><code>fn withInterval(value=\"5m\")</code></li> <li><code>fn withItems(value)</code></li> <li><code>fn withItemsMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj items</code><ul> <li><code>fn withTitle(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul>"},{"location":"API/playlist.html#fields","title":"Fields","text":""},{"location":"API/playlist.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value=\"5m\")\n</code></pre> <p>Interval sets the time between switching views in a playlist. FIXME: Is this based on a standardized format or what options are available? Can datemath be used?</p>"},{"location":"API/playlist.html#fn-withitems","title":"fn withItems","text":"<pre><code>withItems(value)\n</code></pre> <p>The ordered list of items that the playlist will iterate over. FIXME! This should not be optional, but changing it makes the godegen awkward</p>"},{"location":"API/playlist.html#fn-withitemsmixin","title":"fn withItemsMixin","text":"<pre><code>withItemsMixin(value)\n</code></pre> <p>The ordered list of items that the playlist will iterate over. FIXME! This should not be optional, but changing it makes the godegen awkward</p>"},{"location":"API/playlist.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the playlist.</p>"},{"location":"API/playlist.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique playlist identifier. Generated on creation, either by the creator of the playlist of by the application.</p>"},{"location":"API/playlist.html#obj-items","title":"obj items","text":""},{"location":"API/playlist.html#fn-itemswithtitle","title":"fn items.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Title is an unused property -- it will be removed in the future</p>"},{"location":"API/playlist.html#fn-itemswithtype","title":"fn items.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Type of the item.</p> <p>Accepted values for <code>value</code> are \"dashboard_by_uid\", \"dashboard_by_id\", \"dashboard_by_tag\"</p>"},{"location":"API/playlist.html#fn-itemswithvalue","title":"fn items.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>Value depends on type and describes the playlist item.</p> <ul> <li>dashboard_by_id: The value is an internal numerical identifier set by Grafana. This  is not portable as the numerical identifier is non-deterministic between different instances.  Will be replaced by dashboard_by_uid in the future. (deprecated)</li> <li>dashboard_by_tag: The value is a tag which is set on any number of dashboards. All  dashboards behind the tag will be added to the playlist.</li> <li>dashboard_by_uid: The value is the dashboard UID</li> </ul>"},{"location":"API/preferences.html","title":"preferences","text":"<p>grafonnet.preferences</p>"},{"location":"API/preferences.html#index","title":"Index","text":"<ul> <li><code>fn withHomeDashboardUID(value)</code></li> <li><code>fn withLanguage(value)</code></li> <li><code>fn withQueryHistory(value)</code></li> <li><code>fn withQueryHistoryMixin(value)</code></li> <li><code>fn withTheme(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withWeekStart(value)</code></li> <li><code>obj queryHistory</code><ul> <li><code>fn withHomeTab(value)</code></li> </ul> </li> </ul>"},{"location":"API/preferences.html#fields","title":"Fields","text":""},{"location":"API/preferences.html#fn-withhomedashboarduid","title":"fn withHomeDashboardUID","text":"<pre><code>withHomeDashboardUID(value)\n</code></pre> <p>UID for the home dashboard</p>"},{"location":"API/preferences.html#fn-withlanguage","title":"fn withLanguage","text":"<pre><code>withLanguage(value)\n</code></pre> <p>Selected language (beta)</p>"},{"location":"API/preferences.html#fn-withqueryhistory","title":"fn withQueryHistory","text":"<pre><code>withQueryHistory(value)\n</code></pre>"},{"location":"API/preferences.html#fn-withqueryhistorymixin","title":"fn withQueryHistoryMixin","text":"<pre><code>withQueryHistoryMixin(value)\n</code></pre>"},{"location":"API/preferences.html#fn-withtheme","title":"fn withTheme","text":"<pre><code>withTheme(value)\n</code></pre> <p>light, dark, empty is default</p>"},{"location":"API/preferences.html#fn-withtimezone","title":"fn withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre> <p>The timezone selection TODO: this should use the timezone defined in common</p>"},{"location":"API/preferences.html#fn-withweekstart","title":"fn withWeekStart","text":"<pre><code>withWeekStart(value)\n</code></pre> <p>day of the week (sunday, monday, etc)</p>"},{"location":"API/preferences.html#obj-queryhistory","title":"obj queryHistory","text":""},{"location":"API/preferences.html#fn-queryhistorywithhometab","title":"fn queryHistory.withHomeTab","text":"<pre><code>withHomeTab(value)\n</code></pre> <p>one of: '' | 'query' | 'starred';</p>"},{"location":"API/publicdashboard.html","title":"publicdashboard","text":"<p>grafonnet.publicdashboard</p>"},{"location":"API/publicdashboard.html#index","title":"Index","text":"<ul> <li><code>fn withAccessToken(value)</code></li> <li><code>fn withAnnotationsEnabled(value)</code></li> <li><code>fn withDashboardUid(value)</code></li> <li><code>fn withIsEnabled(value)</code></li> <li><code>fn withTimeSelectionEnabled(value)</code></li> <li><code>fn withUid(value)</code></li> </ul>"},{"location":"API/publicdashboard.html#fields","title":"Fields","text":""},{"location":"API/publicdashboard.html#fn-withaccesstoken","title":"fn withAccessToken","text":"<pre><code>withAccessToken(value)\n</code></pre> <p>Unique public access token</p>"},{"location":"API/publicdashboard.html#fn-withannotationsenabled","title":"fn withAnnotationsEnabled","text":"<pre><code>withAnnotationsEnabled(value)\n</code></pre> <p>Flag that indicates if annotations are enabled</p>"},{"location":"API/publicdashboard.html#fn-withdashboarduid","title":"fn withDashboardUid","text":"<pre><code>withDashboardUid(value)\n</code></pre> <p>Dashboard unique identifier referenced by this public dashboard</p>"},{"location":"API/publicdashboard.html#fn-withisenabled","title":"fn withIsEnabled","text":"<pre><code>withIsEnabled(value)\n</code></pre> <p>Flag that indicates if the public dashboard is enabled</p>"},{"location":"API/publicdashboard.html#fn-withtimeselectionenabled","title":"fn withTimeSelectionEnabled","text":"<pre><code>withTimeSelectionEnabled(value)\n</code></pre> <p>Flag that indicates if the time range picker is enabled</p>"},{"location":"API/publicdashboard.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique public dashboard identifier</p>"},{"location":"API/serviceaccount.html","title":"serviceaccount","text":"<p>grafonnet.serviceaccount</p>"},{"location":"API/serviceaccount.html#index","title":"Index","text":"<ul> <li><code>fn withAccessControl(value)</code></li> <li><code>fn withAccessControlMixin(value)</code></li> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withIsDisabled(value)</code></li> <li><code>fn withLogin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOrgId(value)</code></li> <li><code>fn withRole(value)</code></li> <li><code>fn withTeams(value)</code></li> <li><code>fn withTeamsMixin(value)</code></li> <li><code>fn withTokens(value)</code></li> <li><code>fn withUpdated(value)</code></li> </ul>"},{"location":"API/serviceaccount.html#fields","title":"Fields","text":""},{"location":"API/serviceaccount.html#fn-withaccesscontrol","title":"fn withAccessControl","text":"<pre><code>withAccessControl(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"API/serviceaccount.html#fn-withaccesscontrolmixin","title":"fn withAccessControlMixin","text":"<pre><code>withAccessControlMixin(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"API/serviceaccount.html#fn-withavatarurl","title":"fn withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre> <p>AvatarUrl is the service account's avatar URL. It allows the frontend to display a picture in front of the service account.</p>"},{"location":"API/serviceaccount.html#fn-withcreated","title":"fn withCreated","text":"<pre><code>withCreated(value)\n</code></pre> <p>Created indicates when the service account was created.</p>"},{"location":"API/serviceaccount.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>ID is the unique identifier of the service account in the database.</p>"},{"location":"API/serviceaccount.html#fn-withisdisabled","title":"fn withIsDisabled","text":"<pre><code>withIsDisabled(value)\n</code></pre> <p>IsDisabled indicates if the service account is disabled.</p>"},{"location":"API/serviceaccount.html#fn-withlogin","title":"fn withLogin","text":"<pre><code>withLogin(value)\n</code></pre> <p>Login of the service account.</p>"},{"location":"API/serviceaccount.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the service account.</p>"},{"location":"API/serviceaccount.html#fn-withorgid","title":"fn withOrgId","text":"<pre><code>withOrgId(value)\n</code></pre> <p>OrgId is the ID of an organisation the service account belongs to.</p>"},{"location":"API/serviceaccount.html#fn-withrole","title":"fn withRole","text":"<pre><code>withRole(value)\n</code></pre> <p>OrgRole is a Grafana Organization Role which can be 'Viewer', 'Editor', 'Admin'.</p> <p>Accepted values for <code>value</code> are \"Admin\", \"Editor\", \"Viewer\"</p>"},{"location":"API/serviceaccount.html#fn-withteams","title":"fn withTeams","text":"<pre><code>withTeams(value)\n</code></pre> <p>Teams is a list of teams the service account belongs to.</p>"},{"location":"API/serviceaccount.html#fn-withteamsmixin","title":"fn withTeamsMixin","text":"<pre><code>withTeamsMixin(value)\n</code></pre> <p>Teams is a list of teams the service account belongs to.</p>"},{"location":"API/serviceaccount.html#fn-withtokens","title":"fn withTokens","text":"<pre><code>withTokens(value)\n</code></pre> <p>Tokens is the number of active tokens for the service account. Tokens are used to authenticate the service account against Grafana.</p>"},{"location":"API/serviceaccount.html#fn-withupdated","title":"fn withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre> <p>Updated indicates when the service account was updated.</p>"},{"location":"API/team.html","title":"team","text":"<p>grafonnet.team</p>"},{"location":"API/team.html#index","title":"Index","text":"<ul> <li><code>fn withAccessControl(value)</code></li> <li><code>fn withAccessControlMixin(value)</code></li> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withEmail(value)</code></li> <li><code>fn withMemberCount(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOrgId(value)</code></li> <li><code>fn withPermission(value)</code></li> <li><code>fn withUpdated(value)</code></li> </ul>"},{"location":"API/team.html#fields","title":"Fields","text":""},{"location":"API/team.html#fn-withaccesscontrol","title":"fn withAccessControl","text":"<pre><code>withAccessControl(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"API/team.html#fn-withaccesscontrolmixin","title":"fn withAccessControlMixin","text":"<pre><code>withAccessControlMixin(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"API/team.html#fn-withavatarurl","title":"fn withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre> <p>AvatarUrl is the team's avatar URL.</p>"},{"location":"API/team.html#fn-withcreated","title":"fn withCreated","text":"<pre><code>withCreated(value)\n</code></pre> <p>Created indicates when the team was created.</p>"},{"location":"API/team.html#fn-withemail","title":"fn withEmail","text":"<pre><code>withEmail(value)\n</code></pre> <p>Email of the team.</p>"},{"location":"API/team.html#fn-withmembercount","title":"fn withMemberCount","text":"<pre><code>withMemberCount(value)\n</code></pre> <p>MemberCount is the number of the team members.</p>"},{"location":"API/team.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the team.</p>"},{"location":"API/team.html#fn-withorgid","title":"fn withOrgId","text":"<pre><code>withOrgId(value)\n</code></pre> <p>OrgId is the ID of an organisation the team belongs to.</p>"},{"location":"API/team.html#fn-withpermission","title":"fn withPermission","text":"<pre><code>withPermission(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1, 2, 4</p>"},{"location":"API/team.html#fn-withupdated","title":"fn withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre> <p>Updated indicates when the team was updated.</p>"},{"location":"API/util.html","title":"util","text":"<p>Helper functions that work well with Grafonnet.</p>"},{"location":"API/util.html#index","title":"Index","text":"<ul> <li><code>obj dashboard</code><ul> <li><code>fn getOptionsForCustomQuery(query)</code></li> </ul> </li> <li><code>obj grid</code><ul> <li><code>fn makeGrid(panels, panelWidth, panelHeight)</code></li> </ul> </li> <li><code>obj panel</code><ul> <li><code>fn setPanelIDs(panels)</code></li> </ul> </li> <li><code>obj string</code><ul> <li><code>fn slugify(string)</code></li> </ul> </li> </ul>"},{"location":"API/util.html#fields","title":"Fields","text":""},{"location":"API/util.html#obj-dashboard","title":"obj dashboard","text":""},{"location":"API/util.html#fn-dashboardgetoptionsforcustomquery","title":"fn dashboard.getOptionsForCustomQuery","text":"<pre><code>getOptionsForCustomQuery(query)\n</code></pre> <p><code>getOptionsForCustomQuery</code> provides values for the <code>options</code> and <code>current</code> fields. These are required for template variables of type 'custom'but do not automatically get populated by Grafana when importing a dashboard from JSON.</p> <p>This is a bit of a hack and should always be called on functions that set <code>type</code> on a template variable (see the dashboard.templating.list veneer). Ideally Grafana populates these fields from the <code>query</code> value but this provides a backwards compatible solution.</p>"},{"location":"API/util.html#obj-grid","title":"obj grid","text":""},{"location":"API/util.html#fn-gridmakegrid","title":"fn grid.makeGrid","text":"<pre><code>makeGrid(panels, panelWidth, panelHeight)\n</code></pre> <p><code>makeGrid</code> returns an array of <code>panels</code> organized in a grid with equal <code>panelWidth</code> and <code>panelHeight</code>. Row panels are used as \"linebreaks\", if a Row panel is collapsed, then all panels below it will be folded into the row.</p> <p>This function will use the full grid of 24 columns, setting <code>panelWidth</code> to a value that can divide 24 into equal parts will fill up the page nicely. (1, 2, 3, 4, 6, 8, 12) Other value for <code>panelWidth</code> will leave a gap on the far right.</p>"},{"location":"API/util.html#obj-panel","title":"obj panel","text":""},{"location":"API/util.html#fn-panelsetpanelids","title":"fn panel.setPanelIDs","text":"<pre><code>setPanelIDs(panels)\n</code></pre> <p><code>setPanelIDs</code> ensures that all <code>panels</code> have a unique ID, this functions is used in <code>dashboard.withPanels</code> and <code>dashboard.withPanelsMixin</code> to provide a consistent experience.</p> <p>used in ../veneer/dashboard.libsonnet</p>"},{"location":"API/util.html#obj-string","title":"obj string","text":""},{"location":"API/util.html#fn-stringslugify","title":"fn string.slugify","text":"<pre><code>slugify(string)\n</code></pre> <p><code>slugify</code> will create a simple slug from <code>string</code>, keeping only alphanumeric characters and replacing spaces with dashes.</p>"},{"location":"API/dashboard/index.html","title":"dashboard","text":"<p>grafonnet.dashboard</p>"},{"location":"API/dashboard/index.html#subpackages","title":"Subpackages","text":"<ul> <li>annotation</li> <li>link</li> <li>variable</li> </ul>"},{"location":"API/dashboard/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withAnnotations(value)</code></li> <li><code>fn withAnnotationsMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withEditable(value=true)</code></li> <li><code>fn withFiscalYearStartMonth(value=0)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withLiveNow(value)</code></li> <li><code>fn withPanels(value)</code></li> <li><code>fn withPanelsMixin(value)</code></li> <li><code>fn withRefresh(value)</code></li> <li><code>fn withRefreshMixin(value)</code></li> <li><code>fn withSchemaVersion(value=36)</code></li> <li><code>fn withStyle(value=\"dark\")</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTemplating(value)</code></li> <li><code>fn withTemplatingMixin(value)</code></li> <li><code>fn withTimezone(value=\"browser\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>fn withVariables(value)</code></li> <li><code>fn withVariablesMixin(value)</code></li> <li><code>fn withWeekStart(value)</code></li> <li><code>obj graphTooltip</code><ul> <li><code>fn withSharedCrosshair()</code></li> <li><code>fn withSharedTooltip()</code></li> </ul> </li> <li><code>obj time</code><ul> <li><code>fn withFrom(value=\"now-6h\")</code></li> <li><code>fn withTo(value=\"now\")</code></li> </ul> </li> <li><code>obj timepicker</code><ul> <li><code>fn withCollapse(value=false)</code></li> <li><code>fn withEnable(value=true)</code></li> <li><code>fn withHidden(value=false)</code></li> <li><code>fn withRefreshIntervals(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])</code></li> <li><code>fn withRefreshIntervalsMixin(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])</code></li> <li><code>fn withTimeOptions(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])</code></li> <li><code>fn withTimeOptionsMixin(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])</code></li> </ul> </li> </ul>"},{"location":"API/dashboard/index.html#fields","title":"Fields","text":""},{"location":"API/dashboard/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new dashboard with a title.</p>"},{"location":"API/dashboard/index.html#fn-withannotations","title":"fn withAnnotations","text":"<pre><code>withAnnotations(value)\n</code></pre> <p><code>withAnnotations</code> adds an array of annotations to a dashboard.</p> <p>This function appends passed data to existing values</p>"},{"location":"API/dashboard/index.html#fn-withannotationsmixin","title":"fn withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(value)\n</code></pre> <p><code>withAnnotationsMixin</code> adds an array of annotations to a dashboard.</p> <p>This function appends passed data to existing values</p>"},{"location":"API/dashboard/index.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description of dashboard.</p>"},{"location":"API/dashboard/index.html#fn-witheditable","title":"fn withEditable","text":"<pre><code>withEditable(value=true)\n</code></pre> <p>Whether a dashboard is editable or not.</p>"},{"location":"API/dashboard/index.html#fn-withfiscalyearstartmonth","title":"fn withFiscalYearStartMonth","text":"<pre><code>withFiscalYearStartMonth(value=0)\n</code></pre> <p>The month that the fiscal year starts on.  0 = January, 11 = December</p>"},{"location":"API/dashboard/index.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/index.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/index.html#fn-withlivenow","title":"fn withLiveNow","text":"<pre><code>withLiveNow(value)\n</code></pre> <p>When set to true, the dashboard will redraw panels at an interval matching the pixel width. This will keep data \"moving left\" regardless of the query refresh rate.  This setting helps avoid dashboards presenting stale live data</p>"},{"location":"API/dashboard/index.html#fn-withpanels","title":"fn withPanels","text":"<pre><code>withPanels(value)\n</code></pre>"},{"location":"API/dashboard/index.html#fn-withpanelsmixin","title":"fn withPanelsMixin","text":"<pre><code>withPanelsMixin(value)\n</code></pre>"},{"location":"API/dashboard/index.html#fn-withrefresh","title":"fn withRefresh","text":"<pre><code>withRefresh(value)\n</code></pre> <p>Refresh rate of dashboard. Represented via interval string, e.g. \"5s\", \"1m\", \"1h\", \"1d\".</p>"},{"location":"API/dashboard/index.html#fn-withrefreshmixin","title":"fn withRefreshMixin","text":"<pre><code>withRefreshMixin(value)\n</code></pre> <p>Refresh rate of dashboard. Represented via interval string, e.g. \"5s\", \"1m\", \"1h\", \"1d\".</p>"},{"location":"API/dashboard/index.html#fn-withschemaversion","title":"fn withSchemaVersion","text":"<pre><code>withSchemaVersion(value=36)\n</code></pre> <p>Version of the JSON schema, incremented each time a Grafana update brings changes to said schema. TODO this is the existing schema numbering system. It will be replaced by Thema's themaVersion</p>"},{"location":"API/dashboard/index.html#fn-withstyle","title":"fn withStyle","text":"<pre><code>withStyle(value=\"dark\")\n</code></pre> <p>Theme of dashboard.</p> <p>Accepted values for <code>value</code> are \"dark\", \"light\"</p>"},{"location":"API/dashboard/index.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>Tags associated with dashboard.</p>"},{"location":"API/dashboard/index.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>Tags associated with dashboard.</p>"},{"location":"API/dashboard/index.html#fn-withtemplating","title":"fn withTemplating","text":"<pre><code>withTemplating(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/index.html#fn-withtemplatingmixin","title":"fn withTemplatingMixin","text":"<pre><code>withTemplatingMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/index.html#fn-withtimezone","title":"fn withTimezone","text":"<pre><code>withTimezone(value=\"browser\")\n</code></pre> <p>Timezone of dashboard. Accepts IANA TZDB zone ID or \"browser\" or \"utc\".</p>"},{"location":"API/dashboard/index.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Title of dashboard.</p>"},{"location":"API/dashboard/index.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique dashboard identifier that can be generated by anyone. string (8-40)</p>"},{"location":"API/dashboard/index.html#fn-withvariables","title":"fn withVariables","text":"<pre><code>withVariables(value)\n</code></pre> <p><code>withVariables</code> adds an array of variables to a dashboard</p>"},{"location":"API/dashboard/index.html#fn-withvariablesmixin","title":"fn withVariablesMixin","text":"<pre><code>withVariablesMixin(value)\n</code></pre> <p><code>withVariablesMixin</code> adds an array of variables to a dashboard.</p> <p>This function appends passed data to existing values</p>"},{"location":"API/dashboard/index.html#fn-withweekstart","title":"fn withWeekStart","text":"<pre><code>withWeekStart(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/index.html#obj-graphtooltip","title":"obj graphTooltip","text":""},{"location":"API/dashboard/index.html#fn-graphtooltipwithsharedcrosshair","title":"fn graphTooltip.withSharedCrosshair","text":"<pre><code>withSharedCrosshair()\n</code></pre> <p>Share crosshair on all panels.</p>"},{"location":"API/dashboard/index.html#fn-graphtooltipwithsharedtooltip","title":"fn graphTooltip.withSharedTooltip","text":"<pre><code>withSharedTooltip()\n</code></pre> <p>Share crosshair and tooltip on all panels.</p>"},{"location":"API/dashboard/index.html#obj-time","title":"obj time","text":""},{"location":"API/dashboard/index.html#fn-timewithfrom","title":"fn time.withFrom","text":"<pre><code>withFrom(value=\"now-6h\")\n</code></pre>"},{"location":"API/dashboard/index.html#fn-timewithto","title":"fn time.withTo","text":"<pre><code>withTo(value=\"now\")\n</code></pre>"},{"location":"API/dashboard/index.html#obj-timepicker","title":"obj timepicker","text":""},{"location":"API/dashboard/index.html#fn-timepickerwithcollapse","title":"fn timepicker.withCollapse","text":"<pre><code>withCollapse(value=false)\n</code></pre> <p>Whether timepicker is collapsed or not.</p>"},{"location":"API/dashboard/index.html#fn-timepickerwithenable","title":"fn timepicker.withEnable","text":"<pre><code>withEnable(value=true)\n</code></pre> <p>Whether timepicker is enabled or not.</p>"},{"location":"API/dashboard/index.html#fn-timepickerwithhidden","title":"fn timepicker.withHidden","text":"<pre><code>withHidden(value=false)\n</code></pre> <p>Whether timepicker is visible or not.</p>"},{"location":"API/dashboard/index.html#fn-timepickerwithrefreshintervals","title":"fn timepicker.withRefreshIntervals","text":"<pre><code>withRefreshIntervals(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])\n</code></pre> <p>Selectable intervals for auto-refresh.</p>"},{"location":"API/dashboard/index.html#fn-timepickerwithrefreshintervalsmixin","title":"fn timepicker.withRefreshIntervalsMixin","text":"<pre><code>withRefreshIntervalsMixin(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])\n</code></pre> <p>Selectable intervals for auto-refresh.</p>"},{"location":"API/dashboard/index.html#fn-timepickerwithtimeoptions","title":"fn timepicker.withTimeOptions","text":"<pre><code>withTimeOptions(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/index.html#fn-timepickerwithtimeoptionsmixin","title":"fn timepicker.withTimeOptionsMixin","text":"<pre><code>withTimeOptionsMixin(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/annotation.html","title":"annotation","text":""},{"location":"API/dashboard/annotation.html#index","title":"Index","text":"<ul> <li><code>fn withBuiltIn(value=0)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withEnable(value=true)</code></li> <li><code>fn withHide(value=false)</code></li> <li><code>fn withIconColor(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withShowIn(value=0)</code></li> <li><code>fn withTarget(value)</code></li> <li><code>fn withTargetMixin(value)</code></li> <li><code>fn withType(value=\"dashboard\")</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj target</code><ul> <li><code>fn withLimit(value)</code></li> <li><code>fn withMatchAny(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/dashboard/annotation.html#fields","title":"Fields","text":""},{"location":"API/dashboard/annotation.html#fn-withbuiltin","title":"fn withBuiltIn","text":"<pre><code>withBuiltIn(value=0)\n</code></pre>"},{"location":"API/dashboard/annotation.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Datasource to use for annotation.</p>"},{"location":"API/dashboard/annotation.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Datasource to use for annotation.</p>"},{"location":"API/dashboard/annotation.html#fn-withenable","title":"fn withEnable","text":"<pre><code>withEnable(value=true)\n</code></pre> <p>Whether annotation is enabled.</p>"},{"location":"API/dashboard/annotation.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value=false)\n</code></pre> <p>Whether to hide annotation.</p>"},{"location":"API/dashboard/annotation.html#fn-withiconcolor","title":"fn withIconColor","text":"<pre><code>withIconColor(value)\n</code></pre> <p>Annotation icon color.</p>"},{"location":"API/dashboard/annotation.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of annotation.</p>"},{"location":"API/dashboard/annotation.html#fn-withrawquery","title":"fn withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre> <p>Query for annotation data.</p>"},{"location":"API/dashboard/annotation.html#fn-withshowin","title":"fn withShowIn","text":"<pre><code>withShowIn(value=0)\n</code></pre>"},{"location":"API/dashboard/annotation.html#fn-withtarget","title":"fn withTarget","text":"<pre><code>withTarget(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/annotation.html#fn-withtargetmixin","title":"fn withTargetMixin","text":"<pre><code>withTargetMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/dashboard/annotation.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value=\"dashboard\")\n</code></pre>"},{"location":"API/dashboard/annotation.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/dashboard/annotation.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/dashboard/annotation.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/dashboard/annotation.html#obj-target","title":"obj target","text":""},{"location":"API/dashboard/annotation.html#fn-targetwithlimit","title":"fn target.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"API/dashboard/annotation.html#fn-targetwithmatchany","title":"fn target.withMatchAny","text":"<pre><code>withMatchAny(value)\n</code></pre>"},{"location":"API/dashboard/annotation.html#fn-targetwithtags","title":"fn target.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/dashboard/annotation.html#fn-targetwithtagsmixin","title":"fn target.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/dashboard/annotation.html#fn-targetwithtype","title":"fn target.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/dashboard/link.html","title":"link","text":""},{"location":"API/dashboard/link.html#index","title":"Index","text":"<ul> <li><code>obj dashboards</code><ul> <li><code>fn new(title, tags)</code></li> <li><code>obj options</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> </ul> </li> </ul> </li> <li><code>obj link</code><ul> <li><code>fn new(title, url)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/dashboard/link.html#fields","title":"Fields","text":""},{"location":"API/dashboard/link.html#obj-dashboards","title":"obj dashboards","text":""},{"location":"API/dashboard/link.html#fn-dashboardsnew","title":"fn dashboards.new","text":"<pre><code>new(title, tags)\n</code></pre> <p>Create links to dashboards based on <code>tags</code>.</p>"},{"location":"API/dashboard/link.html#obj-dashboardsoptions","title":"obj dashboards.options","text":""},{"location":"API/dashboard/link.html#fn-dashboardsoptionswithasdropdown","title":"fn dashboards.options.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/dashboard/link.html#fn-dashboardsoptionswithincludevars","title":"fn dashboards.options.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/dashboard/link.html#fn-dashboardsoptionswithkeeptime","title":"fn dashboards.options.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/dashboard/link.html#fn-dashboardsoptionswithtargetblank","title":"fn dashboards.options.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/dashboard/link.html#obj-link","title":"obj link","text":""},{"location":"API/dashboard/link.html#fn-linknew","title":"fn link.new","text":"<pre><code>new(title, url)\n</code></pre> <p>Create link to an arbitrary URL.</p>"},{"location":"API/dashboard/link.html#fn-linkwithicon","title":"fn link.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/dashboard/link.html#fn-linkwithtooltip","title":"fn link.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/dashboard/link.html#obj-linkoptions","title":"obj link.options","text":""},{"location":"API/dashboard/link.html#fn-linkoptionswithasdropdown","title":"fn link.options.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/dashboard/link.html#fn-linkoptionswithincludevars","title":"fn link.options.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/dashboard/link.html#fn-linkoptionswithkeeptime","title":"fn link.options.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/dashboard/link.html#fn-linkoptionswithtargetblank","title":"fn link.options.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/dashboard/variable.html","title":"variable","text":"<p>Example usage:</p> <pre><code>local g = import 'g.libsonnet';\nlocal var = g.dashboard.variable;\n\nlocal customVar =\nvar.custom.new(\n'myOptions',\nvalues=['a', 'b', 'c', 'd'],\n)\n+ var.custom.generalOptions.withDescription(\n'This is a variable for my custom options.'\n)\n+ var.custom.selectionOptions.withMulti();\n\nlocal queryVar =\nvar.query.new('queryOptions')\n+ var.query.queryTypes.withLabelValues(\n'up',\n'instance',\n)\n+ var.query.withDatasource(\ntype='prometheus',\nuid='mimir-prod',\n)\n+ var.query.selectionOptions.withIncludeAll();\n\n\ng.dashboard.new('my dashboard')\n+ g.dashboard.withVariables([\ncustomVar,\nqueryVar,\n])\n</code></pre>"},{"location":"API/dashboard/variable.html#index","title":"Index","text":"<ul> <li><code>obj adhoc</code><ul> <li><code>fn new(name, type, uid)</code></li> <li><code>fn newFromVariable(name, variable)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj constant</code><ul> <li><code>fn new(name, value)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn new(name, values)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> <li><code>obj selectionOptions</code><ul> <li><code>fn withIncludeAll(value=true, customAllValue)</code></li> <li><code>fn withMulti(value=true)</code></li> </ul> </li> </ul> </li> <li><code>obj datasource</code><ul> <li><code>fn new(name, type)</code></li> <li><code>fn withRegex(value)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> <li><code>obj selectionOptions</code><ul> <li><code>fn withIncludeAll(value=true, customAllValue)</code></li> <li><code>fn withMulti(value=true)</code></li> </ul> </li> </ul> </li> <li><code>obj interval</code><ul> <li><code>fn new(name, values)</code></li> <li><code>fn withAutoOption(count, minInterval)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj query</code><ul> <li><code>fn new(name, query=\"\")</code></li> <li><code>fn withDatasource(type, uid)</code></li> <li><code>fn withDatasourceFromVariable(variable)</code></li> <li><code>fn withRegex(value)</code></li> <li><code>fn withSort(i=0, type=\"alphabetical\", asc=true, caseInsensitive=false)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> <li><code>obj queryTypes</code><ul> <li><code>fn withLabelValues(label, metric)</code></li> </ul> </li> <li><code>obj refresh</code><ul> <li><code>fn onLoad()</code></li> <li><code>fn onTime()</code></li> </ul> </li> <li><code>obj selectionOptions</code><ul> <li><code>fn withIncludeAll(value=true, customAllValue)</code></li> <li><code>fn withMulti(value=true)</code></li> </ul> </li> </ul> </li> <li><code>obj textbox</code><ul> <li><code>fn new(name, default=\"\")</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"API/dashboard/variable.html#fields","title":"Fields","text":""},{"location":"API/dashboard/variable.html#obj-adhoc","title":"obj adhoc","text":""},{"location":"API/dashboard/variable.html#fn-adhocnew","title":"fn adhoc.new","text":"<pre><code>new(name, type, uid)\n</code></pre> <p><code>new</code> creates an adhoc template variable for datasource with <code>type</code> and <code>uid</code>.</p>"},{"location":"API/dashboard/variable.html#fn-adhocnewfromvariable","title":"fn adhoc.newFromVariable","text":"<pre><code>newFromVariable(name, variable)\n</code></pre> <p>Same as <code>new</code> but selecting the datasource from another template variable.</p>"},{"location":"API/dashboard/variable.html#obj-adhocgeneraloptions","title":"obj adhoc.generalOptions","text":""},{"location":"API/dashboard/variable.html#fn-adhocgeneraloptionswithdescription","title":"fn adhoc.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-adhocgeneraloptionswithlabel","title":"fn adhoc.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-adhocgeneraloptionswithname","title":"fn adhoc.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-adhocgeneraloptionsshowondashboard","title":"obj adhoc.generalOptions.showOnDashboard","text":""},{"location":"API/dashboard/variable.html#fn-adhocgeneraloptionsshowondashboardwithlabelandvalue","title":"fn adhoc.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-adhocgeneraloptionsshowondashboardwithnothing","title":"fn adhoc.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-adhocgeneraloptionsshowondashboardwithvalueonly","title":"fn adhoc.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-constant","title":"obj constant","text":""},{"location":"API/dashboard/variable.html#fn-constantnew","title":"fn constant.new","text":"<pre><code>new(name, value)\n</code></pre> <p><code>new</code> creates a hidden constant template variable.</p>"},{"location":"API/dashboard/variable.html#obj-constantgeneraloptions","title":"obj constant.generalOptions","text":""},{"location":"API/dashboard/variable.html#fn-constantgeneraloptionswithdescription","title":"fn constant.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-constantgeneraloptionswithlabel","title":"fn constant.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-constantgeneraloptionswithname","title":"fn constant.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-constantgeneraloptionsshowondashboard","title":"obj constant.generalOptions.showOnDashboard","text":""},{"location":"API/dashboard/variable.html#fn-constantgeneraloptionsshowondashboardwithlabelandvalue","title":"fn constant.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-constantgeneraloptionsshowondashboardwithnothing","title":"fn constant.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-constantgeneraloptionsshowondashboardwithvalueonly","title":"fn constant.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-custom","title":"obj custom","text":""},{"location":"API/dashboard/variable.html#fn-customnew","title":"fn custom.new","text":"<pre><code>new(name, values)\n</code></pre> <p><code>new</code> creates a custom template variable.</p> <p>The <code>values</code> array accepts an object with key/value keys, if it's not an object then it will be added as a string.</p> <p>Example: <pre><code>[\n  { key: 'mykey', value: 'myvalue' },\n  'myvalue',\n  12,\n]\n\n\n#### obj custom.generalOptions\n\n\n##### fn custom.generalOptions.withDescription\n\n```ts\nwithDescription(value)\n</code></pre></p>"},{"location":"API/dashboard/variable.html#fn-customgeneraloptionswithlabel","title":"fn custom.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-customgeneraloptionswithname","title":"fn custom.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-customgeneraloptionsshowondashboard","title":"obj custom.generalOptions.showOnDashboard","text":""},{"location":"API/dashboard/variable.html#fn-customgeneraloptionsshowondashboardwithlabelandvalue","title":"fn custom.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-customgeneraloptionsshowondashboardwithnothing","title":"fn custom.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-customgeneraloptionsshowondashboardwithvalueonly","title":"fn custom.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-customselectionoptions","title":"obj custom.selectionOptions","text":""},{"location":"API/dashboard/variable.html#fn-customselectionoptionswithincludeall","title":"fn custom.selectionOptions.withIncludeAll","text":"<pre><code>withIncludeAll(value=true, customAllValue)\n</code></pre> <p><code>withIncludeAll</code> enables an option to include all variables.</p> <p>Optionally you can set a <code>customAllValue</code>.</p>"},{"location":"API/dashboard/variable.html#fn-customselectionoptionswithmulti","title":"fn custom.selectionOptions.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"API/dashboard/variable.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/dashboard/variable.html#fn-datasourcenew","title":"fn datasource.new","text":"<pre><code>new(name, type)\n</code></pre> <p><code>new</code> creates a datasource template variable.</p>"},{"location":"API/dashboard/variable.html#fn-datasourcewithregex","title":"fn datasource.withRegex","text":"<pre><code>withRegex(value)\n</code></pre> <p><code>withRegex</code> filter for which data source instances to choose from in the variable value list. Example: <code>/^prod/</code></p>"},{"location":"API/dashboard/variable.html#obj-datasourcegeneraloptions","title":"obj datasource.generalOptions","text":""},{"location":"API/dashboard/variable.html#fn-datasourcegeneraloptionswithdescription","title":"fn datasource.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-datasourcegeneraloptionswithlabel","title":"fn datasource.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-datasourcegeneraloptionswithname","title":"fn datasource.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-datasourcegeneraloptionsshowondashboard","title":"obj datasource.generalOptions.showOnDashboard","text":""},{"location":"API/dashboard/variable.html#fn-datasourcegeneraloptionsshowondashboardwithlabelandvalue","title":"fn datasource.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-datasourcegeneraloptionsshowondashboardwithnothing","title":"fn datasource.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-datasourcegeneraloptionsshowondashboardwithvalueonly","title":"fn datasource.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-datasourceselectionoptions","title":"obj datasource.selectionOptions","text":""},{"location":"API/dashboard/variable.html#fn-datasourceselectionoptionswithincludeall","title":"fn datasource.selectionOptions.withIncludeAll","text":"<pre><code>withIncludeAll(value=true, customAllValue)\n</code></pre> <p><code>withIncludeAll</code> enables an option to include all variables.</p> <p>Optionally you can set a <code>customAllValue</code>.</p>"},{"location":"API/dashboard/variable.html#fn-datasourceselectionoptionswithmulti","title":"fn datasource.selectionOptions.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"API/dashboard/variable.html#obj-interval","title":"obj interval","text":""},{"location":"API/dashboard/variable.html#fn-intervalnew","title":"fn interval.new","text":"<pre><code>new(name, values)\n</code></pre> <p><code>new</code> creates an interval template variable.</p>"},{"location":"API/dashboard/variable.html#fn-intervalwithautooption","title":"fn interval.withAutoOption","text":"<pre><code>withAutoOption(count, minInterval)\n</code></pre> <p><code>withAutoOption</code> adds an options to dynamically calculate interval by dividing time range by the count specified.</p> <p>`minInterval' has to be either unit-less or end with one of the following units: \"y, M, w, d, h, m, s, ms\".</p>"},{"location":"API/dashboard/variable.html#obj-intervalgeneraloptions","title":"obj interval.generalOptions","text":""},{"location":"API/dashboard/variable.html#fn-intervalgeneraloptionswithdescription","title":"fn interval.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-intervalgeneraloptionswithlabel","title":"fn interval.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-intervalgeneraloptionswithname","title":"fn interval.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-intervalgeneraloptionsshowondashboard","title":"obj interval.generalOptions.showOnDashboard","text":""},{"location":"API/dashboard/variable.html#fn-intervalgeneraloptionsshowondashboardwithlabelandvalue","title":"fn interval.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-intervalgeneraloptionsshowondashboardwithnothing","title":"fn interval.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-intervalgeneraloptionsshowondashboardwithvalueonly","title":"fn interval.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-query","title":"obj query","text":""},{"location":"API/dashboard/variable.html#fn-querynew","title":"fn query.new","text":"<pre><code>new(name, query=\"\")\n</code></pre> <p>Create a query template variable.</p> <p><code>query</code> argument is optional, this can also be set with <code>query.queryTypes</code>.</p>"},{"location":"API/dashboard/variable.html#fn-querywithdatasource","title":"fn query.withDatasource","text":"<pre><code>withDatasource(type, uid)\n</code></pre> <p>Select a datasource for the variable template query.</p>"},{"location":"API/dashboard/variable.html#fn-querywithdatasourcefromvariable","title":"fn query.withDatasourceFromVariable","text":"<pre><code>withDatasourceFromVariable(variable)\n</code></pre> <p>Select the datasource from another template variable.</p>"},{"location":"API/dashboard/variable.html#fn-querywithregex","title":"fn query.withRegex","text":"<pre><code>withRegex(value)\n</code></pre> <p><code>withRegex</code> can extract part of a series name or metric node segment. Named capture groups can be used to separate the display text and value (see examples).</p>"},{"location":"API/dashboard/variable.html#fn-querywithsort","title":"fn query.withSort","text":"<pre><code>withSort(i=0, type=\"alphabetical\", asc=true, caseInsensitive=false)\n</code></pre> <p>Choose how to sort the values in the dropdown.</p> <p>This can be called as <code>withSort(&lt;number&gt;) to use the integer values for each option. If</code>i==0` then it will be ignored and the other arguments will take precedence.</p> <p>The numerical values are:</p> <ul> <li>1 - Alphabetical (asc)</li> <li>2 - Alphabetical (desc)</li> <li>3 - Numerical (asc)</li> <li>4 - Numerical (desc)</li> <li>5 - Alphabetical (case-insensitive, asc)</li> <li>6 - Alphabetical (case-insensitive, desc)</li> </ul>"},{"location":"API/dashboard/variable.html#obj-querygeneraloptions","title":"obj query.generalOptions","text":""},{"location":"API/dashboard/variable.html#fn-querygeneraloptionswithdescription","title":"fn query.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-querygeneraloptionswithlabel","title":"fn query.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-querygeneraloptionswithname","title":"fn query.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-querygeneraloptionsshowondashboard","title":"obj query.generalOptions.showOnDashboard","text":""},{"location":"API/dashboard/variable.html#fn-querygeneraloptionsshowondashboardwithlabelandvalue","title":"fn query.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-querygeneraloptionsshowondashboardwithnothing","title":"fn query.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-querygeneraloptionsshowondashboardwithvalueonly","title":"fn query.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-queryquerytypes","title":"obj query.queryTypes","text":""},{"location":"API/dashboard/variable.html#fn-queryquerytypeswithlabelvalues","title":"fn query.queryTypes.withLabelValues","text":"<pre><code>withLabelValues(label, metric)\n</code></pre> <p>Construct a Prometheus template variable using <code>label_values()</code>.</p>"},{"location":"API/dashboard/variable.html#obj-queryrefresh","title":"obj query.refresh","text":""},{"location":"API/dashboard/variable.html#fn-queryrefreshonload","title":"fn query.refresh.onLoad","text":"<pre><code>onLoad()\n</code></pre> <p>Refresh label values on dashboard load.</p>"},{"location":"API/dashboard/variable.html#fn-queryrefreshontime","title":"fn query.refresh.onTime","text":"<pre><code>onTime()\n</code></pre> <p>Refresh label values on time range change.</p>"},{"location":"API/dashboard/variable.html#obj-queryselectionoptions","title":"obj query.selectionOptions","text":""},{"location":"API/dashboard/variable.html#fn-queryselectionoptionswithincludeall","title":"fn query.selectionOptions.withIncludeAll","text":"<pre><code>withIncludeAll(value=true, customAllValue)\n</code></pre> <p><code>withIncludeAll</code> enables an option to include all variables.</p> <p>Optionally you can set a <code>customAllValue</code>.</p>"},{"location":"API/dashboard/variable.html#fn-queryselectionoptionswithmulti","title":"fn query.selectionOptions.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"API/dashboard/variable.html#obj-textbox","title":"obj textbox","text":""},{"location":"API/dashboard/variable.html#fn-textboxnew","title":"fn textbox.new","text":"<pre><code>new(name, default=\"\")\n</code></pre> <p><code>new</code> creates a textbox template variable.</p>"},{"location":"API/dashboard/variable.html#obj-textboxgeneraloptions","title":"obj textbox.generalOptions","text":""},{"location":"API/dashboard/variable.html#fn-textboxgeneraloptionswithdescription","title":"fn textbox.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-textboxgeneraloptionswithlabel","title":"fn textbox.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-textboxgeneraloptionswithname","title":"fn textbox.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/dashboard/variable.html#obj-textboxgeneraloptionsshowondashboard","title":"obj textbox.generalOptions.showOnDashboard","text":""},{"location":"API/dashboard/variable.html#fn-textboxgeneraloptionsshowondashboardwithlabelandvalue","title":"fn textbox.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-textboxgeneraloptionsshowondashboardwithnothing","title":"fn textbox.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"API/dashboard/variable.html#fn-textboxgeneraloptionsshowondashboardwithvalueonly","title":"fn textbox.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"API/panel/index.html","title":"panel","text":"<p>grafonnet.panel</p>"},{"location":"API/panel/index.html#subpackages","title":"Subpackages","text":"<ul> <li>alertGroups</li> <li>annotationsList</li> <li>barChart</li> <li>barGauge</li> <li>candlestick</li> <li>canvas</li> <li>dashboardList</li> <li>debug</li> <li>gauge</li> <li>geomap</li> <li>heatmap</li> <li>histogram</li> <li>logs</li> <li>news</li> <li>nodeGraph</li> <li>pieChart</li> <li>row</li> <li>stat</li> <li>stateTimeline</li> <li>statusHistory</li> <li>table</li> <li>text</li> <li>timeSeries</li> <li>xyChart</li> </ul>"},{"location":"API/panel/row.html","title":"row","text":"<p>grafonnet.panel.row</p>"},{"location":"API/panel/row.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withCollapsed(value=false)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPanels(value)</code></li> <li><code>fn withPanelsMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> </ul>"},{"location":"API/panel/row.html#fields","title":"Fields","text":""},{"location":"API/panel/row.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new row panel with a title.</p>"},{"location":"API/panel/row.html#fn-withcollapsed","title":"fn withCollapsed","text":"<pre><code>withCollapsed(value=false)\n</code></pre>"},{"location":"API/panel/row.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Name of default datasource.</p>"},{"location":"API/panel/row.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Name of default datasource.</p>"},{"location":"API/panel/row.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"API/panel/row.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"API/panel/row.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/panel/row.html#fn-withpanels","title":"fn withPanels","text":"<pre><code>withPanels(value)\n</code></pre>"},{"location":"API/panel/row.html#fn-withpanelsmixin","title":"fn withPanelsMixin","text":"<pre><code>withPanelsMixin(value)\n</code></pre>"},{"location":"API/panel/row.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/row.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/row.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"API/panel/row.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/row.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/row.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/row.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/row.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/row.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/row.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/row.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/row.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/alertGroups/index.html","title":"alertGroups","text":"<p>grafonnet.panel.alertGroups</p>"},{"location":"API/panel/alertGroups/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/alertGroups/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withAlertmanager(value)</code></li> <li><code>fn withExpandAll(value)</code></li> <li><code>fn withLabels(value)</code></li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/alertGroups/index.html#fields","title":"Fields","text":""},{"location":"API/panel/alertGroups/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new alertGroups panel with a title.</p>"},{"location":"API/panel/alertGroups/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/alertGroups/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/alertGroups/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/alertGroups/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/alertGroups/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/alertGroups/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/alertGroups/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/alertGroups/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/alertGroups/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/alertGroups/index.html#fn-optionswithalertmanager","title":"fn options.withAlertmanager","text":"<pre><code>withAlertmanager(value)\n</code></pre> <p>Name of the alertmanager used as a source for alerts</p>"},{"location":"API/panel/alertGroups/index.html#fn-optionswithexpandall","title":"fn options.withExpandAll","text":"<pre><code>withExpandAll(value)\n</code></pre> <p>Expand all alert groups by default</p>"},{"location":"API/panel/alertGroups/index.html#fn-optionswithlabels","title":"fn options.withLabels","text":"<pre><code>withLabels(value)\n</code></pre> <p>Comma-separated list of values used to filter alert results</p>"},{"location":"API/panel/alertGroups/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/alertGroups/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/alertGroups/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/alertGroups/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/alertGroups/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/alertGroups/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/alertGroups/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/alertGroups/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/alertGroups/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/alertGroups/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/alertGroups/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/alertGroups/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/alertGroups/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/alertGroups/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/alertGroups/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/alertGroups/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/alertGroups/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/alertGroups/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/alertGroups/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/alertGroups/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/alertGroups/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/alertGroups/link.html","title":"link","text":""},{"location":"API/panel/alertGroups/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/alertGroups/link.html#fields","title":"Fields","text":""},{"location":"API/panel/alertGroups/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/alertGroups/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/alertGroups/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/alertGroups/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/alertGroups/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/alertGroups/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/alertGroups/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/alertGroups/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/alertGroups/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/alertGroups/transformation.html","title":"transformation","text":""},{"location":"API/panel/alertGroups/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/alertGroups/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/alertGroups/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/alertGroups/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/alertGroups/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/alertGroups/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/alertGroups/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/alertGroups/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/alertGroups/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/alertGroups/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/alertGroups/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/alertGroups/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/alertGroups/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/alertGroups/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html","title":"annotationsList","text":"<p>grafonnet.panel.annotationsList</p>"},{"location":"API/panel/annotationsList/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/annotationsList/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withLimit(value=10)</code></li> <li><code>fn withNavigateAfter(value=\"10m\")</code></li> <li><code>fn withNavigateBefore(value=\"10m\")</code></li> <li><code>fn withNavigateToPanel(value=true)</code></li> <li><code>fn withOnlyFromThisDashboard(value=false)</code></li> <li><code>fn withOnlyInTimeRange(value=false)</code></li> <li><code>fn withShowTags(value=true)</code></li> <li><code>fn withShowTime(value=true)</code></li> <li><code>fn withShowUser(value=true)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/annotationsList/index.html#fields","title":"Fields","text":""},{"location":"API/panel/annotationsList/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new annotationsList panel with a title.</p>"},{"location":"API/panel/annotationsList/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/annotationsList/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/annotationsList/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/annotationsList/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/annotationsList/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/annotationsList/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/annotationsList/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/annotationsList/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/annotationsList/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/annotationsList/index.html#fn-optionswithlimit","title":"fn options.withLimit","text":"<pre><code>withLimit(value=10)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithnavigateafter","title":"fn options.withNavigateAfter","text":"<pre><code>withNavigateAfter(value=\"10m\")\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithnavigatebefore","title":"fn options.withNavigateBefore","text":"<pre><code>withNavigateBefore(value=\"10m\")\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithnavigatetopanel","title":"fn options.withNavigateToPanel","text":"<pre><code>withNavigateToPanel(value=true)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithonlyfromthisdashboard","title":"fn options.withOnlyFromThisDashboard","text":"<pre><code>withOnlyFromThisDashboard(value=false)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithonlyintimerange","title":"fn options.withOnlyInTimeRange","text":"<pre><code>withOnlyInTimeRange(value=false)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithshowtags","title":"fn options.withShowTags","text":"<pre><code>withShowTags(value=true)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithshowtime","title":"fn options.withShowTime","text":"<pre><code>withShowTime(value=true)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithshowuser","title":"fn options.withShowUser","text":"<pre><code>withShowUser(value=true)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithtags","title":"fn options.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-optionswithtagsmixin","title":"fn options.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/annotationsList/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/annotationsList/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/annotationsList/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/annotationsList/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/annotationsList/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/annotationsList/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/annotationsList/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/annotationsList/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/annotationsList/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/annotationsList/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/annotationsList/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/annotationsList/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/annotationsList/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/annotationsList/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/annotationsList/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/annotationsList/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/annotationsList/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/annotationsList/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/annotationsList/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/annotationsList/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/annotationsList/link.html","title":"link","text":""},{"location":"API/panel/annotationsList/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/annotationsList/link.html#fields","title":"Fields","text":""},{"location":"API/panel/annotationsList/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/annotationsList/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/annotationsList/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/annotationsList/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/annotationsList/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/annotationsList/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/annotationsList/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/annotationsList/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/annotationsList/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/annotationsList/transformation.html","title":"transformation","text":""},{"location":"API/panel/annotationsList/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/annotationsList/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/annotationsList/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/annotationsList/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/annotationsList/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/annotationsList/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/annotationsList/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/annotationsList/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/annotationsList/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/annotationsList/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/annotationsList/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/annotationsList/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/annotationsList/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/annotationsList/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html","title":"barChart","text":"<p>grafonnet.panel.barChart</p>"},{"location":"API/panel/barChart/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/barChart/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>obj defaults</code><ul> <li><code>obj custom</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withFillOpacity(value=80)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withThresholdsStyle(value)</code></li> <li><code>fn withThresholdsStyleMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholdsStyle</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withBarRadius(value=0)</code></li> <li><code>fn withBarWidth(value=0.97)</code></li> <li><code>fn withColorByField(value)</code></li> <li><code>fn withFullHighlight(value=false)</code></li> <li><code>fn withGroupWidth(value=0.7)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withStacking(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withXField(value)</code></li> <li><code>fn withXTickLabelMaxLength(value)</code></li> <li><code>fn withXTickLabelRotation(value=0)</code></li> <li><code>fn withXTickLabelSpacing(value=0)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/barChart/index.html#fields","title":"Fields","text":""},{"location":"API/panel/barChart/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new barChart panel with a title.</p>"},{"location":"API/panel/barChart/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/barChart/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"API/panel/barChart/index.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"API/panel/barChart/index.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=80)\n</code></pre> <p>Controls the fill opacity of the bars.</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"opacity\", \"hue\", \"scheme\"</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre> <p>Controls line width of the bars.</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwiththresholdsstyle","title":"fn fieldConfig.defaults.custom.withThresholdsStyle","text":"<pre><code>withThresholdsStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomwiththresholdsstylemixin","title":"fn fieldConfig.defaults.custom.withThresholdsStyleMixin","text":"<pre><code>withThresholdsStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/barChart/index.html#obj-fieldconfigdefaultscustomthresholdsstyle","title":"obj fieldConfig.defaults.custom.thresholdsStyle","text":""},{"location":"API/panel/barChart/index.html#fn-fieldconfigdefaultscustomthresholdsstylewithmode","title":"# fn fieldConfig.defaults.custom.thresholdsStyle.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"off\", \"line\", \"dashed\", \"area\", \"line+area\", \"dashed+area\", \"series\"</p>"},{"location":"API/panel/barChart/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/barChart/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/barChart/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/barChart/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/barChart/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/barChart/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/barChart/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/barChart/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/barChart/index.html#fn-optionswithbarradius","title":"fn options.withBarRadius","text":"<pre><code>withBarRadius(value=0)\n</code></pre> <p>Controls the radius of each bar.</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithbarwidth","title":"fn options.withBarWidth","text":"<pre><code>withBarWidth(value=0.97)\n</code></pre> <p>Controls the width of bars. 1 = Max width, 0 = Min width.</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithcolorbyfield","title":"fn options.withColorByField","text":"<pre><code>withColorByField(value)\n</code></pre> <p>Use the color value for a sibling field to color each bar value.</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithfullhighlight","title":"fn options.withFullHighlight","text":"<pre><code>withFullHighlight(value=false)\n</code></pre> <p>Enables mode which highlights the entire bar area and shows tooltip when cursor hovers over highlighted area</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithgroupwidth","title":"fn options.withGroupWidth","text":"<pre><code>withGroupWidth(value=0.7)\n</code></pre> <p>Controls the width of groups. 1 = max with, 0 = min width.</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithstacking","title":"fn options.withStacking","text":"<pre><code>withStacking(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"normal\", \"percent\"</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithxfield","title":"fn options.withXField","text":"<pre><code>withXField(value)\n</code></pre> <p>Manually select which field from the dataset to represent the x field.</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithxticklabelmaxlength","title":"fn options.withXTickLabelMaxLength","text":"<pre><code>withXTickLabelMaxLength(value)\n</code></pre> <p>Sets the max length that a label can have before it is truncated.</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithxticklabelrotation","title":"fn options.withXTickLabelRotation","text":"<pre><code>withXTickLabelRotation(value=0)\n</code></pre> <p>Controls the rotation of the x axis labels.</p>"},{"location":"API/panel/barChart/index.html#fn-optionswithxticklabelspacing","title":"fn options.withXTickLabelSpacing","text":"<pre><code>withXTickLabelSpacing(value=0)\n</code></pre> <p>Controls the spacing between x axis labels. negative values indicate backwards skipping behavior</p>"},{"location":"API/panel/barChart/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/barChart/index.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#obj-optionstext","title":"obj options.text","text":""},{"location":"API/panel/barChart/index.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"API/panel/barChart/index.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"API/panel/barChart/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/barChart/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"API/panel/barChart/index.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"API/panel/barChart/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/barChart/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/barChart/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/barChart/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/barChart/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/barChart/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/barChart/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/barChart/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/barChart/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/barChart/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/barChart/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/barChart/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/barChart/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/barChart/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/barChart/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/barChart/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/barChart/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/barChart/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/barChart/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/barChart/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/barChart/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barChart/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/barChart/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barChart/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/barChart/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barChart/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/barChart/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barChart/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/barChart/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barChart/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barChart/link.html","title":"link","text":""},{"location":"API/panel/barChart/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/barChart/link.html#fields","title":"Fields","text":""},{"location":"API/panel/barChart/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/barChart/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/barChart/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/barChart/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/barChart/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/barChart/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/barChart/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/barChart/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/barChart/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/barChart/transformation.html","title":"transformation","text":""},{"location":"API/panel/barChart/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/barChart/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/barChart/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/barChart/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/barChart/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/barChart/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/barChart/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/barChart/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/barChart/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/barChart/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/barChart/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/barChart/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barChart/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/barChart/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barChart/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html","title":"barGauge","text":"<p>grafonnet.panel.barGauge</p>"},{"location":"API/panel/barGauge/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/barGauge/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withMinVizHeight(value=10)</code></li> <li><code>fn withMinVizWidth(value=0)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withShowUnfilled(value=true)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withValueMode(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/barGauge/index.html#fields","title":"Fields","text":""},{"location":"API/panel/barGauge/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new barGauge panel with a title.</p>"},{"location":"API/panel/barGauge/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/barGauge/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/barGauge/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/barGauge/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/barGauge/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/barGauge/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/barGauge/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/barGauge/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/barGauge/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/barGauge/index.html#fn-optionswithdisplaymode","title":"fn options.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>Enum expressing the possible display modes for the bar gauge component of Grafana UI</p> <p>Accepted values for <code>value</code> are \"basic\", \"lcd\", \"gradient\"</p>"},{"location":"API/panel/barGauge/index.html#fn-optionswithminvizheight","title":"fn options.withMinVizHeight","text":"<pre><code>withMinVizHeight(value=10)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-optionswithminvizwidth","title":"fn options.withMinVizWidth","text":"<pre><code>withMinVizWidth(value=0)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"API/panel/barGauge/index.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/index.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/index.html#fn-optionswithshowunfilled","title":"fn options.withShowUnfilled","text":"<pre><code>withShowUnfilled(value=true)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/index.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/index.html#fn-optionswithvaluemode","title":"fn options.withValueMode","text":"<pre><code>withValueMode(value)\n</code></pre> <p>Allows for the table cell gauge display type to set the gauge mode.</p> <p>Accepted values for <code>value</code> are \"color\", \"text\", \"hidden\"</p>"},{"location":"API/panel/barGauge/index.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"API/panel/barGauge/index.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/barGauge/index.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/barGauge/index.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"API/panel/barGauge/index.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"API/panel/barGauge/index.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"API/panel/barGauge/index.html#obj-optionstext","title":"obj options.text","text":""},{"location":"API/panel/barGauge/index.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"API/panel/barGauge/index.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"API/panel/barGauge/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/barGauge/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/barGauge/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/barGauge/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/barGauge/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/barGauge/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/barGauge/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/barGauge/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/barGauge/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/barGauge/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/barGauge/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/barGauge/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/barGauge/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/barGauge/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/barGauge/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/barGauge/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/barGauge/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/barGauge/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/barGauge/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/barGauge/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/barGauge/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/barGauge/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/barGauge/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/barGauge/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/barGauge/link.html","title":"link","text":""},{"location":"API/panel/barGauge/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/barGauge/link.html#fields","title":"Fields","text":""},{"location":"API/panel/barGauge/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/barGauge/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/barGauge/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/barGauge/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/barGauge/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/barGauge/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/barGauge/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/barGauge/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/barGauge/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/barGauge/transformation.html","title":"transformation","text":""},{"location":"API/panel/barGauge/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/barGauge/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/barGauge/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/barGauge/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/barGauge/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/barGauge/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/barGauge/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/barGauge/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/barGauge/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/barGauge/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/barGauge/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/barGauge/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/barGauge/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/barGauge/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/barGauge/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html","title":"candlestick","text":"<p>grafonnet.panel.candlestick</p>"},{"location":"API/panel/candlestick/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/candlestick/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/candlestick/index.html#fields","title":"Fields","text":""},{"location":"API/panel/candlestick/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new candlestick panel with a title.</p>"},{"location":"API/panel/candlestick/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/candlestick/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/candlestick/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/candlestick/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/candlestick/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/candlestick/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/candlestick/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/candlestick/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/candlestick/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/candlestick/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/candlestick/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/candlestick/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/candlestick/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/candlestick/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/candlestick/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/candlestick/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/candlestick/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/candlestick/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/candlestick/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/candlestick/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/candlestick/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/candlestick/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/candlestick/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/candlestick/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/candlestick/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/candlestick/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/candlestick/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/candlestick/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/candlestick/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/candlestick/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/candlestick/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/candlestick/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/candlestick/link.html","title":"link","text":""},{"location":"API/panel/candlestick/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/candlestick/link.html#fields","title":"Fields","text":""},{"location":"API/panel/candlestick/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/candlestick/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/candlestick/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/candlestick/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/candlestick/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/candlestick/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/candlestick/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/candlestick/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/candlestick/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/candlestick/transformation.html","title":"transformation","text":""},{"location":"API/panel/candlestick/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/candlestick/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/candlestick/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/candlestick/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/candlestick/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/candlestick/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/candlestick/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/candlestick/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/candlestick/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/candlestick/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/candlestick/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/candlestick/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/candlestick/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/candlestick/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/candlestick/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html","title":"canvas","text":"<p>grafonnet.panel.canvas</p>"},{"location":"API/panel/canvas/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/canvas/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/canvas/index.html#fields","title":"Fields","text":""},{"location":"API/panel/canvas/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new canvas panel with a title.</p>"},{"location":"API/panel/canvas/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/canvas/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/canvas/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/canvas/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/canvas/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/canvas/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/canvas/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/canvas/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/canvas/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/canvas/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/canvas/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/canvas/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/canvas/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/canvas/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/canvas/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/canvas/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/canvas/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/canvas/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/canvas/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/canvas/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/canvas/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/canvas/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/canvas/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/canvas/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/canvas/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/canvas/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/canvas/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/canvas/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/canvas/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/canvas/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/canvas/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/canvas/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/canvas/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/canvas/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/canvas/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/canvas/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/canvas/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/canvas/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/canvas/link.html","title":"link","text":""},{"location":"API/panel/canvas/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/canvas/link.html#fields","title":"Fields","text":""},{"location":"API/panel/canvas/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/canvas/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/canvas/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/canvas/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/canvas/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/canvas/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/canvas/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/canvas/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/canvas/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/canvas/transformation.html","title":"transformation","text":""},{"location":"API/panel/canvas/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/canvas/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/canvas/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/canvas/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/canvas/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/canvas/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/canvas/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/canvas/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/canvas/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/canvas/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/canvas/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/canvas/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/canvas/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/canvas/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/canvas/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html","title":"dashboardList","text":"<p>grafonnet.panel.dashboardList</p>"},{"location":"API/panel/dashboardList/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/dashboardList/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withFolderId(value)</code></li> <li><code>fn withLayout(value)</code></li> <li><code>fn withMaxItems(value=10)</code></li> <li><code>fn withQuery(value=\"\")</code></li> <li><code>fn withShowHeadings(value=true)</code></li> <li><code>fn withShowRecentlyViewed(value=false)</code></li> <li><code>fn withShowSearch(value=false)</code></li> <li><code>fn withShowStarred(value=true)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/dashboardList/index.html#fields","title":"Fields","text":""},{"location":"API/panel/dashboardList/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new dashboardList panel with a title.</p>"},{"location":"API/panel/dashboardList/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/dashboardList/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/dashboardList/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/dashboardList/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/dashboardList/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/dashboardList/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/dashboardList/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/dashboardList/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/dashboardList/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/dashboardList/index.html#fn-optionswithfolderid","title":"fn options.withFolderId","text":"<pre><code>withFolderId(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithlayout","title":"fn options.withLayout","text":"<pre><code>withLayout(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"list\", \"previews\"</p>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithmaxitems","title":"fn options.withMaxItems","text":"<pre><code>withMaxItems(value=10)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithquery","title":"fn options.withQuery","text":"<pre><code>withQuery(value=\"\")\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithshowheadings","title":"fn options.withShowHeadings","text":"<pre><code>withShowHeadings(value=true)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithshowrecentlyviewed","title":"fn options.withShowRecentlyViewed","text":"<pre><code>withShowRecentlyViewed(value=false)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithshowsearch","title":"fn options.withShowSearch","text":"<pre><code>withShowSearch(value=false)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithshowstarred","title":"fn options.withShowStarred","text":"<pre><code>withShowStarred(value=true)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithtags","title":"fn options.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-optionswithtagsmixin","title":"fn options.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/dashboardList/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/dashboardList/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/dashboardList/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/dashboardList/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/dashboardList/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/dashboardList/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/dashboardList/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/dashboardList/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/dashboardList/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/dashboardList/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/dashboardList/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/dashboardList/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/dashboardList/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/dashboardList/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/dashboardList/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/dashboardList/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/dashboardList/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/dashboardList/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/dashboardList/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/dashboardList/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/dashboardList/link.html","title":"link","text":""},{"location":"API/panel/dashboardList/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/dashboardList/link.html#fields","title":"Fields","text":""},{"location":"API/panel/dashboardList/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/dashboardList/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/dashboardList/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/dashboardList/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/dashboardList/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/dashboardList/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/dashboardList/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/dashboardList/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/dashboardList/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/dashboardList/transformation.html","title":"transformation","text":""},{"location":"API/panel/dashboardList/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/dashboardList/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/dashboardList/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/dashboardList/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/dashboardList/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/dashboardList/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/dashboardList/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/dashboardList/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/dashboardList/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/dashboardList/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/dashboardList/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/dashboardList/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/dashboardList/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/dashboardList/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/debug/index.html","title":"debug","text":"<p>grafonnet.panel.debug</p>"},{"location":"API/panel/debug/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/debug/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCounters(value)</code></li> <li><code>fn withCountersMixin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>obj counters</code><ul> <li><code>fn withDataChanged(value)</code></li> <li><code>fn withRender(value)</code></li> <li><code>fn withSchemaChanged(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/debug/index.html#fields","title":"Fields","text":""},{"location":"API/panel/debug/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new debug panel with a title.</p>"},{"location":"API/panel/debug/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/debug/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/debug/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/debug/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/debug/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/debug/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/debug/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/debug/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/debug/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/debug/index.html#fn-optionswithcounters","title":"fn options.withCounters","text":"<pre><code>withCounters(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-optionswithcountersmixin","title":"fn options.withCountersMixin","text":"<pre><code>withCountersMixin(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-optionswithmode","title":"fn options.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"render\", \"events\", \"cursor\", \"State\", \"ThrowError\"</p>"},{"location":"API/panel/debug/index.html#obj-optionscounters","title":"obj options.counters","text":""},{"location":"API/panel/debug/index.html#fn-optionscounterswithdatachanged","title":"fn options.counters.withDataChanged","text":"<pre><code>withDataChanged(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-optionscounterswithrender","title":"fn options.counters.withRender","text":"<pre><code>withRender(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-optionscounterswithschemachanged","title":"fn options.counters.withSchemaChanged","text":"<pre><code>withSchemaChanged(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/debug/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/debug/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/debug/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/debug/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/debug/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/debug/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/debug/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/debug/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/debug/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/debug/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/debug/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/debug/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/debug/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/debug/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/debug/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/debug/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/debug/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/debug/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/debug/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/debug/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/debug/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/debug/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/debug/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/debug/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/debug/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/debug/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/debug/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/debug/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/debug/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/debug/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/debug/link.html","title":"link","text":""},{"location":"API/panel/debug/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/debug/link.html#fields","title":"Fields","text":""},{"location":"API/panel/debug/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/debug/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/debug/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/debug/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/debug/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/debug/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/debug/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/debug/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/debug/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/debug/transformation.html","title":"transformation","text":""},{"location":"API/panel/debug/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/debug/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/debug/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/debug/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/debug/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/debug/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/debug/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/debug/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/debug/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/debug/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/debug/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/debug/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/debug/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/debug/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/debug/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/debug/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/debug/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/debug/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/debug/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/debug/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html","title":"gauge","text":"<p>grafonnet.panel.gauge</p>"},{"location":"API/panel/gauge/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/gauge/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withShowThresholdLabels(value=false)</code></li> <li><code>fn withShowThresholdMarkers(value=true)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/gauge/index.html#fields","title":"Fields","text":""},{"location":"API/panel/gauge/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new gauge panel with a title.</p>"},{"location":"API/panel/gauge/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/gauge/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/gauge/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/gauge/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/gauge/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/gauge/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/gauge/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/gauge/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/gauge/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/gauge/index.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"API/panel/gauge/index.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/index.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/index.html#fn-optionswithshowthresholdlabels","title":"fn options.withShowThresholdLabels","text":"<pre><code>withShowThresholdLabels(value=false)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-optionswithshowthresholdmarkers","title":"fn options.withShowThresholdMarkers","text":"<pre><code>withShowThresholdMarkers(value=true)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/index.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/index.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"API/panel/gauge/index.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/gauge/index.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/gauge/index.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"API/panel/gauge/index.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"API/panel/gauge/index.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"API/panel/gauge/index.html#obj-optionstext","title":"obj options.text","text":""},{"location":"API/panel/gauge/index.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"API/panel/gauge/index.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"API/panel/gauge/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/gauge/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/gauge/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/gauge/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/gauge/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/gauge/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/gauge/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/gauge/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/gauge/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/gauge/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/gauge/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/gauge/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/gauge/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/gauge/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/gauge/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/gauge/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/gauge/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/gauge/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/gauge/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/gauge/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/gauge/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/gauge/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/gauge/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/gauge/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/gauge/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/gauge/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/gauge/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/gauge/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/gauge/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/gauge/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/gauge/link.html","title":"link","text":""},{"location":"API/panel/gauge/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/gauge/link.html#fields","title":"Fields","text":""},{"location":"API/panel/gauge/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/gauge/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/gauge/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/gauge/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/gauge/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/gauge/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/gauge/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/gauge/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/gauge/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/gauge/transformation.html","title":"transformation","text":""},{"location":"API/panel/gauge/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/gauge/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/gauge/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/gauge/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/gauge/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/gauge/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/gauge/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/gauge/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/gauge/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/gauge/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/gauge/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/gauge/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/gauge/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/gauge/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/gauge/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html","title":"geomap","text":"<p>grafonnet.panel.geomap</p>"},{"location":"API/panel/geomap/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/geomap/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withBasemap(value)</code></li> <li><code>fn withBasemapMixin(value)</code></li> <li><code>fn withControls(value)</code></li> <li><code>fn withControlsMixin(value)</code></li> <li><code>fn withLayers(value)</code></li> <li><code>fn withLayersMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withView(value)</code></li> <li><code>fn withViewMixin(value)</code></li> <li><code>obj basemap</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withFilterData(value)</code></li> <li><code>fn withLocation(value)</code></li> <li><code>fn withLocationMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOpacity(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj location</code><ul> <li><code>fn withGazetteer(value)</code></li> <li><code>fn withGeohash(value)</code></li> <li><code>fn withLatitude(value)</code></li> <li><code>fn withLongitude(value)</code></li> <li><code>fn withLookup(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withWkt(value)</code></li> </ul> </li> </ul> </li> <li><code>obj controls</code><ul> <li><code>fn withMouseWheelZoom(value)</code></li> <li><code>fn withShowAttribution(value)</code></li> <li><code>fn withShowDebug(value)</code></li> <li><code>fn withShowMeasure(value)</code></li> <li><code>fn withShowScale(value)</code></li> <li><code>fn withShowZoom(value)</code></li> </ul> </li> <li><code>obj layers</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withFilterData(value)</code></li> <li><code>fn withLocation(value)</code></li> <li><code>fn withLocationMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOpacity(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj location</code><ul> <li><code>fn withGazetteer(value)</code></li> <li><code>fn withGeohash(value)</code></li> <li><code>fn withLatitude(value)</code></li> <li><code>fn withLongitude(value)</code></li> <li><code>fn withLookup(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withWkt(value)</code></li> </ul> </li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj view</code><ul> <li><code>fn withAllLayers(value=true)</code></li> <li><code>fn withId(value=\"zero\")</code></li> <li><code>fn withLastOnly(value)</code></li> <li><code>fn withLat(value=0)</code></li> <li><code>fn withLayer(value)</code></li> <li><code>fn withLon(value=0)</code></li> <li><code>fn withMaxZoom(value)</code></li> <li><code>fn withMinZoom(value)</code></li> <li><code>fn withPadding(value)</code></li> <li><code>fn withShared(value)</code></li> <li><code>fn withZoom(value=1)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/geomap/index.html#fields","title":"Fields","text":""},{"location":"API/panel/geomap/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new geomap panel with a title.</p>"},{"location":"API/panel/geomap/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/geomap/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/geomap/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/geomap/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/geomap/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/geomap/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/geomap/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/geomap/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/geomap/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/geomap/index.html#fn-optionswithbasemap","title":"fn options.withBasemap","text":"<pre><code>withBasemap(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithbasemapmixin","title":"fn options.withBasemapMixin","text":"<pre><code>withBasemapMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithcontrols","title":"fn options.withControls","text":"<pre><code>withControls(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithcontrolsmixin","title":"fn options.withControlsMixin","text":"<pre><code>withControlsMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithlayers","title":"fn options.withLayers","text":"<pre><code>withLayers(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithlayersmixin","title":"fn options.withLayersMixin","text":"<pre><code>withLayersMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithview","title":"fn options.withView","text":"<pre><code>withView(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionswithviewmixin","title":"fn options.withViewMixin","text":"<pre><code>withViewMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-optionsbasemap","title":"obj options.basemap","text":""},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithconfig","title":"fn options.basemap.withConfig","text":"<pre><code>withConfig(value)\n</code></pre> <p>Custom options depending on the type</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithfilterdata","title":"fn options.basemap.withFilterData","text":"<pre><code>withFilterData(value)\n</code></pre> <p>Defines a frame MatcherConfig that may filter data for the given layer</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithlocation","title":"fn options.basemap.withLocation","text":"<pre><code>withLocation(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithlocationmixin","title":"fn options.basemap.withLocationMixin","text":"<pre><code>withLocationMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithname","title":"fn options.basemap.withName","text":"<pre><code>withName(value)\n</code></pre> <p>configured unique display name</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithopacity","title":"fn options.basemap.withOpacity","text":"<pre><code>withOpacity(value)\n</code></pre> <p>Common properties: https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html Layer opacity (0-1)</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithtooltip","title":"fn options.basemap.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Check tooltip (defaults to true)</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemapwithtype","title":"fn options.basemap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-optionsbasemaplocation","title":"obj options.basemap.location","text":""},{"location":"API/panel/geomap/index.html#fn-optionsbasemaplocationwithgazetteer","title":"fn options.basemap.location.withGazetteer","text":"<pre><code>withGazetteer(value)\n</code></pre> <p>Path to Gazetteer</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemaplocationwithgeohash","title":"fn options.basemap.location.withGeohash","text":"<pre><code>withGeohash(value)\n</code></pre> <p>Field mappings</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemaplocationwithlatitude","title":"fn options.basemap.location.withLatitude","text":"<pre><code>withLatitude(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemaplocationwithlongitude","title":"fn options.basemap.location.withLongitude","text":"<pre><code>withLongitude(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemaplocationwithlookup","title":"fn options.basemap.location.withLookup","text":"<pre><code>withLookup(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemaplocationwithmode","title":"fn options.basemap.location.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"auto\", \"geohash\", \"coords\", \"lookup\"</p>"},{"location":"API/panel/geomap/index.html#fn-optionsbasemaplocationwithwkt","title":"fn options.basemap.location.withWkt","text":"<pre><code>withWkt(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-optionscontrols","title":"obj options.controls","text":""},{"location":"API/panel/geomap/index.html#fn-optionscontrolswithmousewheelzoom","title":"fn options.controls.withMouseWheelZoom","text":"<pre><code>withMouseWheelZoom(value)\n</code></pre> <p>let the mouse wheel zoom</p>"},{"location":"API/panel/geomap/index.html#fn-optionscontrolswithshowattribution","title":"fn options.controls.withShowAttribution","text":"<pre><code>withShowAttribution(value)\n</code></pre> <p>Lower right</p>"},{"location":"API/panel/geomap/index.html#fn-optionscontrolswithshowdebug","title":"fn options.controls.withShowDebug","text":"<pre><code>withShowDebug(value)\n</code></pre> <p>Show debug</p>"},{"location":"API/panel/geomap/index.html#fn-optionscontrolswithshowmeasure","title":"fn options.controls.withShowMeasure","text":"<pre><code>withShowMeasure(value)\n</code></pre> <p>Show measure</p>"},{"location":"API/panel/geomap/index.html#fn-optionscontrolswithshowscale","title":"fn options.controls.withShowScale","text":"<pre><code>withShowScale(value)\n</code></pre> <p>Scale options</p>"},{"location":"API/panel/geomap/index.html#fn-optionscontrolswithshowzoom","title":"fn options.controls.withShowZoom","text":"<pre><code>withShowZoom(value)\n</code></pre> <p>Zoom (upper left)</p>"},{"location":"API/panel/geomap/index.html#obj-optionslayers","title":"obj options.layers","text":""},{"location":"API/panel/geomap/index.html#fn-optionslayerswithconfig","title":"fn options.layers.withConfig","text":"<pre><code>withConfig(value)\n</code></pre> <p>Custom options depending on the type</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerswithfilterdata","title":"fn options.layers.withFilterData","text":"<pre><code>withFilterData(value)\n</code></pre> <p>Defines a frame MatcherConfig that may filter data for the given layer</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerswithlocation","title":"fn options.layers.withLocation","text":"<pre><code>withLocation(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionslayerswithlocationmixin","title":"fn options.layers.withLocationMixin","text":"<pre><code>withLocationMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionslayerswithname","title":"fn options.layers.withName","text":"<pre><code>withName(value)\n</code></pre> <p>configured unique display name</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerswithopacity","title":"fn options.layers.withOpacity","text":"<pre><code>withOpacity(value)\n</code></pre> <p>Common properties: https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html Layer opacity (0-1)</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerswithtooltip","title":"fn options.layers.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Check tooltip (defaults to true)</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerswithtype","title":"fn options.layers.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-optionslayerslocation","title":"obj options.layers.location","text":""},{"location":"API/panel/geomap/index.html#fn-optionslayerslocationwithgazetteer","title":"fn options.layers.location.withGazetteer","text":"<pre><code>withGazetteer(value)\n</code></pre> <p>Path to Gazetteer</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerslocationwithgeohash","title":"fn options.layers.location.withGeohash","text":"<pre><code>withGeohash(value)\n</code></pre> <p>Field mappings</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerslocationwithlatitude","title":"fn options.layers.location.withLatitude","text":"<pre><code>withLatitude(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionslayerslocationwithlongitude","title":"fn options.layers.location.withLongitude","text":"<pre><code>withLongitude(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionslayerslocationwithlookup","title":"fn options.layers.location.withLookup","text":"<pre><code>withLookup(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionslayerslocationwithmode","title":"fn options.layers.location.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"auto\", \"geohash\", \"coords\", \"lookup\"</p>"},{"location":"API/panel/geomap/index.html#fn-optionslayerslocationwithwkt","title":"fn options.layers.location.withWkt","text":"<pre><code>withWkt(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/geomap/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"none\", \"details\"</p>"},{"location":"API/panel/geomap/index.html#obj-optionsview","title":"obj options.view","text":""},{"location":"API/panel/geomap/index.html#fn-optionsviewwithalllayers","title":"fn options.view.withAllLayers","text":"<pre><code>withAllLayers(value=true)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithid","title":"fn options.view.withId","text":"<pre><code>withId(value=\"zero\")\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithlastonly","title":"fn options.view.withLastOnly","text":"<pre><code>withLastOnly(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithlat","title":"fn options.view.withLat","text":"<pre><code>withLat(value=0)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithlayer","title":"fn options.view.withLayer","text":"<pre><code>withLayer(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithlon","title":"fn options.view.withLon","text":"<pre><code>withLon(value=0)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithmaxzoom","title":"fn options.view.withMaxZoom","text":"<pre><code>withMaxZoom(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithminzoom","title":"fn options.view.withMinZoom","text":"<pre><code>withMinZoom(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithpadding","title":"fn options.view.withPadding","text":"<pre><code>withPadding(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithshared","title":"fn options.view.withShared","text":"<pre><code>withShared(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-optionsviewwithzoom","title":"fn options.view.withZoom","text":"<pre><code>withZoom(value=1)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/geomap/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/geomap/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/geomap/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/geomap/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/geomap/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/geomap/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/geomap/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/geomap/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/geomap/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/geomap/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/geomap/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/geomap/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/geomap/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/geomap/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/geomap/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/geomap/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/geomap/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/geomap/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/geomap/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/geomap/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/geomap/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/geomap/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/geomap/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/geomap/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/geomap/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/geomap/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/geomap/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/geomap/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/geomap/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/geomap/link.html","title":"link","text":""},{"location":"API/panel/geomap/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/geomap/link.html#fields","title":"Fields","text":""},{"location":"API/panel/geomap/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/geomap/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/geomap/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/geomap/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/geomap/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/geomap/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/geomap/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/geomap/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/geomap/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/geomap/transformation.html","title":"transformation","text":""},{"location":"API/panel/geomap/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/geomap/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/geomap/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/geomap/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/geomap/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/geomap/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/geomap/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/geomap/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/geomap/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/geomap/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/geomap/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/geomap/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/geomap/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/geomap/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/geomap/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html","title":"heatmap","text":"<p>grafonnet.panel.heatmap</p>"},{"location":"API/panel/heatmap/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/heatmap/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>obj defaults</code><ul> <li><code>obj custom</code><ul> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCalculate(value=false)</code></li> <li><code>fn withCalculation(value)</code></li> <li><code>fn withCalculationMixin(value)</code></li> <li><code>fn withCellGap(value=1)</code></li> <li><code>fn withCellRadius(value)</code></li> <li><code>fn withCellValues(value={})</code></li> <li><code>fn withCellValuesMixin(value={})</code></li> <li><code>fn withColor(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})</code></li> <li><code>fn withColorMixin(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})</code></li> <li><code>fn withExemplars(value)</code></li> <li><code>fn withExemplarsMixin(value)</code></li> <li><code>fn withFilterValues(value={\"le\": 0.000000001})</code></li> <li><code>fn withFilterValuesMixin(value={\"le\": 0.000000001})</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withRowsFrame(value)</code></li> <li><code>fn withRowsFrameMixin(value)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withYAxis(value)</code></li> <li><code>fn withYAxisMixin(value)</code></li> <li><code>obj calculation</code><ul> <li><code>fn withXBuckets(value)</code></li> <li><code>fn withXBucketsMixin(value)</code></li> <li><code>fn withYBuckets(value)</code></li> <li><code>fn withYBucketsMixin(value)</code></li> <li><code>obj xBuckets</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScaleMixin(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj scale</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj yBuckets</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScaleMixin(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj scale</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj cellValues</code><ul> <li><code>fn withCellValues(value)</code></li> <li><code>fn withCellValuesMixin(value)</code></li> <li><code>obj CellValues</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj color</code><ul> <li><code>fn withHeatmapColorOptions(value)</code></li> <li><code>fn withHeatmapColorOptionsMixin(value)</code></li> <li><code>obj HeatmapColorOptions</code><ul> <li><code>fn withExponent(value)</code></li> <li><code>fn withFill(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withReverse(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScheme(value)</code></li> <li><code>fn withSteps(value)</code></li> </ul> </li> </ul> </li> <li><code>obj exemplars</code><ul> <li><code>fn withColor(value)</code></li> </ul> </li> <li><code>obj filterValues</code><ul> <li><code>fn withFilterValueRange(value)</code></li> <li><code>fn withFilterValueRangeMixin(value)</code></li> <li><code>obj FilterValueRange</code><ul> <li><code>fn withGe(value)</code></li> <li><code>fn withLe(value)</code></li> </ul> </li> </ul> </li> <li><code>obj legend</code><ul> <li><code>fn withShow(value)</code></li> </ul> </li> <li><code>obj rowsFrame</code><ul> <li><code>fn withLayout(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withShow(value)</code></li> <li><code>fn withYHistogram(value)</code></li> </ul> </li> <li><code>obj yAxis</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withReverse(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/heatmap/index.html#fields","title":"Fields","text":""},{"location":"API/panel/heatmap/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new heatmap panel with a title.</p>"},{"location":"API/panel/heatmap/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/heatmap/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"API/panel/heatmap/index.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"API/panel/heatmap/index.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/heatmap/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/heatmap/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/heatmap/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/heatmap/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/heatmap/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/heatmap/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/heatmap/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/heatmap/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/heatmap/index.html#fn-optionswithcalculate","title":"fn options.withCalculate","text":"<pre><code>withCalculate(value=false)\n</code></pre> <p>Controls if the heatmap should be calculated from data</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcalculation","title":"fn options.withCalculation","text":"<pre><code>withCalculation(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcalculationmixin","title":"fn options.withCalculationMixin","text":"<pre><code>withCalculationMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcellgap","title":"fn options.withCellGap","text":"<pre><code>withCellGap(value=1)\n</code></pre> <p>Controls gap between cells</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcellradius","title":"fn options.withCellRadius","text":"<pre><code>withCellRadius(value)\n</code></pre> <p>Controls cell radius</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcellvalues","title":"fn options.withCellValues","text":"<pre><code>withCellValues(value={})\n</code></pre> <p>Controls cell value unit</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcellvaluesmixin","title":"fn options.withCellValuesMixin","text":"<pre><code>withCellValuesMixin(value={})\n</code></pre> <p>Controls cell value unit</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcolor","title":"fn options.withColor","text":"<pre><code>withColor(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})\n</code></pre> <p>Controls the color options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithcolormixin","title":"fn options.withColorMixin","text":"<pre><code>withColorMixin(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})\n</code></pre> <p>Controls the color options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithexemplars","title":"fn options.withExemplars","text":"<pre><code>withExemplars(value)\n</code></pre> <p>Controls exemplar options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithexemplarsmixin","title":"fn options.withExemplarsMixin","text":"<pre><code>withExemplarsMixin(value)\n</code></pre> <p>Controls exemplar options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithfiltervalues","title":"fn options.withFilterValues","text":"<pre><code>withFilterValues(value={\"le\": 0.000000001})\n</code></pre> <p>Filters values between a given range</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithfiltervaluesmixin","title":"fn options.withFilterValuesMixin","text":"<pre><code>withFilterValuesMixin(value={\"le\": 0.000000001})\n</code></pre> <p>Filters values between a given range</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>Controls legend options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>Controls legend options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithrowsframe","title":"fn options.withRowsFrame","text":"<pre><code>withRowsFrame(value)\n</code></pre> <p>Controls frame rows options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithrowsframemixin","title":"fn options.withRowsFrameMixin","text":"<pre><code>withRowsFrameMixin(value)\n</code></pre> <p>Controls frame rows options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Controls tooltip options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>Controls tooltip options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithyaxis","title":"fn options.withYAxis","text":"<pre><code>withYAxis(value)\n</code></pre> <p>Configuration options for the yAxis</p>"},{"location":"API/panel/heatmap/index.html#fn-optionswithyaxismixin","title":"fn options.withYAxisMixin","text":"<pre><code>withYAxisMixin(value)\n</code></pre> <p>Configuration options for the yAxis</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscalculation","title":"obj options.calculation","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscalculationwithxbuckets","title":"fn options.calculation.withXBuckets","text":"<pre><code>withXBuckets(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationwithxbucketsmixin","title":"fn options.calculation.withXBucketsMixin","text":"<pre><code>withXBucketsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationwithybuckets","title":"fn options.calculation.withYBuckets","text":"<pre><code>withYBuckets(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationwithybucketsmixin","title":"fn options.calculation.withYBucketsMixin","text":"<pre><code>withYBucketsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#obj-optionscalculationxbuckets","title":"obj options.calculation.xBuckets","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscalculationxbucketswithmode","title":"fn options.calculation.xBuckets.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"size\", \"count\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationxbucketswithscale","title":"fn options.calculation.xBuckets.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationxbucketswithscalemixin","title":"fn options.calculation.xBuckets.withScaleMixin","text":"<pre><code>withScaleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationxbucketswithvalue","title":"fn options.calculation.xBuckets.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The number of buckets to use for the axis in the heatmap</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscalculationxbucketsscale","title":"obj options.calculation.xBuckets.scale","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscalculationxbucketsscalewithlinearthreshold","title":"# fn options.calculation.xBuckets.scale.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationxbucketsscalewithlog","title":"# fn options.calculation.xBuckets.scale.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationxbucketsscalewithtype","title":"# fn options.calculation.xBuckets.scale.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscalculationybuckets","title":"obj options.calculation.yBuckets","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscalculationybucketswithmode","title":"fn options.calculation.yBuckets.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"size\", \"count\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationybucketswithscale","title":"fn options.calculation.yBuckets.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationybucketswithscalemixin","title":"fn options.calculation.yBuckets.withScaleMixin","text":"<pre><code>withScaleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationybucketswithvalue","title":"fn options.calculation.yBuckets.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The number of buckets to use for the axis in the heatmap</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscalculationybucketsscale","title":"obj options.calculation.yBuckets.scale","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscalculationybucketsscalewithlinearthreshold","title":"# fn options.calculation.yBuckets.scale.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationybucketsscalewithlog","title":"# fn options.calculation.yBuckets.scale.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionscalculationybucketsscalewithtype","title":"# fn options.calculation.yBuckets.scale.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscellvalues","title":"obj options.cellValues","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscellvalueswithcellvalues","title":"fn options.cellValues.withCellValues","text":"<pre><code>withCellValues(value)\n</code></pre> <p>Controls cell value options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscellvalueswithcellvaluesmixin","title":"fn options.cellValues.withCellValuesMixin","text":"<pre><code>withCellValuesMixin(value)\n</code></pre> <p>Controls cell value options</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscellvaluescellvalues","title":"obj options.cellValues.CellValues","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscellvaluescellvalueswithdecimals","title":"fn options.cellValues.CellValues.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Controls the number of decimals for cell values</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscellvaluescellvalueswithunit","title":"fn options.cellValues.CellValues.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Controls the cell value unit</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscolor","title":"obj options.color","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscolorwithheatmapcoloroptions","title":"fn options.color.withHeatmapColorOptions","text":"<pre><code>withHeatmapColorOptions(value)\n</code></pre> <p>Controls various color options</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorwithheatmapcoloroptionsmixin","title":"fn options.color.withHeatmapColorOptionsMixin","text":"<pre><code>withHeatmapColorOptionsMixin(value)\n</code></pre> <p>Controls various color options</p>"},{"location":"API/panel/heatmap/index.html#obj-optionscolorheatmapcoloroptions","title":"obj options.color.HeatmapColorOptions","text":""},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithexponent","title":"fn options.color.HeatmapColorOptions.withExponent","text":"<pre><code>withExponent(value)\n</code></pre> <p>Controls the exponent when scale is set to exponential</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithfill","title":"fn options.color.HeatmapColorOptions.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Controls the color fill when in opacity mode</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithmax","title":"fn options.color.HeatmapColorOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre> <p>Sets the maximum value for the color scale</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithmin","title":"fn options.color.HeatmapColorOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre> <p>Sets the minimum value for the color scale</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithmode","title":"fn options.color.HeatmapColorOptions.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Controls the color mode of the heatmap</p> <p>Accepted values for <code>value</code> are \"opacity\", \"scheme\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithreverse","title":"fn options.color.HeatmapColorOptions.withReverse","text":"<pre><code>withReverse(value)\n</code></pre> <p>Reverses the color scheme</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithscale","title":"fn options.color.HeatmapColorOptions.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>Controls the color scale of the heatmap</p> <p>Accepted values for <code>value</code> are \"linear\", \"exponential\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithscheme","title":"fn options.color.HeatmapColorOptions.withScheme","text":"<pre><code>withScheme(value)\n</code></pre> <p>Controls the color scheme used</p>"},{"location":"API/panel/heatmap/index.html#fn-optionscolorheatmapcoloroptionswithsteps","title":"fn options.color.HeatmapColorOptions.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Controls the number of color steps</p>"},{"location":"API/panel/heatmap/index.html#obj-optionsexemplars","title":"obj options.exemplars","text":""},{"location":"API/panel/heatmap/index.html#fn-optionsexemplarswithcolor","title":"fn options.exemplars.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>Sets the color of the exemplar markers</p>"},{"location":"API/panel/heatmap/index.html#obj-optionsfiltervalues","title":"obj options.filterValues","text":""},{"location":"API/panel/heatmap/index.html#fn-optionsfiltervalueswithfiltervaluerange","title":"fn options.filterValues.withFilterValueRange","text":"<pre><code>withFilterValueRange(value)\n</code></pre> <p>Controls the value filter range</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsfiltervalueswithfiltervaluerangemixin","title":"fn options.filterValues.withFilterValueRangeMixin","text":"<pre><code>withFilterValueRangeMixin(value)\n</code></pre> <p>Controls the value filter range</p>"},{"location":"API/panel/heatmap/index.html#obj-optionsfiltervaluesfiltervaluerange","title":"obj options.filterValues.FilterValueRange","text":""},{"location":"API/panel/heatmap/index.html#fn-optionsfiltervaluesfiltervaluerangewithge","title":"fn options.filterValues.FilterValueRange.withGe","text":"<pre><code>withGe(value)\n</code></pre> <p>Sets the filter range to values greater than or equal to the given value</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsfiltervaluesfiltervaluerangewithle","title":"fn options.filterValues.FilterValueRange.withLe","text":"<pre><code>withLe(value)\n</code></pre> <p>Sets the filter range to values less than or equal to the given value</p>"},{"location":"API/panel/heatmap/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/heatmap/index.html#fn-optionslegendwithshow","title":"fn options.legend.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Controls if the legend is shown</p>"},{"location":"API/panel/heatmap/index.html#obj-optionsrowsframe","title":"obj options.rowsFrame","text":""},{"location":"API/panel/heatmap/index.html#fn-optionsrowsframewithlayout","title":"fn options.rowsFrame.withLayout","text":"<pre><code>withLayout(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"le\", \"ge\", \"unknown\", \"auto\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsrowsframewithvalue","title":"fn options.rowsFrame.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>Sets the name of the cell when not calculating from data</p>"},{"location":"API/panel/heatmap/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/heatmap/index.html#fn-optionstooltipwithshow","title":"fn options.tooltip.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Controls if the tooltip is shown</p>"},{"location":"API/panel/heatmap/index.html#fn-optionstooltipwithyhistogram","title":"fn options.tooltip.withYHistogram","text":"<pre><code>withYHistogram(value)\n</code></pre> <p>Controls if the tooltip shows a histogram of the y-axis values</p>"},{"location":"API/panel/heatmap/index.html#obj-optionsyaxis","title":"obj options.yAxis","text":""},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxiscenteredzero","title":"fn options.yAxis.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxiscolormode","title":"fn options.yAxis.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxisgridshow","title":"fn options.yAxis.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxislabel","title":"fn options.yAxis.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxisplacement","title":"fn options.yAxis.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxissoftmax","title":"fn options.yAxis.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxissoftmin","title":"fn options.yAxis.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithaxiswidth","title":"fn options.yAxis.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithdecimals","title":"fn options.yAxis.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Controls the number of decimals for yAxis values</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithmax","title":"fn options.yAxis.withMax","text":"<pre><code>withMax(value)\n</code></pre> <p>Sets the maximum value for the yAxis</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithmin","title":"fn options.yAxis.withMin","text":"<pre><code>withMin(value)\n</code></pre> <p>Sets the minimum value for the yAxis</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithreverse","title":"fn options.yAxis.withReverse","text":"<pre><code>withReverse(value)\n</code></pre> <p>Reverses the yAxis</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithscaledistribution","title":"fn options.yAxis.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithscaledistributionmixin","title":"fn options.yAxis.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxiswithunit","title":"fn options.yAxis.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Sets the yAxis unit</p>"},{"location":"API/panel/heatmap/index.html#obj-optionsyaxisscaledistribution","title":"obj options.yAxis.scaleDistribution","text":""},{"location":"API/panel/heatmap/index.html#fn-optionsyaxisscaledistributionwithlinearthreshold","title":"fn options.yAxis.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxisscaledistributionwithlog","title":"fn options.yAxis.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-optionsyaxisscaledistributionwithtype","title":"fn options.yAxis.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/heatmap/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/heatmap/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/heatmap/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/heatmap/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/heatmap/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/heatmap/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/heatmap/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/heatmap/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/heatmap/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/heatmap/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/heatmap/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/heatmap/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/heatmap/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/heatmap/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/heatmap/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/heatmap/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/heatmap/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/heatmap/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/heatmap/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/heatmap/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/heatmap/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/heatmap/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/heatmap/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/heatmap/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/heatmap/link.html","title":"link","text":""},{"location":"API/panel/heatmap/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/heatmap/link.html#fields","title":"Fields","text":""},{"location":"API/panel/heatmap/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/heatmap/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/heatmap/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/heatmap/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/heatmap/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/heatmap/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/heatmap/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/heatmap/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/heatmap/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/heatmap/transformation.html","title":"transformation","text":""},{"location":"API/panel/heatmap/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/heatmap/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/heatmap/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/heatmap/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/heatmap/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/heatmap/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/heatmap/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/heatmap/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/heatmap/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/heatmap/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/heatmap/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/heatmap/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/heatmap/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/heatmap/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/heatmap/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html","title":"histogram","text":"<p>grafonnet.panel.histogram</p>"},{"location":"API/panel/histogram/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/histogram/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>obj defaults</code><ul> <li><code>obj custom</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withFillOpacity(value=80)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withBucketOffset(value=0)</code></li> <li><code>fn withBucketSize(value)</code></li> <li><code>fn withCombine(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/histogram/index.html#fields","title":"Fields","text":""},{"location":"API/panel/histogram/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new histogram panel with a title.</p>"},{"location":"API/panel/histogram/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/histogram/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"API/panel/histogram/index.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"API/panel/histogram/index.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=80)\n</code></pre> <p>Controls the fill opacity of the bars.</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"opacity\", \"hue\", \"scheme\"</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre> <p>Controls line width of the bars.</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/histogram/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/histogram/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/histogram/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/histogram/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/histogram/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/histogram/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/histogram/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/histogram/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/histogram/index.html#fn-optionswithbucketoffset","title":"fn options.withBucketOffset","text":"<pre><code>withBucketOffset(value=0)\n</code></pre> <p>Offset buckets by this amount</p>"},{"location":"API/panel/histogram/index.html#fn-optionswithbucketsize","title":"fn options.withBucketSize","text":"<pre><code>withBucketSize(value)\n</code></pre> <p>Size of each bucket</p>"},{"location":"API/panel/histogram/index.html#fn-optionswithcombine","title":"fn options.withCombine","text":"<pre><code>withCombine(value)\n</code></pre> <p>Combines multiple series into a single histogram</p>"},{"location":"API/panel/histogram/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/histogram/index.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/histogram/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"API/panel/histogram/index.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"API/panel/histogram/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/histogram/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/histogram/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/histogram/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/histogram/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/histogram/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/histogram/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/histogram/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/histogram/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/histogram/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/histogram/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/histogram/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/histogram/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/histogram/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/histogram/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/histogram/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/histogram/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/histogram/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/histogram/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/histogram/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/histogram/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/histogram/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/histogram/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/histogram/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/histogram/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/histogram/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/histogram/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/histogram/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/histogram/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/histogram/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/histogram/link.html","title":"link","text":""},{"location":"API/panel/histogram/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/histogram/link.html#fields","title":"Fields","text":""},{"location":"API/panel/histogram/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/histogram/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/histogram/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/histogram/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/histogram/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/histogram/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/histogram/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/histogram/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/histogram/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/histogram/transformation.html","title":"transformation","text":""},{"location":"API/panel/histogram/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/histogram/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/histogram/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/histogram/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/histogram/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/histogram/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/histogram/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/histogram/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/histogram/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/histogram/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/histogram/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/histogram/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/histogram/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/histogram/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/histogram/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/logs/index.html","title":"logs","text":"<p>grafonnet.panel.logs</p>"},{"location":"API/panel/logs/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/logs/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDedupStrategy(value)</code></li> <li><code>fn withEnableLogDetails(value)</code></li> <li><code>fn withPrettifyLogMessage(value)</code></li> <li><code>fn withShowCommonLabels(value)</code></li> <li><code>fn withShowLabels(value)</code></li> <li><code>fn withShowTime(value)</code></li> <li><code>fn withSortOrder(value)</code></li> <li><code>fn withWrapLogMessage(value)</code></li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/logs/index.html#fields","title":"Fields","text":""},{"location":"API/panel/logs/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new logs panel with a title.</p>"},{"location":"API/panel/logs/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/logs/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/logs/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/logs/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/logs/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/logs/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/logs/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/logs/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/logs/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/logs/index.html#fn-optionswithdedupstrategy","title":"fn options.withDedupStrategy","text":"<pre><code>withDedupStrategy(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"none\", \"exact\", \"numbers\", \"signature\"</p>"},{"location":"API/panel/logs/index.html#fn-optionswithenablelogdetails","title":"fn options.withEnableLogDetails","text":"<pre><code>withEnableLogDetails(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-optionswithprettifylogmessage","title":"fn options.withPrettifyLogMessage","text":"<pre><code>withPrettifyLogMessage(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-optionswithshowcommonlabels","title":"fn options.withShowCommonLabels","text":"<pre><code>withShowCommonLabels(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-optionswithshowlabels","title":"fn options.withShowLabels","text":"<pre><code>withShowLabels(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-optionswithshowtime","title":"fn options.withShowTime","text":"<pre><code>withShowTime(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-optionswithsortorder","title":"fn options.withSortOrder","text":"<pre><code>withSortOrder(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Descending\", \"Ascending\"</p>"},{"location":"API/panel/logs/index.html#fn-optionswithwraplogmessage","title":"fn options.withWrapLogMessage","text":"<pre><code>withWrapLogMessage(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/logs/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/logs/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/logs/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/logs/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/logs/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/logs/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/logs/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/logs/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/logs/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/logs/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/logs/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/logs/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/logs/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/logs/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/logs/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/logs/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/logs/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/logs/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/logs/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/logs/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/logs/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/logs/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/logs/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/logs/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/logs/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/logs/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/logs/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/logs/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/logs/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/logs/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/logs/link.html","title":"link","text":""},{"location":"API/panel/logs/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/logs/link.html#fields","title":"Fields","text":""},{"location":"API/panel/logs/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/logs/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/logs/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/logs/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/logs/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/logs/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/logs/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/logs/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/logs/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/logs/transformation.html","title":"transformation","text":""},{"location":"API/panel/logs/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/logs/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/logs/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/logs/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/logs/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/logs/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/logs/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/logs/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/logs/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/logs/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/logs/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/logs/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/logs/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/logs/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/logs/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/logs/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/logs/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/logs/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/logs/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/logs/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/news/index.html","title":"news","text":"<p>grafonnet.panel.news</p>"},{"location":"API/panel/news/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/news/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withFeedUrl(value)</code></li> <li><code>fn withShowImage(value=true)</code></li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/news/index.html#fields","title":"Fields","text":""},{"location":"API/panel/news/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new news panel with a title.</p>"},{"location":"API/panel/news/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/news/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/news/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/news/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/news/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/news/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/news/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/news/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/news/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/news/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/news/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/news/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/news/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/news/index.html#fn-optionswithfeedurl","title":"fn options.withFeedUrl","text":"<pre><code>withFeedUrl(value)\n</code></pre> <p>empty/missing will default to grafana blog</p>"},{"location":"API/panel/news/index.html#fn-optionswithshowimage","title":"fn options.withShowImage","text":"<pre><code>withShowImage(value=true)\n</code></pre>"},{"location":"API/panel/news/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/news/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/news/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/news/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/news/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/news/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/news/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/news/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/news/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/news/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/news/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/news/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/news/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/news/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/news/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/news/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/news/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/news/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/news/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/news/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/news/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/news/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/news/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/news/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/news/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/news/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/news/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/news/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/news/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/news/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/news/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/news/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/news/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/news/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/news/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/news/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/news/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/news/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/news/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/news/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/news/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/news/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/news/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/news/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/news/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/news/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/news/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/news/link.html","title":"link","text":""},{"location":"API/panel/news/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/news/link.html#fields","title":"Fields","text":""},{"location":"API/panel/news/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/news/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/news/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/news/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/news/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/news/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/news/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/news/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/news/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/news/transformation.html","title":"transformation","text":""},{"location":"API/panel/news/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/news/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/news/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/news/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/news/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/news/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/news/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/news/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/news/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/news/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/news/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/news/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/news/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/news/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/news/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/news/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/news/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/news/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/news/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/news/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html","title":"nodeGraph","text":"<p>grafonnet.panel.nodeGraph</p>"},{"location":"API/panel/nodeGraph/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/nodeGraph/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withEdges(value)</code></li> <li><code>fn withEdgesMixin(value)</code></li> <li><code>fn withNodes(value)</code></li> <li><code>fn withNodesMixin(value)</code></li> <li><code>obj edges</code><ul> <li><code>fn withMainStatUnit(value)</code></li> <li><code>fn withSecondaryStatUnit(value)</code></li> </ul> </li> <li><code>obj nodes</code><ul> <li><code>fn withArcs(value)</code></li> <li><code>fn withArcsMixin(value)</code></li> <li><code>fn withMainStatUnit(value)</code></li> <li><code>fn withSecondaryStatUnit(value)</code></li> <li><code>obj arcs</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withField(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/nodeGraph/index.html#fields","title":"Fields","text":""},{"location":"API/panel/nodeGraph/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new nodeGraph panel with a title.</p>"},{"location":"API/panel/nodeGraph/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/nodeGraph/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/nodeGraph/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/nodeGraph/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/nodeGraph/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/nodeGraph/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/nodeGraph/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/nodeGraph/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/nodeGraph/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/nodeGraph/index.html#fn-optionswithedges","title":"fn options.withEdges","text":"<pre><code>withEdges(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-optionswithedgesmixin","title":"fn options.withEdgesMixin","text":"<pre><code>withEdgesMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-optionswithnodes","title":"fn options.withNodes","text":"<pre><code>withNodes(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-optionswithnodesmixin","title":"fn options.withNodesMixin","text":"<pre><code>withNodesMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#obj-optionsedges","title":"obj options.edges","text":""},{"location":"API/panel/nodeGraph/index.html#fn-optionsedgeswithmainstatunit","title":"fn options.edges.withMainStatUnit","text":"<pre><code>withMainStatUnit(value)\n</code></pre> <p>Unit for the main stat to override what ever is set in the data frame.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-optionsedgeswithsecondarystatunit","title":"fn options.edges.withSecondaryStatUnit","text":"<pre><code>withSecondaryStatUnit(value)\n</code></pre> <p>Unit for the secondary stat to override what ever is set in the data frame.</p>"},{"location":"API/panel/nodeGraph/index.html#obj-optionsnodes","title":"obj options.nodes","text":""},{"location":"API/panel/nodeGraph/index.html#fn-optionsnodeswitharcs","title":"fn options.nodes.withArcs","text":"<pre><code>withArcs(value)\n</code></pre> <p>Define which fields are shown as part of the node arc (colored circle around the node).</p>"},{"location":"API/panel/nodeGraph/index.html#fn-optionsnodeswitharcsmixin","title":"fn options.nodes.withArcsMixin","text":"<pre><code>withArcsMixin(value)\n</code></pre> <p>Define which fields are shown as part of the node arc (colored circle around the node).</p>"},{"location":"API/panel/nodeGraph/index.html#fn-optionsnodeswithmainstatunit","title":"fn options.nodes.withMainStatUnit","text":"<pre><code>withMainStatUnit(value)\n</code></pre> <p>Unit for the main stat to override what ever is set in the data frame.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-optionsnodeswithsecondarystatunit","title":"fn options.nodes.withSecondaryStatUnit","text":"<pre><code>withSecondaryStatUnit(value)\n</code></pre> <p>Unit for the secondary stat to override what ever is set in the data frame.</p>"},{"location":"API/panel/nodeGraph/index.html#obj-optionsnodesarcs","title":"obj options.nodes.arcs","text":""},{"location":"API/panel/nodeGraph/index.html#fn-optionsnodesarcswithcolor","title":"fn options.nodes.arcs.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>The color of the arc.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-optionsnodesarcswithfield","title":"fn options.nodes.arcs.withField","text":"<pre><code>withField(value)\n</code></pre> <p>Field from which to get the value. Values should be less than 1, representing fraction of a circle.</p>"},{"location":"API/panel/nodeGraph/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/nodeGraph/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/nodeGraph/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/nodeGraph/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/nodeGraph/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/nodeGraph/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/nodeGraph/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/nodeGraph/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/nodeGraph/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/nodeGraph/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/nodeGraph/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/nodeGraph/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/nodeGraph/link.html","title":"link","text":""},{"location":"API/panel/nodeGraph/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/nodeGraph/link.html#fields","title":"Fields","text":""},{"location":"API/panel/nodeGraph/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/nodeGraph/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/nodeGraph/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/nodeGraph/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/nodeGraph/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/nodeGraph/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/nodeGraph/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/nodeGraph/transformation.html","title":"transformation","text":""},{"location":"API/panel/nodeGraph/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/nodeGraph/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/nodeGraph/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/nodeGraph/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/nodeGraph/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/nodeGraph/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/nodeGraph/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/nodeGraph/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/nodeGraph/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/nodeGraph/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/nodeGraph/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html","title":"pieChart","text":"<p>grafonnet.panel.pieChart</p>"},{"location":"API/panel/pieChart/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/pieChart/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>obj defaults</code><ul> <li><code>obj custom</code><ul> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDisplayLabels(value)</code></li> <li><code>fn withDisplayLabelsMixin(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withPieType(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withValues(value)</code></li> <li><code>fn withValuesMixin(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/pieChart/index.html#fields","title":"Fields","text":""},{"location":"API/panel/pieChart/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new pieChart panel with a title.</p>"},{"location":"API/panel/pieChart/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/pieChart/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"API/panel/pieChart/index.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"API/panel/pieChart/index.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"API/panel/pieChart/index.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"API/panel/pieChart/index.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/pieChart/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/pieChart/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/pieChart/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/pieChart/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/pieChart/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/pieChart/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/pieChart/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/pieChart/index.html#fn-optionswithdisplaylabels","title":"fn options.withDisplayLabels","text":"<pre><code>withDisplayLabels(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionswithdisplaylabelsmixin","title":"fn options.withDisplayLabelsMixin","text":"<pre><code>withDisplayLabelsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"API/panel/pieChart/index.html#fn-optionswithpietype","title":"fn options.withPieType","text":"<pre><code>withPieType(value)\n</code></pre> <p>Select the pie chart display style.</p> <p>Accepted values for <code>value</code> are \"pie\", \"donut\"</p>"},{"location":"API/panel/pieChart/index.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithvalues","title":"fn options.legend.withValues","text":"<pre><code>withValues(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithvaluesmixin","title":"fn options.legend.withValuesMixin","text":"<pre><code>withValuesMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"API/panel/pieChart/index.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/pieChart/index.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/pieChart/index.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"API/panel/pieChart/index.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"API/panel/pieChart/index.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"API/panel/pieChart/index.html#obj-optionstext","title":"obj options.text","text":""},{"location":"API/panel/pieChart/index.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"API/panel/pieChart/index.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"API/panel/pieChart/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/pieChart/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"API/panel/pieChart/index.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"API/panel/pieChart/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/pieChart/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/pieChart/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/pieChart/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/pieChart/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/pieChart/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/pieChart/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/pieChart/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/pieChart/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/pieChart/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/pieChart/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/pieChart/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/pieChart/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/pieChart/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/pieChart/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/pieChart/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/pieChart/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/pieChart/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/pieChart/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/pieChart/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/pieChart/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/pieChart/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/pieChart/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/pieChart/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/pieChart/link.html","title":"link","text":""},{"location":"API/panel/pieChart/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/pieChart/link.html#fields","title":"Fields","text":""},{"location":"API/panel/pieChart/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/pieChart/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/pieChart/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/pieChart/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/pieChart/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/pieChart/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/pieChart/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/pieChart/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/pieChart/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/pieChart/transformation.html","title":"transformation","text":""},{"location":"API/panel/pieChart/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/pieChart/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/pieChart/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/pieChart/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/pieChart/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/pieChart/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/pieChart/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/pieChart/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/pieChart/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/pieChart/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/pieChart/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/pieChart/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/pieChart/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/pieChart/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/pieChart/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stat/index.html","title":"stat","text":"<p>grafonnet.panel.stat</p>"},{"location":"API/panel/stat/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/stat/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withColorMode(value)</code></li> <li><code>fn withGraphMode(value)</code></li> <li><code>fn withJustifyMode(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTextMode(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/stat/index.html#fields","title":"Fields","text":""},{"location":"API/panel/stat/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new stat panel with a title.</p>"},{"location":"API/panel/stat/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/stat/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/stat/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/stat/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/stat/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/stat/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/stat/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/stat/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/stat/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/stat/index.html#fn-optionswithcolormode","title":"fn options.withColorMode","text":"<pre><code>withColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"value\", \"background\", \"background_solid\", \"none\"</p>"},{"location":"API/panel/stat/index.html#fn-optionswithgraphmode","title":"fn options.withGraphMode","text":"<pre><code>withGraphMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"line\", \"area\"</p>"},{"location":"API/panel/stat/index.html#fn-optionswithjustifymode","title":"fn options.withJustifyMode","text":"<pre><code>withJustifyMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"center\"</p>"},{"location":"API/panel/stat/index.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"API/panel/stat/index.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/index.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/index.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/index.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/index.html#fn-optionswithtextmode","title":"fn options.withTextMode","text":"<pre><code>withTextMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"value\", \"value_and_name\", \"name\", \"none\"</p>"},{"location":"API/panel/stat/index.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"API/panel/stat/index.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/stat/index.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"API/panel/stat/index.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"API/panel/stat/index.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"API/panel/stat/index.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"API/panel/stat/index.html#obj-optionstext","title":"obj options.text","text":""},{"location":"API/panel/stat/index.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"API/panel/stat/index.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"API/panel/stat/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/stat/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/stat/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/stat/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/stat/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/stat/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/stat/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/stat/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/stat/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/stat/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/stat/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/stat/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/stat/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/stat/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/stat/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/stat/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/stat/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/stat/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/stat/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/stat/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/stat/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/stat/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stat/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/stat/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stat/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/stat/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stat/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/stat/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stat/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/stat/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stat/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stat/link.html","title":"link","text":""},{"location":"API/panel/stat/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/stat/link.html#fields","title":"Fields","text":""},{"location":"API/panel/stat/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/stat/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/stat/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/stat/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/stat/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/stat/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/stat/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/stat/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/stat/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/stat/transformation.html","title":"transformation","text":""},{"location":"API/panel/stat/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/stat/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/stat/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/stat/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/stat/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/stat/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/stat/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/stat/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/stat/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/stat/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/stat/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/stat/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/stat/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/stat/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/stat/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/stat/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/stat/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stat/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/stat/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stat/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html","title":"stateTimeline","text":"<p>grafonnet.panel.stateTimeline</p>"},{"location":"API/panel/stateTimeline/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/stateTimeline/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>obj defaults</code><ul> <li><code>obj custom</code><ul> <li><code>fn withFillOpacity(value=70)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=0)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withAlignValue(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withMergeValues(value=true)</code></li> <li><code>fn withRowHeight(value=0.9)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withTimezoneMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/stateTimeline/index.html#fields","title":"Fields","text":""},{"location":"API/panel/stateTimeline/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new stateTimeline panel with a title.</p>"},{"location":"API/panel/stateTimeline/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/stateTimeline/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"API/panel/stateTimeline/index.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"API/panel/stateTimeline/index.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"API/panel/stateTimeline/index.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=70)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=0)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"API/panel/stateTimeline/index.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/stateTimeline/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/stateTimeline/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/stateTimeline/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/stateTimeline/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/stateTimeline/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/stateTimeline/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/stateTimeline/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/stateTimeline/index.html#fn-optionswithalignvalue","title":"fn options.withAlignValue","text":"<pre><code>withAlignValue(value)\n</code></pre> <p>Controls the value alignment in the TimelineChart component</p> <p>Accepted values for <code>value</code> are \"center\", \"left\", \"right\"</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithmergevalues","title":"fn options.withMergeValues","text":"<pre><code>withMergeValues(value=true)\n</code></pre> <p>Merge equal consecutive values</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithrowheight","title":"fn options.withRowHeight","text":"<pre><code>withRowHeight(value=0.9)\n</code></pre> <p>Controls the row height</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithtimezone","title":"fn options.withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithtimezonemixin","title":"fn options.withTimezoneMixin","text":"<pre><code>withTimezoneMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/stateTimeline/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"API/panel/stateTimeline/index.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"API/panel/stateTimeline/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/stateTimeline/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/stateTimeline/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/stateTimeline/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/stateTimeline/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/stateTimeline/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/stateTimeline/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/stateTimeline/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/stateTimeline/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/stateTimeline/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/stateTimeline/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/stateTimeline/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/stateTimeline/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/stateTimeline/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/stateTimeline/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/stateTimeline/link.html","title":"link","text":""},{"location":"API/panel/stateTimeline/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/stateTimeline/link.html#fields","title":"Fields","text":""},{"location":"API/panel/stateTimeline/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/stateTimeline/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/stateTimeline/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/stateTimeline/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/stateTimeline/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/stateTimeline/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/stateTimeline/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/stateTimeline/transformation.html","title":"transformation","text":""},{"location":"API/panel/stateTimeline/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/stateTimeline/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/stateTimeline/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/stateTimeline/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/stateTimeline/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/stateTimeline/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/stateTimeline/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/stateTimeline/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/stateTimeline/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/stateTimeline/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/stateTimeline/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html","title":"statusHistory","text":"<p>grafonnet.panel.statusHistory</p>"},{"location":"API/panel/statusHistory/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/statusHistory/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>obj defaults</code><ul> <li><code>obj custom</code><ul> <li><code>fn withFillOpacity(value=70)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withColWidth(value=0.9)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withRowHeight(value=0.9)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withTimezoneMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/statusHistory/index.html#fields","title":"Fields","text":""},{"location":"API/panel/statusHistory/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new statusHistory panel with a title.</p>"},{"location":"API/panel/statusHistory/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/statusHistory/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"API/panel/statusHistory/index.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"API/panel/statusHistory/index.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"API/panel/statusHistory/index.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=70)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"API/panel/statusHistory/index.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/statusHistory/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/statusHistory/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/statusHistory/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/statusHistory/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/statusHistory/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/statusHistory/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/statusHistory/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/statusHistory/index.html#fn-optionswithcolwidth","title":"fn options.withColWidth","text":"<pre><code>withColWidth(value=0.9)\n</code></pre> <p>Controls the column width</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithrowheight","title":"fn options.withRowHeight","text":"<pre><code>withRowHeight(value=0.9)\n</code></pre> <p>Set the height of the rows</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithtimezone","title":"fn options.withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithtimezonemixin","title":"fn options.withTimezoneMixin","text":"<pre><code>withTimezoneMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/statusHistory/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"API/panel/statusHistory/index.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"API/panel/statusHistory/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/statusHistory/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/statusHistory/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/statusHistory/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/statusHistory/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/statusHistory/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/statusHistory/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/statusHistory/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/statusHistory/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/statusHistory/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/statusHistory/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/statusHistory/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/statusHistory/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/statusHistory/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/statusHistory/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/statusHistory/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/statusHistory/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/statusHistory/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/statusHistory/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/statusHistory/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/statusHistory/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/statusHistory/link.html","title":"link","text":""},{"location":"API/panel/statusHistory/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/statusHistory/link.html#fields","title":"Fields","text":""},{"location":"API/panel/statusHistory/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/statusHistory/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/statusHistory/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/statusHistory/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/statusHistory/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/statusHistory/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/statusHistory/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/statusHistory/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/statusHistory/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/statusHistory/transformation.html","title":"transformation","text":""},{"location":"API/panel/statusHistory/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/statusHistory/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/statusHistory/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/statusHistory/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/statusHistory/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/statusHistory/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/statusHistory/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/statusHistory/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/statusHistory/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/statusHistory/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/statusHistory/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/statusHistory/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/statusHistory/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/statusHistory/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/table/index.html","title":"table","text":"<p>grafonnet.panel.table</p>"},{"location":"API/panel/table/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/table/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCellHeight(value)</code></li> <li><code>fn withFooter(value={\"countRows\": false,\"reducer\": [],\"show\": false})</code></li> <li><code>fn withFooterMixin(value={\"countRows\": false,\"reducer\": [],\"show\": false})</code></li> <li><code>fn withFrameIndex(value=0)</code></li> <li><code>fn withShowHeader(value=true)</code></li> <li><code>fn withShowTypeIcons(value=false)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortByMixin(value)</code></li> <li><code>obj footer</code><ul> <li><code>fn withTableFooterOptions(value)</code></li> <li><code>fn withTableFooterOptionsMixin(value)</code></li> <li><code>obj TableFooterOptions</code><ul> <li><code>fn withCountRows(value)</code></li> <li><code>fn withEnablePagination(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withFieldsMixin(value)</code></li> <li><code>fn withReducer(value)</code></li> <li><code>fn withReducerMixin(value)</code></li> <li><code>fn withShow(value)</code></li> </ul> </li> </ul> </li> <li><code>obj sortBy</code><ul> <li><code>fn withDesc(value)</code></li> <li><code>fn withDisplayName(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/table/index.html#fields","title":"Fields","text":""},{"location":"API/panel/table/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new table panel with a title.</p>"},{"location":"API/panel/table/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/table/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/table/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/table/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/table/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/table/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/table/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/table/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/table/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/table/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/table/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/table/index.html#fn-optionswithcellheight","title":"fn options.withCellHeight","text":"<pre><code>withCellHeight(value)\n</code></pre> <p>Height of a table cell</p> <p>Accepted values for <code>value</code> are \"sm\", \"md\", \"lg\"</p>"},{"location":"API/panel/table/index.html#fn-optionswithfooter","title":"fn options.withFooter","text":"<pre><code>withFooter(value={\"countRows\": false,\"reducer\": [],\"show\": false})\n</code></pre> <p>Controls footer options</p>"},{"location":"API/panel/table/index.html#fn-optionswithfootermixin","title":"fn options.withFooterMixin","text":"<pre><code>withFooterMixin(value={\"countRows\": false,\"reducer\": [],\"show\": false})\n</code></pre> <p>Controls footer options</p>"},{"location":"API/panel/table/index.html#fn-optionswithframeindex","title":"fn options.withFrameIndex","text":"<pre><code>withFrameIndex(value=0)\n</code></pre> <p>Represents the index of the selected frame</p>"},{"location":"API/panel/table/index.html#fn-optionswithshowheader","title":"fn options.withShowHeader","text":"<pre><code>withShowHeader(value=true)\n</code></pre> <p>Controls whether the panel should show the header</p>"},{"location":"API/panel/table/index.html#fn-optionswithshowtypeicons","title":"fn options.withShowTypeIcons","text":"<pre><code>withShowTypeIcons(value=false)\n</code></pre> <p>Controls whether the header should show icons for the column types</p>"},{"location":"API/panel/table/index.html#fn-optionswithsortby","title":"fn options.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre> <p>Used to control row sorting</p>"},{"location":"API/panel/table/index.html#fn-optionswithsortbymixin","title":"fn options.withSortByMixin","text":"<pre><code>withSortByMixin(value)\n</code></pre> <p>Used to control row sorting</p>"},{"location":"API/panel/table/index.html#obj-optionsfooter","title":"obj options.footer","text":""},{"location":"API/panel/table/index.html#fn-optionsfooterwithtablefooteroptions","title":"fn options.footer.withTableFooterOptions","text":"<pre><code>withTableFooterOptions(value)\n</code></pre> <p>Footer options</p>"},{"location":"API/panel/table/index.html#fn-optionsfooterwithtablefooteroptionsmixin","title":"fn options.footer.withTableFooterOptionsMixin","text":"<pre><code>withTableFooterOptionsMixin(value)\n</code></pre> <p>Footer options</p>"},{"location":"API/panel/table/index.html#obj-optionsfootertablefooteroptions","title":"obj options.footer.TableFooterOptions","text":""},{"location":"API/panel/table/index.html#fn-optionsfootertablefooteroptionswithcountrows","title":"fn options.footer.TableFooterOptions.withCountRows","text":"<pre><code>withCountRows(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-optionsfootertablefooteroptionswithenablepagination","title":"fn options.footer.TableFooterOptions.withEnablePagination","text":"<pre><code>withEnablePagination(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-optionsfootertablefooteroptionswithfields","title":"fn options.footer.TableFooterOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-optionsfootertablefooteroptionswithfieldsmixin","title":"fn options.footer.TableFooterOptions.withFieldsMixin","text":"<pre><code>withFieldsMixin(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-optionsfootertablefooteroptionswithreducer","title":"fn options.footer.TableFooterOptions.withReducer","text":"<pre><code>withReducer(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-optionsfootertablefooteroptionswithreducermixin","title":"fn options.footer.TableFooterOptions.withReducerMixin","text":"<pre><code>withReducerMixin(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-optionsfootertablefooteroptionswithshow","title":"fn options.footer.TableFooterOptions.withShow","text":"<pre><code>withShow(value)\n</code></pre>"},{"location":"API/panel/table/index.html#obj-optionssortby","title":"obj options.sortBy","text":""},{"location":"API/panel/table/index.html#fn-optionssortbywithdesc","title":"fn options.sortBy.withDesc","text":"<pre><code>withDesc(value)\n</code></pre> <p>Flag used to indicate descending sort order</p>"},{"location":"API/panel/table/index.html#fn-optionssortbywithdisplayname","title":"fn options.sortBy.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>Sets the display name of the field to sort by</p>"},{"location":"API/panel/table/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/table/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/table/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/table/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/table/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/table/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/table/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/table/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/table/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/table/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/table/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/table/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/table/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/table/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/table/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/table/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/table/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/table/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/table/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/table/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/table/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/table/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/table/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/table/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/table/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/table/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/table/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/table/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/table/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/table/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/table/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/table/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/table/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/table/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/table/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/table/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/table/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/table/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/table/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/table/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/table/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/table/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/table/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/table/link.html","title":"link","text":""},{"location":"API/panel/table/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/table/link.html#fields","title":"Fields","text":""},{"location":"API/panel/table/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/table/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/table/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/table/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/table/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/table/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/table/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/table/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/table/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/table/transformation.html","title":"transformation","text":""},{"location":"API/panel/table/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/table/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/table/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/table/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/table/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/table/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/table/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/table/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/table/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/table/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/table/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/table/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/table/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/table/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/table/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/table/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/table/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/table/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/table/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/table/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/text/index.html","title":"text","text":"<p>grafonnet.panel.text</p>"},{"location":"API/panel/text/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/text/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCode(value)</code></li> <li><code>fn withCodeMixin(value)</code></li> <li><code>fn withContent(value=\"# Title\\n\\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\")</code></li> <li><code>fn withMode(value)</code></li> <li><code>obj code</code><ul> <li><code>fn withLanguage(value=\"plaintext\")</code></li> <li><code>fn withShowLineNumbers(value=false)</code></li> <li><code>fn withShowMiniMap(value=false)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/text/index.html#fields","title":"Fields","text":""},{"location":"API/panel/text/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new text panel with a title.</p>"},{"location":"API/panel/text/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/text/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/text/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/text/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/text/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/text/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/text/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/text/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/text/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/text/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/text/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/text/index.html#fn-optionswithcode","title":"fn options.withCode","text":"<pre><code>withCode(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-optionswithcodemixin","title":"fn options.withCodeMixin","text":"<pre><code>withCodeMixin(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-optionswithcontent","title":"fn options.withContent","text":"<pre><code>withContent(value=\"# Title\\n\\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\")\n</code></pre>"},{"location":"API/panel/text/index.html#fn-optionswithmode","title":"fn options.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"html\", \"markdown\", \"code\"</p>"},{"location":"API/panel/text/index.html#obj-optionscode","title":"obj options.code","text":""},{"location":"API/panel/text/index.html#fn-optionscodewithlanguage","title":"fn options.code.withLanguage","text":"<pre><code>withLanguage(value=\"plaintext\")\n</code></pre> <p>Accepted values for <code>value</code> are \"plaintext\", \"yaml\", \"xml\", \"typescript\", \"sql\", \"go\", \"markdown\", \"html\", \"json\"</p>"},{"location":"API/panel/text/index.html#fn-optionscodewithshowlinenumbers","title":"fn options.code.withShowLineNumbers","text":"<pre><code>withShowLineNumbers(value=false)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-optionscodewithshowminimap","title":"fn options.code.withShowMiniMap","text":"<pre><code>withShowMiniMap(value=false)\n</code></pre>"},{"location":"API/panel/text/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/text/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/text/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/text/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/text/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/text/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/text/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/text/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/text/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/text/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/text/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/text/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/text/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/text/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/text/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/text/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/text/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/text/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/text/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/text/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/text/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/text/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/text/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/text/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/text/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/text/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/text/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/text/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/text/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/text/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/text/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/text/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/text/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/text/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/text/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/text/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/text/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/text/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/text/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/text/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/text/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/text/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/text/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/text/link.html","title":"link","text":""},{"location":"API/panel/text/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/text/link.html#fields","title":"Fields","text":""},{"location":"API/panel/text/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/text/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/text/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/text/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/text/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/text/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/text/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/text/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/text/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/text/transformation.html","title":"transformation","text":""},{"location":"API/panel/text/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/text/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/text/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/text/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/text/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/text/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/text/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/text/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/text/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/text/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/text/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/text/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/text/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/text/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/text/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/text/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/text/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/text/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/text/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/text/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html","title":"timeSeries","text":"<p>grafonnet.panel.timeSeries</p>"},{"location":"API/panel/timeSeries/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/timeSeries/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>obj defaults</code><ul> <li><code>obj custom</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withBarAlignment(value)</code></li> <li><code>fn withBarMaxWidth(value)</code></li> <li><code>fn withBarWidthFactor(value)</code></li> <li><code>fn withDrawStyle(value)</code></li> <li><code>fn withFillBelowTo(value)</code></li> <li><code>fn withFillColor(value)</code></li> <li><code>fn withFillOpacity(value)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineColor(value)</code></li> <li><code>fn withLineInterpolation(value)</code></li> <li><code>fn withLineStyle(value)</code></li> <li><code>fn withLineStyleMixin(value)</code></li> <li><code>fn withLineWidth(value)</code></li> <li><code>fn withPointColor(value)</code></li> <li><code>fn withPointSize(value)</code></li> <li><code>fn withPointSymbol(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withShowPoints(value)</code></li> <li><code>fn withSpanNulls(value)</code></li> <li><code>fn withSpanNullsMixin(value)</code></li> <li><code>fn withStacking(value)</code></li> <li><code>fn withStackingMixin(value)</code></li> <li><code>fn withThresholdsStyle(value)</code></li> <li><code>fn withThresholdsStyleMixin(value)</code></li> <li><code>fn withTransform(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj lineStyle</code><ul> <li><code>fn withDash(value)</code></li> <li><code>fn withDashMixin(value)</code></li> <li><code>fn withFill(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj stacking</code><ul> <li><code>fn withGroup(value)</code></li> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj thresholdsStyle</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withTimezoneMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/timeSeries/index.html#fields","title":"Fields","text":""},{"location":"API/panel/timeSeries/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new timeSeries panel with a title.</p>"},{"location":"API/panel/timeSeries/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/timeSeries/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"API/panel/timeSeries/index.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"API/panel/timeSeries/index.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithbaralignment","title":"fn fieldConfig.defaults.custom.withBarAlignment","text":"<pre><code>withBarAlignment(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are -1, 0, 1</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithbarmaxwidth","title":"fn fieldConfig.defaults.custom.withBarMaxWidth","text":"<pre><code>withBarMaxWidth(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithbarwidthfactor","title":"fn fieldConfig.defaults.custom.withBarWidthFactor","text":"<pre><code>withBarWidthFactor(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithdrawstyle","title":"fn fieldConfig.defaults.custom.withDrawStyle","text":"<pre><code>withDrawStyle(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"line\", \"bars\", \"points\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithfillbelowto","title":"fn fieldConfig.defaults.custom.withFillBelowTo","text":"<pre><code>withFillBelowTo(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithfillcolor","title":"fn fieldConfig.defaults.custom.withFillColor","text":"<pre><code>withFillColor(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"opacity\", \"hue\", \"scheme\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithlinecolor","title":"fn fieldConfig.defaults.custom.withLineColor","text":"<pre><code>withLineColor(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithlineinterpolation","title":"fn fieldConfig.defaults.custom.withLineInterpolation","text":"<pre><code>withLineInterpolation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"smooth\", \"stepBefore\", \"stepAfter\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithlinestyle","title":"fn fieldConfig.defaults.custom.withLineStyle","text":"<pre><code>withLineStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithlinestylemixin","title":"fn fieldConfig.defaults.custom.withLineStyleMixin","text":"<pre><code>withLineStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithpointcolor","title":"fn fieldConfig.defaults.custom.withPointColor","text":"<pre><code>withPointColor(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithpointsize","title":"fn fieldConfig.defaults.custom.withPointSize","text":"<pre><code>withPointSize(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithpointsymbol","title":"fn fieldConfig.defaults.custom.withPointSymbol","text":"<pre><code>withPointSymbol(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithshowpoints","title":"fn fieldConfig.defaults.custom.withShowPoints","text":"<pre><code>withShowPoints(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithspannulls","title":"fn fieldConfig.defaults.custom.withSpanNulls","text":"<pre><code>withSpanNulls(value)\n</code></pre> <p>Indicate if null values should be treated as gaps or connected. When the value is a number, it represents the maximum delta in the X axis that should be considered connected.  For timeseries, this is milliseconds</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithspannullsmixin","title":"fn fieldConfig.defaults.custom.withSpanNullsMixin","text":"<pre><code>withSpanNullsMixin(value)\n</code></pre> <p>Indicate if null values should be treated as gaps or connected. When the value is a number, it represents the maximum delta in the X axis that should be considered connected.  For timeseries, this is milliseconds</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithstacking","title":"fn fieldConfig.defaults.custom.withStacking","text":"<pre><code>withStacking(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithstackingmixin","title":"fn fieldConfig.defaults.custom.withStackingMixin","text":"<pre><code>withStackingMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwiththresholdsstyle","title":"fn fieldConfig.defaults.custom.withThresholdsStyle","text":"<pre><code>withThresholdsStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwiththresholdsstylemixin","title":"fn fieldConfig.defaults.custom.withThresholdsStyleMixin","text":"<pre><code>withThresholdsStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomwithtransform","title":"fn fieldConfig.defaults.custom.withTransform","text":"<pre><code>withTransform(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"constant\", \"negative-Y\"</p>"},{"location":"API/panel/timeSeries/index.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#obj-fieldconfigdefaultscustomlinestyle","title":"obj fieldConfig.defaults.custom.lineStyle","text":""},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomlinestylewithdash","title":"# fn fieldConfig.defaults.custom.lineStyle.withDash","text":"<pre><code>withDash(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomlinestylewithdashmixin","title":"# fn fieldConfig.defaults.custom.lineStyle.withDashMixin","text":"<pre><code>withDashMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomlinestylewithfill","title":"# fn fieldConfig.defaults.custom.lineStyle.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"solid\", \"dash\", \"dot\", \"square\"</p>"},{"location":"API/panel/timeSeries/index.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/timeSeries/index.html#obj-fieldconfigdefaultscustomstacking","title":"obj fieldConfig.defaults.custom.stacking","text":""},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomstackingwithgroup","title":"# fn fieldConfig.defaults.custom.stacking.withGroup","text":"<pre><code>withGroup(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomstackingwithmode","title":"# fn fieldConfig.defaults.custom.stacking.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"normal\", \"percent\"</p>"},{"location":"API/panel/timeSeries/index.html#obj-fieldconfigdefaultscustomthresholdsstyle","title":"obj fieldConfig.defaults.custom.thresholdsStyle","text":""},{"location":"API/panel/timeSeries/index.html#fn-fieldconfigdefaultscustomthresholdsstylewithmode","title":"# fn fieldConfig.defaults.custom.thresholdsStyle.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"off\", \"line\", \"dashed\", \"area\", \"line+area\", \"dashed+area\", \"series\"</p>"},{"location":"API/panel/timeSeries/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/timeSeries/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/timeSeries/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/timeSeries/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/timeSeries/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/timeSeries/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/timeSeries/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/timeSeries/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/timeSeries/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-optionswithtimezone","title":"fn options.withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionswithtimezonemixin","title":"fn options.withTimezoneMixin","text":"<pre><code>withTimezoneMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/timeSeries/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"API/panel/timeSeries/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/timeSeries/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/timeSeries/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/timeSeries/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/timeSeries/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/timeSeries/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/timeSeries/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/timeSeries/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/timeSeries/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/timeSeries/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/timeSeries/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/timeSeries/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/timeSeries/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/timeSeries/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/timeSeries/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/timeSeries/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/timeSeries/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/timeSeries/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/timeSeries/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/timeSeries/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/timeSeries/link.html","title":"link","text":""},{"location":"API/panel/timeSeries/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/timeSeries/link.html#fields","title":"Fields","text":""},{"location":"API/panel/timeSeries/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/timeSeries/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/timeSeries/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/timeSeries/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/timeSeries/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/timeSeries/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/timeSeries/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/timeSeries/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/timeSeries/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/timeSeries/transformation.html","title":"transformation","text":""},{"location":"API/panel/timeSeries/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/timeSeries/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/timeSeries/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/timeSeries/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/timeSeries/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/timeSeries/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/timeSeries/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/timeSeries/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/timeSeries/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/timeSeries/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/timeSeries/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/timeSeries/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/timeSeries/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/timeSeries/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html","title":"xyChart","text":"<p>grafonnet.panel.xyChart</p>"},{"location":"API/panel/xyChart/index.html#subpackages","title":"Subpackages","text":"<ul> <li>fieldOverride</li> <li>link</li> <li>thresholdStep</li> <li>transformation</li> <li>valueMapping</li> </ul>"},{"location":"API/panel/xyChart/index.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDims(value)</code></li> <li><code>fn withDimsMixin(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withSeries(value)</code></li> <li><code>fn withSeriesMapping(value)</code></li> <li><code>fn withSeriesMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj dims</code><ul> <li><code>fn withExclude(value)</code></li> <li><code>fn withExcludeMixin(value)</code></li> <li><code>fn withFrame(value)</code></li> <li><code>fn withX(value)</code></li> </ul> </li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj series</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withLabelValue(value)</code></li> <li><code>fn withLabelValueMixin(value)</code></li> <li><code>fn withLineColor(value)</code></li> <li><code>fn withLineColorMixin(value)</code></li> <li><code>fn withLineStyle(value)</code></li> <li><code>fn withLineStyleMixin(value)</code></li> <li><code>fn withLineWidth(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withPointColor(value)</code></li> <li><code>fn withPointColorMixin(value)</code></li> <li><code>fn withPointSize(value)</code></li> <li><code>fn withPointSizeMixin(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withShow(value)</code></li> <li><code>fn withX(value)</code></li> <li><code>fn withY(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj labelValue</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj lineColor</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> </ul> </li> <li><code>obj lineStyle</code><ul> <li><code>fn withDash(value)</code></li> <li><code>fn withDashMixin(value)</code></li> <li><code>fn withFill(value)</code></li> </ul> </li> <li><code>obj pointColor</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> </ul> </li> <li><code>obj pointSize</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj panelOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> </ul> </li> <li><code>obj queryOptions</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> </ul> </li> <li><code>obj standardOptions</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj tresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/panel/xyChart/index.html#fields","title":"Fields","text":""},{"location":"API/panel/xyChart/index.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new xyChart panel with a title.</p>"},{"location":"API/panel/xyChart/index.html#obj-datasource","title":"obj datasource","text":""},{"location":"API/panel/xyChart/index.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"API/panel/xyChart/index.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/xyChart/index.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"API/panel/xyChart/index.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"API/panel/xyChart/index.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"API/panel/xyChart/index.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"API/panel/xyChart/index.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"API/panel/xyChart/index.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-options","title":"obj options","text":""},{"location":"API/panel/xyChart/index.html#fn-optionswithdims","title":"fn options.withDims","text":"<pre><code>withDims(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionswithdimsmixin","title":"fn options.withDimsMixin","text":"<pre><code>withDimsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionswithseries","title":"fn options.withSeries","text":"<pre><code>withSeries(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionswithseriesmapping","title":"fn options.withSeriesMapping","text":"<pre><code>withSeriesMapping(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"auto\", \"manual\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionswithseriesmixin","title":"fn options.withSeriesMixin","text":"<pre><code>withSeriesMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#obj-optionsdims","title":"obj options.dims","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsdimswithexclude","title":"fn options.dims.withExclude","text":"<pre><code>withExclude(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsdimswithexcludemixin","title":"fn options.dims.withExcludeMixin","text":"<pre><code>withExcludeMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsdimswithframe","title":"fn options.dims.withFrame","text":"<pre><code>withFrame(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsdimswithx","title":"fn options.dims.withX","text":"<pre><code>withX(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-optionsseries","title":"obj options.series","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxiscenteredzero","title":"fn options.series.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxiscolormode","title":"fn options.series.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxisgridshow","title":"fn options.series.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxislabel","title":"fn options.series.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxisplacement","title":"fn options.series.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxissoftmax","title":"fn options.series.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxissoftmin","title":"fn options.series.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithaxiswidth","title":"fn options.series.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithhidefrom","title":"fn options.series.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithhidefrommixin","title":"fn options.series.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlabel","title":"fn options.series.withLabel","text":"<pre><code>withLabel(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlabelvalue","title":"fn options.series.withLabelValue","text":"<pre><code>withLabelValue(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlabelvaluemixin","title":"fn options.series.withLabelValueMixin","text":"<pre><code>withLabelValueMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlinecolor","title":"fn options.series.withLineColor","text":"<pre><code>withLineColor(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlinecolormixin","title":"fn options.series.withLineColorMixin","text":"<pre><code>withLineColorMixin(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlinestyle","title":"fn options.series.withLineStyle","text":"<pre><code>withLineStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlinestylemixin","title":"fn options.series.withLineStyleMixin","text":"<pre><code>withLineStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithlinewidth","title":"fn options.series.withLineWidth","text":"<pre><code>withLineWidth(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithname","title":"fn options.series.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithpointcolor","title":"fn options.series.withPointColor","text":"<pre><code>withPointColor(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithpointcolormixin","title":"fn options.series.withPointColorMixin","text":"<pre><code>withPointColorMixin(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithpointsize","title":"fn options.series.withPointSize","text":"<pre><code>withPointSize(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithpointsizemixin","title":"fn options.series.withPointSizeMixin","text":"<pre><code>withPointSizeMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithscaledistribution","title":"fn options.series.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithscaledistributionmixin","title":"fn options.series.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithshow","title":"fn options.series.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"points\", \"lines\", \"points+lines\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithx","title":"fn options.series.withX","text":"<pre><code>withX(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieswithy","title":"fn options.series.withY","text":"<pre><code>withY(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-optionsserieshidefrom","title":"obj options.series.hideFrom","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsserieshidefromwithlegend","title":"fn options.series.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieshidefromwithtooltip","title":"fn options.series.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieshidefromwithviz","title":"fn options.series.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-optionsserieslabelvalue","title":"obj options.series.labelValue","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsserieslabelvaluewithfield","title":"fn options.series.labelValue.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieslabelvaluewithfixed","title":"fn options.series.labelValue.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieslabelvaluewithfixedmixin","title":"fn options.series.labelValue.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieslabelvaluewithmode","title":"fn options.series.labelValue.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"fixed\", \"field\", \"template\"</p>"},{"location":"API/panel/xyChart/index.html#obj-optionsserieslinecolor","title":"obj options.series.lineColor","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsserieslinecolorwithfield","title":"fn options.series.lineColor.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieslinecolorwithfixed","title":"fn options.series.lineColor.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieslinecolorwithfixedmixin","title":"fn options.series.lineColor.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-optionsserieslinestyle","title":"obj options.series.lineStyle","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsserieslinestylewithdash","title":"fn options.series.lineStyle.withDash","text":"<pre><code>withDash(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieslinestylewithdashmixin","title":"fn options.series.lineStyle.withDashMixin","text":"<pre><code>withDashMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsserieslinestylewithfill","title":"fn options.series.lineStyle.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"solid\", \"dash\", \"dot\", \"square\"</p>"},{"location":"API/panel/xyChart/index.html#obj-optionsseriespointcolor","title":"obj options.series.pointColor","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointcolorwithfield","title":"fn options.series.pointColor.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointcolorwithfixed","title":"fn options.series.pointColor.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointcolorwithfixedmixin","title":"fn options.series.pointColor.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-optionsseriespointsize","title":"obj options.series.pointSize","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointsizewithfield","title":"fn options.series.pointSize.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointsizewithfixed","title":"fn options.series.pointSize.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointsizewithfixedmixin","title":"fn options.series.pointSize.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointsizewithmax","title":"fn options.series.pointSize.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriespointsizewithmin","title":"fn options.series.pointSize.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-optionsseriesscaledistribution","title":"obj options.series.scaleDistribution","text":""},{"location":"API/panel/xyChart/index.html#fn-optionsseriesscaledistributionwithlinearthreshold","title":"fn options.series.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriesscaledistributionwithlog","title":"fn options.series.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-optionsseriesscaledistributionwithtype","title":"fn options.series.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"API/panel/xyChart/index.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"API/panel/xyChart/index.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"API/panel/xyChart/index.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"API/panel/xyChart/index.html#obj-paneloptions","title":"obj panelOptions","text":""},{"location":"API/panel/xyChart/index.html#fn-paneloptionswithdescription","title":"fn panelOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"API/panel/xyChart/index.html#fn-paneloptionswithlinks","title":"fn panelOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/xyChart/index.html#fn-paneloptionswithlinksmixin","title":"fn panelOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"API/panel/xyChart/index.html#fn-paneloptionswithrepeat","title":"fn panelOptions.withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"API/panel/xyChart/index.html#fn-paneloptionswithrepeatdirection","title":"fn panelOptions.withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"API/panel/xyChart/index.html#fn-paneloptionswithtitle","title":"fn panelOptions.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"API/panel/xyChart/index.html#fn-paneloptionswithtransparent","title":"fn panelOptions.withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"API/panel/xyChart/index.html#obj-queryoptions","title":"obj queryOptions","text":""},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithdatasource","title":"fn queryOptions.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithdatasourcemixin","title":"fn queryOptions.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithinterval","title":"fn queryOptions.withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithmaxdatapoints","title":"fn queryOptions.withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithtargets","title":"fn queryOptions.withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithtargetsmixin","title":"fn queryOptions.withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithtimefrom","title":"fn queryOptions.withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithtimeshift","title":"fn queryOptions.withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithtransformations","title":"fn queryOptions.withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-queryoptionswithtransformationsmixin","title":"fn queryOptions.withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#obj-standardoptions","title":"obj standardOptions","text":""},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithdecimals","title":"fn standardOptions.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithdisplayname","title":"fn standardOptions.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithlinks","title":"fn standardOptions.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithlinksmixin","title":"fn standardOptions.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithmappings","title":"fn standardOptions.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithmappingsmixin","title":"fn standardOptions.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithmax","title":"fn standardOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithmin","title":"fn standardOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithnovalue","title":"fn standardOptions.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithoverrides","title":"fn standardOptions.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithoverridesmixin","title":"fn standardOptions.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionswithunit","title":"fn standardOptions.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"API/panel/xyChart/index.html#obj-standardoptionscolor","title":"obj standardOptions.color","text":""},{"location":"API/panel/xyChart/index.html#fn-standardoptionscolorwithfixedcolor","title":"fn standardOptions.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionscolorwithmode","title":"fn standardOptions.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionscolorwithseriesby","title":"fn standardOptions.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"API/panel/xyChart/index.html#obj-standardoptionstresholds","title":"obj standardOptions.tresholds","text":""},{"location":"API/panel/xyChart/index.html#fn-standardoptionstresholdswithmode","title":"fn standardOptions.tresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionstresholdswithsteps","title":"fn standardOptions.tresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/xyChart/index.html#fn-standardoptionstresholdswithstepsmixin","title":"fn standardOptions.tresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"API/panel/xyChart/fieldOverride.html","title":"fieldOverride","text":"<p>Overrides allow you to customize visualization settings for specific fields or series. This is accomplished by adding an override rule that targets a particular set of fields and that can each define multiple options.</p> <pre><code>fieldOverride.byType.new('number')\n+ fieldOverride.byType.withPropertiesFromOptions(\npanel.standardOptions.withDecimals(2)\n+ panel.standardOptions.withUnit('s')\n)\n</code></pre>"},{"location":"API/panel/xyChart/fieldOverride.html#index","title":"Index","text":"<ul> <li><code>obj byName</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byQuery</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byRegexp</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byType</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> <li><code>obj byValue</code><ul> <li><code>fn new(value)</code></li> <li><code>fn withPropertiesFromOptions(options)</code></li> <li><code>fn withProperty(id, value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/xyChart/fieldOverride.html#fields","title":"Fields","text":""},{"location":"API/panel/xyChart/fieldOverride.html#obj-byname","title":"obj byName","text":""},{"location":"API/panel/xyChart/fieldOverride.html#fn-bynamenew","title":"fn byName.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byName</code>.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-bynamewithpropertiesfromoptions","title":"fn byName.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-bynamewithproperty","title":"fn byName.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#obj-byquery","title":"obj byQuery","text":""},{"location":"API/panel/xyChart/fieldOverride.html#fn-byquerynew","title":"fn byQuery.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byQuery</code>.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-byquerywithpropertiesfromoptions","title":"fn byQuery.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-byquerywithproperty","title":"fn byQuery.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#obj-byregexp","title":"obj byRegexp","text":""},{"location":"API/panel/xyChart/fieldOverride.html#fn-byregexpnew","title":"fn byRegexp.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byRegexp</code>.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-byregexpwithpropertiesfromoptions","title":"fn byRegexp.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-byregexpwithproperty","title":"fn byRegexp.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#obj-bytype","title":"obj byType","text":""},{"location":"API/panel/xyChart/fieldOverride.html#fn-bytypenew","title":"fn byType.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byType</code>.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-bytypewithpropertiesfromoptions","title":"fn byType.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-bytypewithproperty","title":"fn byType.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#obj-byvalue","title":"obj byValue","text":""},{"location":"API/panel/xyChart/fieldOverride.html#fn-byvaluenew","title":"fn byValue.new","text":"<pre><code>new(value)\n</code></pre> <p><code>new</code> creates a new override of type <code>byValue</code>.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-byvaluewithpropertiesfromoptions","title":"fn byValue.withPropertiesFromOptions","text":"<pre><code>withPropertiesFromOptions(options)\n</code></pre> <p><code>withPropertiesFromOptions</code> takes an object with properties that need to be overridden. See example code above.</p>"},{"location":"API/panel/xyChart/fieldOverride.html#fn-byvaluewithproperty","title":"fn byValue.withProperty","text":"<pre><code>withProperty(id, value)\n</code></pre> <p><code>withProperty</code> adds a property that needs to be overridden. This function can be called multiple time, adding more properties.</p>"},{"location":"API/panel/xyChart/link.html","title":"link","text":""},{"location":"API/panel/xyChart/link.html#index","title":"Index","text":"<ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul>"},{"location":"API/panel/xyChart/link.html#fields","title":"Fields","text":""},{"location":"API/panel/xyChart/link.html#fn-withasdropdown","title":"fn withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withicon","title":"fn withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withincludevars","title":"fn withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withkeeptime","title":"fn withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withtargetblank","title":"fn withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withtooltip","title":"fn withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"API/panel/xyChart/link.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"API/panel/xyChart/link.html#fn-withurl","title":"fn withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/panel/xyChart/thresholdStep.html","title":"thresholdStep","text":""},{"location":"API/panel/xyChart/thresholdStep.html#index","title":"Index","text":"<ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"API/panel/xyChart/thresholdStep.html#fields","title":"Fields","text":""},{"location":"API/panel/xyChart/thresholdStep.html#fn-withcolor","title":"fn withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/thresholdStep.html#fn-withindex","title":"fn withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"API/panel/xyChart/thresholdStep.html#fn-withstate","title":"fn withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"API/panel/xyChart/thresholdStep.html#fn-withvalue","title":"fn withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"API/panel/xyChart/transformation.html","title":"transformation","text":""},{"location":"API/panel/xyChart/transformation.html#index","title":"Index","text":"<ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/xyChart/transformation.html#fields","title":"Fields","text":""},{"location":"API/panel/xyChart/transformation.html#fn-withdisabled","title":"fn withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"API/panel/xyChart/transformation.html#fn-withfilter","title":"fn withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"API/panel/xyChart/transformation.html#fn-withfiltermixin","title":"fn withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/transformation.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"API/panel/xyChart/transformation.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"API/panel/xyChart/transformation.html#obj-filter","title":"obj filter","text":""},{"location":"API/panel/xyChart/transformation.html#fn-filterwithid","title":"fn filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"API/panel/xyChart/transformation.html#fn-filterwithoptions","title":"fn filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html","title":"valueMapping","text":""},{"location":"API/panel/xyChart/valueMapping.html#index","title":"Index","text":"<ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"API/panel/xyChart/valueMapping.html#fields","title":"Fields","text":""},{"location":"API/panel/xyChart/valueMapping.html#obj-rangemap","title":"obj RangeMap","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapwithoptions","title":"fn RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapwithoptionsmixin","title":"fn RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapwithtype","title":"fn RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#obj-rangemapoptions","title":"obj RangeMap.options","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionswithfrom","title":"fn RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionswithresult","title":"fn RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionswithresultmixin","title":"fn RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionswithto","title":"fn RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#obj-rangemapoptionsresult","title":"obj RangeMap.options.result","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionsresultwithcolor","title":"fn RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionsresultwithicon","title":"fn RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionsresultwithindex","title":"fn RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-rangemapoptionsresultwithtext","title":"fn RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#obj-regexmap","title":"obj RegexMap","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapwithoptions","title":"fn RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapwithoptionsmixin","title":"fn RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapwithtype","title":"fn RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#obj-regexmapoptions","title":"obj RegexMap.options","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapoptionswithpattern","title":"fn RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapoptionswithresult","title":"fn RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapoptionswithresultmixin","title":"fn RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/valueMapping.html#obj-regexmapoptionsresult","title":"obj RegexMap.options.result","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapoptionsresultwithcolor","title":"fn RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapoptionsresultwithicon","title":"fn RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapoptionsresultwithindex","title":"fn RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-regexmapoptionsresultwithtext","title":"fn RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#obj-specialvaluemap","title":"obj SpecialValueMap","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapwithoptions","title":"fn SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapwithoptionsmixin","title":"fn SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapwithtype","title":"fn SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#obj-specialvaluemapoptions","title":"obj SpecialValueMap.options","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionswithmatch","title":"fn SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionswithpattern","title":"fn SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionswithresult","title":"fn SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionswithresultmixin","title":"fn SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"API/panel/xyChart/valueMapping.html#obj-specialvaluemapoptionsresult","title":"obj SpecialValueMap.options.result","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionsresultwithcolor","title":"fn SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionsresultwithicon","title":"fn SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionsresultwithindex","title":"fn SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-specialvaluemapoptionsresultwithtext","title":"fn SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#obj-valuemap","title":"obj ValueMap","text":""},{"location":"API/panel/xyChart/valueMapping.html#fn-valuemapwithoptions","title":"fn ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-valuemapwithoptionsmixin","title":"fn ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"API/panel/xyChart/valueMapping.html#fn-valuemapwithtype","title":"fn ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/index.html","title":"query","text":"<p>grafonnet.query</p>"},{"location":"API/query/index.html#subpackages","title":"Subpackages","text":"<ul> <li>azureMonitor</li> <li>cloudWatch</li> <li>elasticsearch</li> <li>loki</li> <li>parca</li> <li>phlare</li> <li>prometheus</li> <li>tempo</li> <li>testData</li> </ul>"},{"location":"API/query/azureMonitor.html","title":"azureMonitor","text":"<p>grafonnet.query.azureMonitor</p>"},{"location":"API/query/azureMonitor.html#index","title":"Index","text":"<ul> <li><code>fn withAzureLogAnalytics(value)</code></li> <li><code>fn withAzureLogAnalyticsMixin(value)</code></li> <li><code>fn withAzureMonitor(value)</code></li> <li><code>fn withAzureMonitorMixin(value)</code></li> <li><code>fn withAzureResourceGraph(value)</code></li> <li><code>fn withAzureResourceGraphMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withGrafanaTemplateVariableFn(value)</code></li> <li><code>fn withGrafanaTemplateVariableFnMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withNamespace(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withResource(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withSubscription(value)</code></li> <li><code>fn withSubscriptions(value)</code></li> <li><code>fn withSubscriptionsMixin(value)</code></li> <li><code>obj azureLogAnalytics</code><ul> <li><code>fn withQuery(value)</code></li> <li><code>fn withResource(value)</code></li> <li><code>fn withResources(value)</code></li> <li><code>fn withResourcesMixin(value)</code></li> <li><code>fn withResultFormat(value)</code></li> <li><code>fn withWorkspace(value)</code></li> </ul> </li> <li><code>obj azureMonitor</code><ul> <li><code>fn withAggregation(value)</code></li> <li><code>fn withAlias(value)</code></li> <li><code>fn withAllowedTimeGrainsMs(value)</code></li> <li><code>fn withAllowedTimeGrainsMsMixin(value)</code></li> <li><code>fn withCustomNamespace(value)</code></li> <li><code>fn withDimension(value)</code></li> <li><code>fn withDimensionFilter(value)</code></li> <li><code>fn withDimensionFilters(value)</code></li> <li><code>fn withDimensionFiltersMixin(value)</code></li> <li><code>fn withMetricDefinition(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withResourceUri(value)</code></li> <li><code>fn withResources(value)</code></li> <li><code>fn withResourcesMixin(value)</code></li> <li><code>fn withTimeGrain(value)</code></li> <li><code>fn withTimeGrainUnit(value)</code></li> <li><code>fn withTop(value)</code></li> <li><code>obj dimensionFilters</code><ul> <li><code>fn withDimension(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>fn withOperator(value)</code></li> </ul> </li> <li><code>obj resources</code><ul> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> </ul> </li> <li><code>obj azureResourceGraph</code><ul> <li><code>fn withQuery(value)</code></li> <li><code>fn withResultFormat(value)</code></li> </ul> </li> <li><code>obj grafanaTemplateVariableFn</code><ul> <li><code>fn withAppInsightsGroupByQuery(value)</code></li> <li><code>fn withAppInsightsGroupByQueryMixin(value)</code></li> <li><code>fn withAppInsightsMetricNameQuery(value)</code></li> <li><code>fn withAppInsightsMetricNameQueryMixin(value)</code></li> <li><code>fn withMetricDefinitionsQuery(value)</code></li> <li><code>fn withMetricDefinitionsQueryMixin(value)</code></li> <li><code>fn withMetricNamesQuery(value)</code></li> <li><code>fn withMetricNamesQueryMixin(value)</code></li> <li><code>fn withMetricNamespaceQuery(value)</code></li> <li><code>fn withMetricNamespaceQueryMixin(value)</code></li> <li><code>fn withResourceGroupsQuery(value)</code></li> <li><code>fn withResourceGroupsQueryMixin(value)</code></li> <li><code>fn withResourceNamesQuery(value)</code></li> <li><code>fn withResourceNamesQueryMixin(value)</code></li> <li><code>fn withSubscriptionsQuery(value)</code></li> <li><code>fn withSubscriptionsQueryMixin(value)</code></li> <li><code>fn withUnknownQuery(value)</code></li> <li><code>fn withUnknownQueryMixin(value)</code></li> <li><code>fn withWorkspacesQuery(value)</code></li> <li><code>fn withWorkspacesQueryMixin(value)</code></li> <li><code>obj AppInsightsGroupByQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj AppInsightsMetricNameQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj MetricDefinitionsQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj MetricNamesQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj MetricNamespaceQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj ResourceGroupsQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj ResourceNamesQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj SubscriptionsQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj UnknownQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj WorkspacesQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"API/query/azureMonitor.html#fields","title":"Fields","text":""},{"location":"API/query/azureMonitor.html#fn-withazureloganalytics","title":"fn withAzureLogAnalytics","text":"<pre><code>withAzureLogAnalytics(value)\n</code></pre> <p>Azure Monitor Logs sub-query properties</p>"},{"location":"API/query/azureMonitor.html#fn-withazureloganalyticsmixin","title":"fn withAzureLogAnalyticsMixin","text":"<pre><code>withAzureLogAnalyticsMixin(value)\n</code></pre> <p>Azure Monitor Logs sub-query properties</p>"},{"location":"API/query/azureMonitor.html#fn-withazuremonitor","title":"fn withAzureMonitor","text":"<pre><code>withAzureMonitor(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withazuremonitormixin","title":"fn withAzureMonitorMixin","text":"<pre><code>withAzureMonitorMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withazureresourcegraph","title":"fn withAzureResourceGraph","text":"<pre><code>withAzureResourceGraph(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withazureresourcegraphmixin","title":"fn withAzureResourceGraphMixin","text":"<pre><code>withAzureResourceGraphMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/azureMonitor.html#fn-withgrafanatemplatevariablefn","title":"fn withGrafanaTemplateVariableFn","text":"<pre><code>withGrafanaTemplateVariableFn(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withgrafanatemplatevariablefnmixin","title":"fn withGrafanaTemplateVariableFnMixin","text":"<pre><code>withGrafanaTemplateVariableFnMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/azureMonitor.html#fn-withnamespace","title":"fn withNamespace","text":"<pre><code>withNamespace(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/azureMonitor.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/azureMonitor.html#fn-withregion","title":"fn withRegion","text":"<pre><code>withRegion(value)\n</code></pre> <p>Azure Monitor query type. queryType: #AzureQueryType</p>"},{"location":"API/query/azureMonitor.html#fn-withresource","title":"fn withResource","text":"<pre><code>withResource(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-withresourcegroup","title":"fn withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre> <p>Template variables params. These exist for backwards compatiblity with legacy template variables.</p>"},{"location":"API/query/azureMonitor.html#fn-withsubscription","title":"fn withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre> <p>Azure subscription containing the resource(s) to be queried.</p>"},{"location":"API/query/azureMonitor.html#fn-withsubscriptions","title":"fn withSubscriptions","text":"<pre><code>withSubscriptions(value)\n</code></pre> <p>Subscriptions to be queried via Azure Resource Graph.</p>"},{"location":"API/query/azureMonitor.html#fn-withsubscriptionsmixin","title":"fn withSubscriptionsMixin","text":"<pre><code>withSubscriptionsMixin(value)\n</code></pre> <p>Subscriptions to be queried via Azure Resource Graph.</p>"},{"location":"API/query/azureMonitor.html#obj-azureloganalytics","title":"obj azureLogAnalytics","text":""},{"location":"API/query/azureMonitor.html#fn-azureloganalyticswithquery","title":"fn azureLogAnalytics.withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>KQL query to be executed.</p>"},{"location":"API/query/azureMonitor.html#fn-azureloganalyticswithresource","title":"fn azureLogAnalytics.withResource","text":"<pre><code>withResource(value)\n</code></pre> <p>@deprecated Use resources instead</p>"},{"location":"API/query/azureMonitor.html#fn-azureloganalyticswithresources","title":"fn azureLogAnalytics.withResources","text":"<pre><code>withResources(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"API/query/azureMonitor.html#fn-azureloganalyticswithresourcesmixin","title":"fn azureLogAnalytics.withResourcesMixin","text":"<pre><code>withResourcesMixin(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"API/query/azureMonitor.html#fn-azureloganalyticswithresultformat","title":"fn azureLogAnalytics.withResultFormat","text":"<pre><code>withResultFormat(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"table\", \"time_series\"</p>"},{"location":"API/query/azureMonitor.html#fn-azureloganalyticswithworkspace","title":"fn azureLogAnalytics.withWorkspace","text":"<pre><code>withWorkspace(value)\n</code></pre> <p>Workspace ID. This was removed in Grafana 8, but remains for backwards compat</p>"},{"location":"API/query/azureMonitor.html#obj-azuremonitor","title":"obj azureMonitor","text":""},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithaggregation","title":"fn azureMonitor.withAggregation","text":"<pre><code>withAggregation(value)\n</code></pre> <p>The aggregation to be used within the query. Defaults to the primaryAggregationType defined by the metric.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithalias","title":"fn azureMonitor.withAlias","text":"<pre><code>withAlias(value)\n</code></pre> <p>Aliases can be set to modify the legend labels. e.g. {{ resourceGroup }}. See docs for more detail.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithallowedtimegrainsms","title":"fn azureMonitor.withAllowedTimeGrainsMs","text":"<pre><code>withAllowedTimeGrainsMs(value)\n</code></pre> <p>Time grains that are supported by the metric.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithallowedtimegrainsmsmixin","title":"fn azureMonitor.withAllowedTimeGrainsMsMixin","text":"<pre><code>withAllowedTimeGrainsMsMixin(value)\n</code></pre> <p>Time grains that are supported by the metric.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithcustomnamespace","title":"fn azureMonitor.withCustomNamespace","text":"<pre><code>withCustomNamespace(value)\n</code></pre> <p>Used as the value for the metricNamespace property when it's different from the resource namespace.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithdimension","title":"fn azureMonitor.withDimension","text":"<pre><code>withDimension(value)\n</code></pre> <p>@deprecated This property was migrated to dimensionFilters and should only be accessed in the migration</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithdimensionfilter","title":"fn azureMonitor.withDimensionFilter","text":"<pre><code>withDimensionFilter(value)\n</code></pre> <p>@deprecated This property was migrated to dimensionFilters and should only be accessed in the migration</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithdimensionfilters","title":"fn azureMonitor.withDimensionFilters","text":"<pre><code>withDimensionFilters(value)\n</code></pre> <p>Filters to reduce the set of data returned. Dimensions that can be filtered on are defined by the metric.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithdimensionfiltersmixin","title":"fn azureMonitor.withDimensionFiltersMixin","text":"<pre><code>withDimensionFiltersMixin(value)\n</code></pre> <p>Filters to reduce the set of data returned. Dimensions that can be filtered on are defined by the metric.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithmetricdefinition","title":"fn azureMonitor.withMetricDefinition","text":"<pre><code>withMetricDefinition(value)\n</code></pre> <p>@deprecated Use metricNamespace instead</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithmetricname","title":"fn azureMonitor.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre> <p>The metric to query data for within the specified metricNamespace. e.g. UsedCapacity</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithmetricnamespace","title":"fn azureMonitor.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre> <p>metricNamespace is used as the resource type (or resource namespace). It's usually equal to the target metric namespace. e.g. microsoft.storage/storageaccounts Kept the name of the variable as metricNamespace to avoid backward incompatibility issues.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithregion","title":"fn azureMonitor.withRegion","text":"<pre><code>withRegion(value)\n</code></pre> <p>The Azure region containing the resource(s).</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithresourcegroup","title":"fn azureMonitor.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre> <p>@deprecated Use resources instead</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithresourcename","title":"fn azureMonitor.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre> <p>@deprecated Use resources instead</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithresourceuri","title":"fn azureMonitor.withResourceUri","text":"<pre><code>withResourceUri(value)\n</code></pre> <p>@deprecated Use resourceGroup, resourceName and metricNamespace instead</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithresources","title":"fn azureMonitor.withResources","text":"<pre><code>withResources(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithresourcesmixin","title":"fn azureMonitor.withResourcesMixin","text":"<pre><code>withResourcesMixin(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithtimegrain","title":"fn azureMonitor.withTimeGrain","text":"<pre><code>withTimeGrain(value)\n</code></pre> <p>The granularity of data points to be queried. Defaults to auto.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithtimegrainunit","title":"fn azureMonitor.withTimeGrainUnit","text":"<pre><code>withTimeGrainUnit(value)\n</code></pre> <p>@deprecated</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorwithtop","title":"fn azureMonitor.withTop","text":"<pre><code>withTop(value)\n</code></pre> <p>Maximum number of records to return. Defaults to 10.</p>"},{"location":"API/query/azureMonitor.html#obj-azuremonitordimensionfilters","title":"obj azureMonitor.dimensionFilters","text":""},{"location":"API/query/azureMonitor.html#fn-azuremonitordimensionfilterswithdimension","title":"fn azureMonitor.dimensionFilters.withDimension","text":"<pre><code>withDimension(value)\n</code></pre> <p>Name of Dimension to be filtered on.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitordimensionfilterswithfilter","title":"fn azureMonitor.dimensionFilters.withFilter","text":"<pre><code>withFilter(value)\n</code></pre> <p>@deprecated filter is deprecated in favour of filters to support multiselect.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitordimensionfilterswithfilters","title":"fn azureMonitor.dimensionFilters.withFilters","text":"<pre><code>withFilters(value)\n</code></pre> <p>Values to match with the filter.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitordimensionfilterswithfiltersmixin","title":"fn azureMonitor.dimensionFilters.withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre> <p>Values to match with the filter.</p>"},{"location":"API/query/azureMonitor.html#fn-azuremonitordimensionfilterswithoperator","title":"fn azureMonitor.dimensionFilters.withOperator","text":"<pre><code>withOperator(value)\n</code></pre> <p>String denoting the filter operation. Supports 'eq' - equals,'ne' - not equals, 'sw' - starts with. Note that some dimensions may not support all operators.</p>"},{"location":"API/query/azureMonitor.html#obj-azuremonitorresources","title":"obj azureMonitor.resources","text":""},{"location":"API/query/azureMonitor.html#fn-azuremonitorresourceswithmetricnamespace","title":"fn azureMonitor.resources.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorresourceswithregion","title":"fn azureMonitor.resources.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorresourceswithresourcegroup","title":"fn azureMonitor.resources.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorresourceswithresourcename","title":"fn azureMonitor.resources.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-azuremonitorresourceswithsubscription","title":"fn azureMonitor.resources.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-azureresourcegraph","title":"obj azureResourceGraph","text":""},{"location":"API/query/azureMonitor.html#fn-azureresourcegraphwithquery","title":"fn azureResourceGraph.withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>Azure Resource Graph KQL query to be executed.</p>"},{"location":"API/query/azureMonitor.html#fn-azureresourcegraphwithresultformat","title":"fn azureResourceGraph.withResultFormat","text":"<pre><code>withResultFormat(value)\n</code></pre> <p>Specifies the format results should be returned as. Defaults to table.</p>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefn","title":"obj grafanaTemplateVariableFn","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsgroupbyquery","title":"fn grafanaTemplateVariableFn.withAppInsightsGroupByQuery","text":"<pre><code>withAppInsightsGroupByQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsgroupbyquerymixin","title":"fn grafanaTemplateVariableFn.withAppInsightsGroupByQueryMixin","text":"<pre><code>withAppInsightsGroupByQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsmetricnamequery","title":"fn grafanaTemplateVariableFn.withAppInsightsMetricNameQuery","text":"<pre><code>withAppInsightsMetricNameQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsmetricnamequerymixin","title":"fn grafanaTemplateVariableFn.withAppInsightsMetricNameQueryMixin","text":"<pre><code>withAppInsightsMetricNameQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricdefinitionsquery","title":"fn grafanaTemplateVariableFn.withMetricDefinitionsQuery","text":"<pre><code>withMetricDefinitionsQuery(value)\n</code></pre> <p>@deprecated Use MetricNamespaceQuery instead</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricdefinitionsquerymixin","title":"fn grafanaTemplateVariableFn.withMetricDefinitionsQueryMixin","text":"<pre><code>withMetricDefinitionsQueryMixin(value)\n</code></pre> <p>@deprecated Use MetricNamespaceQuery instead</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamesquery","title":"fn grafanaTemplateVariableFn.withMetricNamesQuery","text":"<pre><code>withMetricNamesQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamesquerymixin","title":"fn grafanaTemplateVariableFn.withMetricNamesQueryMixin","text":"<pre><code>withMetricNamesQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamespacequery","title":"fn grafanaTemplateVariableFn.withMetricNamespaceQuery","text":"<pre><code>withMetricNamespaceQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamespacequerymixin","title":"fn grafanaTemplateVariableFn.withMetricNamespaceQueryMixin","text":"<pre><code>withMetricNamespaceQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcegroupsquery","title":"fn grafanaTemplateVariableFn.withResourceGroupsQuery","text":"<pre><code>withResourceGroupsQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcegroupsquerymixin","title":"fn grafanaTemplateVariableFn.withResourceGroupsQueryMixin","text":"<pre><code>withResourceGroupsQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcenamesquery","title":"fn grafanaTemplateVariableFn.withResourceNamesQuery","text":"<pre><code>withResourceNamesQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcenamesquerymixin","title":"fn grafanaTemplateVariableFn.withResourceNamesQueryMixin","text":"<pre><code>withResourceNamesQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithsubscriptionsquery","title":"fn grafanaTemplateVariableFn.withSubscriptionsQuery","text":"<pre><code>withSubscriptionsQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithsubscriptionsquerymixin","title":"fn grafanaTemplateVariableFn.withSubscriptionsQueryMixin","text":"<pre><code>withSubscriptionsQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithunknownquery","title":"fn grafanaTemplateVariableFn.withUnknownQuery","text":"<pre><code>withUnknownQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithunknownquerymixin","title":"fn grafanaTemplateVariableFn.withUnknownQueryMixin","text":"<pre><code>withUnknownQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithworkspacesquery","title":"fn grafanaTemplateVariableFn.withWorkspacesQuery","text":"<pre><code>withWorkspacesQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnwithworkspacesquerymixin","title":"fn grafanaTemplateVariableFn.withWorkspacesQueryMixin","text":"<pre><code>withWorkspacesQueryMixin(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnappinsightsgroupbyquery","title":"obj grafanaTemplateVariableFn.AppInsightsGroupByQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsgroupbyquerywithkind","title":"fn grafanaTemplateVariableFn.AppInsightsGroupByQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"AppInsightsGroupByQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsgroupbyquerywithmetricname","title":"fn grafanaTemplateVariableFn.AppInsightsGroupByQuery.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsgroupbyquerywithrawquery","title":"fn grafanaTemplateVariableFn.AppInsightsGroupByQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnappinsightsmetricnamequery","title":"obj grafanaTemplateVariableFn.AppInsightsMetricNameQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsmetricnamequerywithkind","title":"fn grafanaTemplateVariableFn.AppInsightsMetricNameQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"AppInsightsMetricNameQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsmetricnamequerywithrawquery","title":"fn grafanaTemplateVariableFn.AppInsightsMetricNameQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnmetricdefinitionsquery","title":"obj grafanaTemplateVariableFn.MetricDefinitionsQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithkind","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"MetricDefinitionsQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithrawquery","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithresourcegroup","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithresourcename","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithsubscription","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnmetricnamesquery","title":"obj grafanaTemplateVariableFn.MetricNamesQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithkind","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"MetricNamesQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithrawquery","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithresourcegroup","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithresourcename","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithsubscription","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnmetricnamespacequery","title":"obj grafanaTemplateVariableFn.MetricNamespaceQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithkind","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"MetricNamespaceQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithrawquery","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithresourcegroup","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithresourcename","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithsubscription","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnresourcegroupsquery","title":"obj grafanaTemplateVariableFn.ResourceGroupsQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcegroupsquerywithkind","title":"fn grafanaTemplateVariableFn.ResourceGroupsQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"ResourceGroupsQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcegroupsquerywithrawquery","title":"fn grafanaTemplateVariableFn.ResourceGroupsQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcegroupsquerywithsubscription","title":"fn grafanaTemplateVariableFn.ResourceGroupsQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnresourcenamesquery","title":"obj grafanaTemplateVariableFn.ResourceNamesQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithkind","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"ResourceNamesQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithrawquery","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithresourcegroup","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithsubscription","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnsubscriptionsquery","title":"obj grafanaTemplateVariableFn.SubscriptionsQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnsubscriptionsquerywithkind","title":"fn grafanaTemplateVariableFn.SubscriptionsQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"SubscriptionsQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnsubscriptionsquerywithrawquery","title":"fn grafanaTemplateVariableFn.SubscriptionsQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnunknownquery","title":"obj grafanaTemplateVariableFn.UnknownQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnunknownquerywithkind","title":"fn grafanaTemplateVariableFn.UnknownQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"UnknownQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnunknownquerywithrawquery","title":"fn grafanaTemplateVariableFn.UnknownQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#obj-grafanatemplatevariablefnworkspacesquery","title":"obj grafanaTemplateVariableFn.WorkspacesQuery","text":""},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnworkspacesquerywithkind","title":"fn grafanaTemplateVariableFn.WorkspacesQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"WorkspacesQuery\"</p>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnworkspacesquerywithrawquery","title":"fn grafanaTemplateVariableFn.WorkspacesQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"API/query/azureMonitor.html#fn-grafanatemplatevariablefnworkspacesquerywithsubscription","title":"fn grafanaTemplateVariableFn.WorkspacesQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html","title":"cloudWatch","text":"<p>grafonnet.query.cloudWatch</p>"},{"location":"API/query/cloudWatch.html#index","title":"Index","text":"<ul> <li><code>obj CloudWatchAnnotationQuery</code><ul> <li><code>fn withAccountId(value)</code></li> <li><code>fn withActionPrefix(value)</code></li> <li><code>fn withAlarmNamePrefix(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDimensions(value)</code></li> <li><code>fn withDimensionsMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withMatchExact(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withNamespace(value)</code></li> <li><code>fn withPeriod(value)</code></li> <li><code>fn withPrefixMatching(value)</code></li> <li><code>fn withQueryMode(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withStatistic(value)</code></li> <li><code>fn withStatistics(value)</code></li> <li><code>fn withStatisticsMixin(value)</code></li> </ul> </li> <li><code>obj CloudWatchLogsQuery</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withExpression(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withLogGroupNames(value)</code></li> <li><code>fn withLogGroupNamesMixin(value)</code></li> <li><code>fn withLogGroups(value)</code></li> <li><code>fn withLogGroupsMixin(value)</code></li> <li><code>fn withQueryMode(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withStatsGroups(value)</code></li> <li><code>fn withStatsGroupsMixin(value)</code></li> <li><code>obj logGroups</code><ul> <li><code>fn withAccountId(value)</code></li> <li><code>fn withAccountLabel(value)</code></li> <li><code>fn withArn(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> </ul> </li> <li><code>obj CloudWatchMetricsQuery</code><ul> <li><code>fn withAccountId(value)</code></li> <li><code>fn withAlias(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDimensions(value)</code></li> <li><code>fn withDimensionsMixin(value)</code></li> <li><code>fn withExpression(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withMatchExact(value)</code></li> <li><code>fn withMetricEditorMode(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withMetricQueryType(value)</code></li> <li><code>fn withNamespace(value)</code></li> <li><code>fn withPeriod(value)</code></li> <li><code>fn withQueryMode(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withSql(value)</code></li> <li><code>fn withSqlExpression(value)</code></li> <li><code>fn withSqlMixin(value)</code></li> <li><code>fn withStatistic(value)</code></li> <li><code>fn withStatistics(value)</code></li> <li><code>fn withStatisticsMixin(value)</code></li> <li><code>obj sql</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withFromMixin(value)</code></li> <li><code>fn withGroupBy(value)</code></li> <li><code>fn withGroupByMixin(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withOrderBy(value)</code></li> <li><code>fn withOrderByDirection(value)</code></li> <li><code>fn withOrderByMixin(value)</code></li> <li><code>fn withSelect(value)</code></li> <li><code>fn withSelectMixin(value)</code></li> <li><code>fn withWhere(value)</code></li> <li><code>fn withWhereMixin(value)</code></li> <li><code>obj from</code><ul> <li><code>fn withQueryEditorFunctionExpression(value)</code></li> <li><code>fn withQueryEditorFunctionExpressionMixin(value)</code></li> <li><code>fn withQueryEditorPropertyExpression(value)</code></li> <li><code>fn withQueryEditorPropertyExpressionMixin(value)</code></li> <li><code>obj QueryEditorFunctionExpression</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withParameters(value)</code></li> <li><code>fn withParametersMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj parameters</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj QueryEditorPropertyExpression</code><ul> <li><code>fn withProperty(value)</code></li> <li><code>fn withPropertyMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj property</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj groupBy</code><ul> <li><code>fn withExpressions(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj orderBy</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withParameters(value)</code></li> <li><code>fn withParametersMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj parameters</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj select</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withParameters(value)</code></li> <li><code>fn withParametersMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj parameters</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj where</code><ul> <li><code>fn withExpressions(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"API/query/cloudWatch.html#fields","title":"Fields","text":""},{"location":"API/query/cloudWatch.html#obj-cloudwatchannotationquery","title":"obj CloudWatchAnnotationQuery","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithaccountid","title":"fn CloudWatchAnnotationQuery.withAccountId","text":"<pre><code>withAccountId(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithactionprefix","title":"fn CloudWatchAnnotationQuery.withActionPrefix","text":"<pre><code>withActionPrefix(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithalarmnameprefix","title":"fn CloudWatchAnnotationQuery.withAlarmNamePrefix","text":"<pre><code>withAlarmNamePrefix(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithdatasource","title":"fn CloudWatchAnnotationQuery.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithdimensions","title":"fn CloudWatchAnnotationQuery.withDimensions","text":"<pre><code>withDimensions(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithdimensionsmixin","title":"fn CloudWatchAnnotationQuery.withDimensionsMixin","text":"<pre><code>withDimensionsMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithhide","title":"fn CloudWatchAnnotationQuery.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithmatchexact","title":"fn CloudWatchAnnotationQuery.withMatchExact","text":"<pre><code>withMatchExact(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithmetricname","title":"fn CloudWatchAnnotationQuery.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithnamespace","title":"fn CloudWatchAnnotationQuery.withNamespace","text":"<pre><code>withNamespace(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithperiod","title":"fn CloudWatchAnnotationQuery.withPeriod","text":"<pre><code>withPeriod(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithprefixmatching","title":"fn CloudWatchAnnotationQuery.withPrefixMatching","text":"<pre><code>withPrefixMatching(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithquerymode","title":"fn CloudWatchAnnotationQuery.withQueryMode","text":"<pre><code>withQueryMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Metrics\", \"Logs\", \"Annotations\"</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithquerytype","title":"fn CloudWatchAnnotationQuery.withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithrefid","title":"fn CloudWatchAnnotationQuery.withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithregion","title":"fn CloudWatchAnnotationQuery.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithstatistic","title":"fn CloudWatchAnnotationQuery.withStatistic","text":"<pre><code>withStatistic(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithstatistics","title":"fn CloudWatchAnnotationQuery.withStatistics","text":"<pre><code>withStatistics(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchannotationquerywithstatisticsmixin","title":"fn CloudWatchAnnotationQuery.withStatisticsMixin","text":"<pre><code>withStatisticsMixin(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchlogsquery","title":"obj CloudWatchLogsQuery","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithdatasource","title":"fn CloudWatchLogsQuery.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithexpression","title":"fn CloudWatchLogsQuery.withExpression","text":"<pre><code>withExpression(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithhide","title":"fn CloudWatchLogsQuery.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithid","title":"fn CloudWatchLogsQuery.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroupnames","title":"fn CloudWatchLogsQuery.withLogGroupNames","text":"<pre><code>withLogGroupNames(value)\n</code></pre> <p>deprecated, use logGroups instead</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroupnamesmixin","title":"fn CloudWatchLogsQuery.withLogGroupNamesMixin","text":"<pre><code>withLogGroupNamesMixin(value)\n</code></pre> <p>deprecated, use logGroups instead</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroups","title":"fn CloudWatchLogsQuery.withLogGroups","text":"<pre><code>withLogGroups(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroupsmixin","title":"fn CloudWatchLogsQuery.withLogGroupsMixin","text":"<pre><code>withLogGroupsMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithquerymode","title":"fn CloudWatchLogsQuery.withQueryMode","text":"<pre><code>withQueryMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Metrics\", \"Logs\", \"Annotations\"</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithquerytype","title":"fn CloudWatchLogsQuery.withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithrefid","title":"fn CloudWatchLogsQuery.withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithregion","title":"fn CloudWatchLogsQuery.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithstatsgroups","title":"fn CloudWatchLogsQuery.withStatsGroups","text":"<pre><code>withStatsGroups(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsquerywithstatsgroupsmixin","title":"fn CloudWatchLogsQuery.withStatsGroupsMixin","text":"<pre><code>withStatsGroupsMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchlogsqueryloggroups","title":"obj CloudWatchLogsQuery.logGroups","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswithaccountid","title":"fn CloudWatchLogsQuery.logGroups.withAccountId","text":"<pre><code>withAccountId(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswithaccountlabel","title":"fn CloudWatchLogsQuery.logGroups.withAccountLabel","text":"<pre><code>withAccountLabel(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswitharn","title":"fn CloudWatchLogsQuery.logGroups.withArn","text":"<pre><code>withArn(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswithname","title":"fn CloudWatchLogsQuery.logGroups.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquery","title":"obj CloudWatchMetricsQuery","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithaccountid","title":"fn CloudWatchMetricsQuery.withAccountId","text":"<pre><code>withAccountId(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithalias","title":"fn CloudWatchMetricsQuery.withAlias","text":"<pre><code>withAlias(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithdatasource","title":"fn CloudWatchMetricsQuery.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithdimensions","title":"fn CloudWatchMetricsQuery.withDimensions","text":"<pre><code>withDimensions(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithdimensionsmixin","title":"fn CloudWatchMetricsQuery.withDimensionsMixin","text":"<pre><code>withDimensionsMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithexpression","title":"fn CloudWatchMetricsQuery.withExpression","text":"<pre><code>withExpression(value)\n</code></pre> <p>Math expression query</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithhide","title":"fn CloudWatchMetricsQuery.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithid","title":"fn CloudWatchMetricsQuery.withId","text":"<pre><code>withId(value)\n</code></pre> <p>common props</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithlabel","title":"fn CloudWatchMetricsQuery.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmatchexact","title":"fn CloudWatchMetricsQuery.withMatchExact","text":"<pre><code>withMatchExact(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmetriceditormode","title":"fn CloudWatchMetricsQuery.withMetricEditorMode","text":"<pre><code>withMetricEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmetricname","title":"fn CloudWatchMetricsQuery.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmetricquerytype","title":"fn CloudWatchMetricsQuery.withMetricQueryType","text":"<pre><code>withMetricQueryType(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithnamespace","title":"fn CloudWatchMetricsQuery.withNamespace","text":"<pre><code>withNamespace(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithperiod","title":"fn CloudWatchMetricsQuery.withPeriod","text":"<pre><code>withPeriod(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithquerymode","title":"fn CloudWatchMetricsQuery.withQueryMode","text":"<pre><code>withQueryMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Metrics\", \"Logs\", \"Annotations\"</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithquerytype","title":"fn CloudWatchMetricsQuery.withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithrefid","title":"fn CloudWatchMetricsQuery.withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithregion","title":"fn CloudWatchMetricsQuery.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithsql","title":"fn CloudWatchMetricsQuery.withSql","text":"<pre><code>withSql(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithsqlexpression","title":"fn CloudWatchMetricsQuery.withSqlExpression","text":"<pre><code>withSqlExpression(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithsqlmixin","title":"fn CloudWatchMetricsQuery.withSqlMixin","text":"<pre><code>withSqlMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithstatistic","title":"fn CloudWatchMetricsQuery.withStatistic","text":"<pre><code>withStatistic(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithstatistics","title":"fn CloudWatchMetricsQuery.withStatistics","text":"<pre><code>withStatistics(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerywithstatisticsmixin","title":"fn CloudWatchMetricsQuery.withStatisticsMixin","text":"<pre><code>withStatisticsMixin(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysql","title":"obj CloudWatchMetricsQuery.sql","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithfrom","title":"fn CloudWatchMetricsQuery.sql.withFrom","text":"<pre><code>withFrom(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithfrommixin","title":"fn CloudWatchMetricsQuery.sql.withFromMixin","text":"<pre><code>withFromMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithgroupby","title":"fn CloudWatchMetricsQuery.sql.withGroupBy","text":"<pre><code>withGroupBy(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithgroupbymixin","title":"fn CloudWatchMetricsQuery.sql.withGroupByMixin","text":"<pre><code>withGroupByMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithlimit","title":"fn CloudWatchMetricsQuery.sql.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithorderby","title":"fn CloudWatchMetricsQuery.sql.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithorderbydirection","title":"fn CloudWatchMetricsQuery.sql.withOrderByDirection","text":"<pre><code>withOrderByDirection(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithorderbymixin","title":"fn CloudWatchMetricsQuery.sql.withOrderByMixin","text":"<pre><code>withOrderByMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithselect","title":"fn CloudWatchMetricsQuery.sql.withSelect","text":"<pre><code>withSelect(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithselectmixin","title":"fn CloudWatchMetricsQuery.sql.withSelectMixin","text":"<pre><code>withSelectMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithwhere","title":"fn CloudWatchMetricsQuery.sql.withWhere","text":"<pre><code>withWhere(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithwheremixin","title":"fn CloudWatchMetricsQuery.sql.withWhereMixin","text":"<pre><code>withWhereMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfrom","title":"obj CloudWatchMetricsQuery.sql.from","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorfunctionexpression","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorFunctionExpression","text":"<pre><code>withQueryEditorFunctionExpression(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorfunctionexpressionmixin","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorFunctionExpressionMixin","text":"<pre><code>withQueryEditorFunctionExpressionMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorpropertyexpression","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorPropertyExpression","text":"<pre><code>withQueryEditorPropertyExpression(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorpropertyexpressionmixin","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorPropertyExpressionMixin","text":"<pre><code>withQueryEditorPropertyExpressionMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpression","title":"obj CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithname","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithparameters","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withParameters","text":"<pre><code>withParameters(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithparametersmixin","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withParametersMixin","text":"<pre><code>withParametersMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithtype","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionparameters","title":"# obj CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.parameters","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionparameterswithname","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.parameters.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionparameterswithtype","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.parameters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpression","title":"obj CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionwithproperty","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.withProperty","text":"<pre><code>withProperty(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionwithpropertymixin","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.withPropertyMixin","text":"<pre><code>withPropertyMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionwithtype","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionproperty","title":"# obj CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.property","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionpropertywithname","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.property.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionpropertywithtype","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.property.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"string\"</p>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlgroupby","title":"obj CloudWatchMetricsQuery.sql.groupBy","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlgroupbywithexpressions","title":"fn CloudWatchMetricsQuery.sql.groupBy.withExpressions","text":"<pre><code>withExpressions(value)\n</code></pre> <p>TS type expressions: QueryEditorExpression[] | QueryEditorArrayExpression[], extended in veneer</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlgroupbywithtype","title":"fn CloudWatchMetricsQuery.sql.groupBy.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO this doesn't work; temporarily extended in veneer</p> <p>Accepted values for <code>value</code> are \"and\", \"or\"</p>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlorderby","title":"obj CloudWatchMetricsQuery.sql.orderBy","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithname","title":"fn CloudWatchMetricsQuery.sql.orderBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithparameters","title":"fn CloudWatchMetricsQuery.sql.orderBy.withParameters","text":"<pre><code>withParameters(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithparametersmixin","title":"fn CloudWatchMetricsQuery.sql.orderBy.withParametersMixin","text":"<pre><code>withParametersMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithtype","title":"fn CloudWatchMetricsQuery.sql.orderBy.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlorderbyparameters","title":"obj CloudWatchMetricsQuery.sql.orderBy.parameters","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbyparameterswithname","title":"# fn CloudWatchMetricsQuery.sql.orderBy.parameters.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbyparameterswithtype","title":"# fn CloudWatchMetricsQuery.sql.orderBy.parameters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlselect","title":"obj CloudWatchMetricsQuery.sql.select","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithname","title":"fn CloudWatchMetricsQuery.sql.select.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithparameters","title":"fn CloudWatchMetricsQuery.sql.select.withParameters","text":"<pre><code>withParameters(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithparametersmixin","title":"fn CloudWatchMetricsQuery.sql.select.withParametersMixin","text":"<pre><code>withParametersMixin(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithtype","title":"fn CloudWatchMetricsQuery.sql.select.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlselectparameters","title":"obj CloudWatchMetricsQuery.sql.select.parameters","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectparameterswithname","title":"# fn CloudWatchMetricsQuery.sql.select.parameters.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectparameterswithtype","title":"# fn CloudWatchMetricsQuery.sql.select.parameters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlwhere","title":"obj CloudWatchMetricsQuery.sql.where","text":""},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwherewithexpressions","title":"fn CloudWatchMetricsQuery.sql.where.withExpressions","text":"<pre><code>withExpressions(value)\n</code></pre> <p>TS type expressions: QueryEditorExpression[] | QueryEditorArrayExpression[], extended in veneer</p>"},{"location":"API/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwherewithtype","title":"fn CloudWatchMetricsQuery.sql.where.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO this doesn't work; temporarily extended in veneer</p> <p>Accepted values for <code>value</code> are \"and\", \"or\"</p>"},{"location":"API/query/elasticsearch.html","title":"elasticsearch","text":"<p>grafonnet.query.elasticsearch</p>"},{"location":"API/query/elasticsearch.html#index","title":"Index","text":"<ul> <li><code>fn withAlias(value)</code></li> <li><code>fn withBucketAggs(value)</code></li> <li><code>fn withBucketAggsMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withMetrics(value)</code></li> <li><code>fn withMetricsMixin(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withTimeField(value)</code></li> <li><code>obj bucketAggs</code><ul> <li><code>obj DateHistogram</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withInterval(value)</code></li> <li><code>fn withMinDocCount(value)</code></li> <li><code>fn withOffset(value)</code></li> <li><code>fn withTimeZone(value)</code></li> <li><code>fn withTrimEdges(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Filters</code><ul> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>obj filters</code><ul> <li><code>fn withLabel(value)</code></li> <li><code>fn withQuery(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj GeoHashGrid</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withPrecision(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Histogram</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withInterval(value)</code></li> <li><code>fn withMinDocCount(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Nested</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj Terms</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMinDocCount(value)</code></li> <li><code>fn withMissing(value)</code></li> <li><code>fn withOrder(value)</code></li> <li><code>fn withOrderBy(value)</code></li> <li><code>fn withSize(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj metrics</code><ul> <li><code>obj Count</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj MetricAggregationWithSettings</code><ul> <li><code>obj Average</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj BucketScript</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineVariables(value)</code></li> <li><code>fn withPipelineVariablesMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj pipelineVariables</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> </ul> </li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj CumulativeSum</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFormat(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Derivative</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ExtendedStats</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withMeta(value)</code></li> <li><code>fn withMetaMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>fn withSigma(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Logs</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withLimit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Max</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Min</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj MovingAverage</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj MovingFunction</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>fn withShift(value)</code></li> <li><code>fn withWindow(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Percentiles</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withPercents(value)</code></li> <li><code>fn withPercentsMixin(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Rate</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RawData</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RawDocument</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SerialDiff</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withLag(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Sum</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj TopMetrics</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMetrics(value)</code></li> <li><code>fn withMetricsMixin(value)</code></li> <li><code>fn withOrder(value)</code></li> <li><code>fn withOrderBy(value)</code></li> </ul> </li> </ul> </li> <li><code>obj UniqueCount</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withPrecisionThreshold(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj PipelineMetricAggregation</code><ul> <li><code>obj BucketScript</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineVariables(value)</code></li> <li><code>fn withPipelineVariablesMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj pipelineVariables</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> </ul> </li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj CumulativeSum</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFormat(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Derivative</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj MovingAverage</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"API/query/elasticsearch.html#fields","title":"Fields","text":""},{"location":"API/query/elasticsearch.html#fn-withalias","title":"fn withAlias","text":"<pre><code>withAlias(value)\n</code></pre> <p>Alias pattern</p>"},{"location":"API/query/elasticsearch.html#fn-withbucketaggs","title":"fn withBucketAggs","text":"<pre><code>withBucketAggs(value)\n</code></pre> <p>List of bucket aggregations</p>"},{"location":"API/query/elasticsearch.html#fn-withbucketaggsmixin","title":"fn withBucketAggsMixin","text":"<pre><code>withBucketAggsMixin(value)\n</code></pre> <p>List of bucket aggregations</p>"},{"location":"API/query/elasticsearch.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/elasticsearch.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/elasticsearch.html#fn-withmetrics","title":"fn withMetrics","text":"<pre><code>withMetrics(value)\n</code></pre> <p>List of metric aggregations</p>"},{"location":"API/query/elasticsearch.html#fn-withmetricsmixin","title":"fn withMetricsMixin","text":"<pre><code>withMetricsMixin(value)\n</code></pre> <p>List of metric aggregations</p>"},{"location":"API/query/elasticsearch.html#fn-withquery","title":"fn withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>Lucene query</p>"},{"location":"API/query/elasticsearch.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/elasticsearch.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/elasticsearch.html#fn-withtimefield","title":"fn withTimeField","text":"<pre><code>withTimeField(value)\n</code></pre> <p>Name of time field</p>"},{"location":"API/query/elasticsearch.html#obj-bucketaggs","title":"obj bucketAggs","text":""},{"location":"API/query/elasticsearch.html#obj-bucketaggsdatehistogram","title":"obj bucketAggs.DateHistogram","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramwithfield","title":"fn bucketAggs.DateHistogram.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramwithid","title":"fn bucketAggs.DateHistogram.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramwithsettings","title":"fn bucketAggs.DateHistogram.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramwithsettingsmixin","title":"fn bucketAggs.DateHistogram.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramwithtype","title":"fn bucketAggs.DateHistogram.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsdatehistogramsettings","title":"obj bucketAggs.DateHistogram.settings","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithinterval","title":"fn bucketAggs.DateHistogram.settings.withInterval","text":"<pre><code>withInterval(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithmindoccount","title":"fn bucketAggs.DateHistogram.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithoffset","title":"fn bucketAggs.DateHistogram.settings.withOffset","text":"<pre><code>withOffset(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithtimezone","title":"fn bucketAggs.DateHistogram.settings.withTimeZone","text":"<pre><code>withTimeZone(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithtrimedges","title":"fn bucketAggs.DateHistogram.settings.withTrimEdges","text":"<pre><code>withTrimEdges(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsfilters","title":"obj bucketAggs.Filters","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterswithid","title":"fn bucketAggs.Filters.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterswithsettings","title":"fn bucketAggs.Filters.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterswithsettingsmixin","title":"fn bucketAggs.Filters.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterswithtype","title":"fn bucketAggs.Filters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsfilterssettings","title":"obj bucketAggs.Filters.settings","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterssettingswithfilters","title":"fn bucketAggs.Filters.settings.withFilters","text":"<pre><code>withFilters(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterssettingswithfiltersmixin","title":"fn bucketAggs.Filters.settings.withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsfilterssettingsfilters","title":"obj bucketAggs.Filters.settings.filters","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterssettingsfilterswithlabel","title":"# fn bucketAggs.Filters.settings.filters.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsfilterssettingsfilterswithquery","title":"# fn bucketAggs.Filters.settings.filters.withQuery","text":"<pre><code>withQuery(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsgeohashgrid","title":"obj bucketAggs.GeoHashGrid","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsgeohashgridwithfield","title":"fn bucketAggs.GeoHashGrid.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsgeohashgridwithid","title":"fn bucketAggs.GeoHashGrid.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsgeohashgridwithsettings","title":"fn bucketAggs.GeoHashGrid.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsgeohashgridwithsettingsmixin","title":"fn bucketAggs.GeoHashGrid.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsgeohashgridwithtype","title":"fn bucketAggs.GeoHashGrid.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsgeohashgridsettings","title":"obj bucketAggs.GeoHashGrid.settings","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsgeohashgridsettingswithprecision","title":"fn bucketAggs.GeoHashGrid.settings.withPrecision","text":"<pre><code>withPrecision(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggshistogram","title":"obj bucketAggs.Histogram","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggshistogramwithfield","title":"fn bucketAggs.Histogram.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggshistogramwithid","title":"fn bucketAggs.Histogram.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggshistogramwithsettings","title":"fn bucketAggs.Histogram.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggshistogramwithsettingsmixin","title":"fn bucketAggs.Histogram.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggshistogramwithtype","title":"fn bucketAggs.Histogram.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggshistogramsettings","title":"obj bucketAggs.Histogram.settings","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggshistogramsettingswithinterval","title":"fn bucketAggs.Histogram.settings.withInterval","text":"<pre><code>withInterval(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggshistogramsettingswithmindoccount","title":"fn bucketAggs.Histogram.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsnested","title":"obj bucketAggs.Nested","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggsnestedwithfield","title":"fn bucketAggs.Nested.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsnestedwithid","title":"fn bucketAggs.Nested.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsnestedwithsettings","title":"fn bucketAggs.Nested.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsnestedwithsettingsmixin","title":"fn bucketAggs.Nested.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggsnestedwithtype","title":"fn bucketAggs.Nested.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggsterms","title":"obj bucketAggs.Terms","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggstermswithfield","title":"fn bucketAggs.Terms.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermswithid","title":"fn bucketAggs.Terms.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermswithsettings","title":"fn bucketAggs.Terms.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermswithsettingsmixin","title":"fn bucketAggs.Terms.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermswithtype","title":"fn bucketAggs.Terms.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-bucketaggstermssettings","title":"obj bucketAggs.Terms.settings","text":""},{"location":"API/query/elasticsearch.html#fn-bucketaggstermssettingswithmindoccount","title":"fn bucketAggs.Terms.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermssettingswithmissing","title":"fn bucketAggs.Terms.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermssettingswithorder","title":"fn bucketAggs.Terms.settings.withOrder","text":"<pre><code>withOrder(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"desc\", \"asc\"</p>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermssettingswithorderby","title":"fn bucketAggs.Terms.settings.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-bucketaggstermssettingswithsize","title":"fn bucketAggs.Terms.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metrics","title":"obj metrics","text":""},{"location":"API/query/elasticsearch.html#obj-metricscount","title":"obj metrics.Count","text":""},{"location":"API/query/elasticsearch.html#fn-metricscountwithhide","title":"fn metrics.Count.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricscountwithid","title":"fn metrics.Count.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricscountwithtype","title":"fn metrics.Count.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettings","title":"obj metrics.MetricAggregationWithSettings","text":""},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsaverage","title":"obj metrics.MetricAggregationWithSettings.Average","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithfield","title":"fn metrics.MetricAggregationWithSettings.Average.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithhide","title":"fn metrics.MetricAggregationWithSettings.Average.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithid","title":"fn metrics.MetricAggregationWithSettings.Average.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithsettings","title":"fn metrics.MetricAggregationWithSettings.Average.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Average.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithtype","title":"fn metrics.MetricAggregationWithSettings.Average.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsaveragesettings","title":"obj metrics.MetricAggregationWithSettings.Average.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsaveragesettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Average.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Average.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscript","title":"obj metrics.MetricAggregationWithSettings.BucketScript","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithhide","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithid","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithpipelinevariables","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withPipelineVariables","text":"<pre><code>withPipelineVariables(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithpipelinevariablesmixin","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withPipelineVariablesMixin","text":"<pre><code>withPipelineVariablesMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithsettings","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithtype","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscriptpipelinevariables","title":"obj metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptpipelinevariableswithname","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptpipelinevariableswithpipelineagg","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscriptsettings","title":"obj metrics.MetricAggregationWithSettings.BucketScript.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscriptsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.BucketScript.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.BucketScript.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingscumulativesum","title":"obj metrics.MetricAggregationWithSettings.CumulativeSum","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithfield","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithhide","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithid","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithsettings","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithtype","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingscumulativesumsettings","title":"obj metrics.MetricAggregationWithSettings.CumulativeSum.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumsettingswithformat","title":"# fn metrics.MetricAggregationWithSettings.CumulativeSum.settings.withFormat","text":"<pre><code>withFormat(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsderivative","title":"obj metrics.MetricAggregationWithSettings.Derivative","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithfield","title":"fn metrics.MetricAggregationWithSettings.Derivative.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithhide","title":"fn metrics.MetricAggregationWithSettings.Derivative.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithid","title":"fn metrics.MetricAggregationWithSettings.Derivative.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.Derivative.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithsettings","title":"fn metrics.MetricAggregationWithSettings.Derivative.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Derivative.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithtype","title":"fn metrics.MetricAggregationWithSettings.Derivative.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsderivativesettings","title":"obj metrics.MetricAggregationWithSettings.Derivative.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativesettingswithunit","title":"# fn metrics.MetricAggregationWithSettings.Derivative.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsextendedstats","title":"obj metrics.MetricAggregationWithSettings.ExtendedStats","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithfield","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithhide","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithid","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithmeta","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withMeta","text":"<pre><code>withMeta(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithmetamixin","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withMetaMixin","text":"<pre><code>withMetaMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithsettings","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithtype","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsextendedstatssettings","title":"obj metrics.MetricAggregationWithSettings.ExtendedStats.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithsigma","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withSigma","text":"<pre><code>withSigma(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsextendedstatssettingsscript","title":"# obj metrics.MetricAggregationWithSettings.ExtendedStats.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingslogs","title":"obj metrics.MetricAggregationWithSettings.Logs","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithhide","title":"fn metrics.MetricAggregationWithSettings.Logs.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithid","title":"fn metrics.MetricAggregationWithSettings.Logs.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithsettings","title":"fn metrics.MetricAggregationWithSettings.Logs.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Logs.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithtype","title":"fn metrics.MetricAggregationWithSettings.Logs.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingslogssettings","title":"obj metrics.MetricAggregationWithSettings.Logs.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogssettingswithlimit","title":"# fn metrics.MetricAggregationWithSettings.Logs.settings.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmax","title":"obj metrics.MetricAggregationWithSettings.Max","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithfield","title":"fn metrics.MetricAggregationWithSettings.Max.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithhide","title":"fn metrics.MetricAggregationWithSettings.Max.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithid","title":"fn metrics.MetricAggregationWithSettings.Max.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithsettings","title":"fn metrics.MetricAggregationWithSettings.Max.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Max.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithtype","title":"fn metrics.MetricAggregationWithSettings.Max.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmaxsettings","title":"obj metrics.MetricAggregationWithSettings.Max.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmaxsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Max.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Max.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmin","title":"obj metrics.MetricAggregationWithSettings.Min","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithfield","title":"fn metrics.MetricAggregationWithSettings.Min.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithhide","title":"fn metrics.MetricAggregationWithSettings.Min.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithid","title":"fn metrics.MetricAggregationWithSettings.Min.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithsettings","title":"fn metrics.MetricAggregationWithSettings.Min.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Min.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithtype","title":"fn metrics.MetricAggregationWithSettings.Min.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsminsettings","title":"obj metrics.MetricAggregationWithSettings.Min.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsminsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Min.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Min.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingaverage","title":"obj metrics.MetricAggregationWithSettings.MovingAverage","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithfield","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithhide","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithid","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithsettings","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithtype","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingfunction","title":"obj metrics.MetricAggregationWithSettings.MovingFunction","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithfield","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithhide","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithid","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithsettings","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithtype","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingfunctionsettings","title":"obj metrics.MetricAggregationWithSettings.MovingFunction.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithshift","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withShift","text":"<pre><code>withShift(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithwindow","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withWindow","text":"<pre><code>withWindow(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingfunctionsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.MovingFunction.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.MovingFunction.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingspercentiles","title":"obj metrics.MetricAggregationWithSettings.Percentiles","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithfield","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithhide","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithid","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithsettings","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithtype","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingspercentilessettings","title":"obj metrics.MetricAggregationWithSettings.Percentiles.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithpercents","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withPercents","text":"<pre><code>withPercents(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithpercentsmixin","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withPercentsMixin","text":"<pre><code>withPercentsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingspercentilessettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Percentiles.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Percentiles.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrate","title":"obj metrics.MetricAggregationWithSettings.Rate","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithfield","title":"fn metrics.MetricAggregationWithSettings.Rate.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithhide","title":"fn metrics.MetricAggregationWithSettings.Rate.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithid","title":"fn metrics.MetricAggregationWithSettings.Rate.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithsettings","title":"fn metrics.MetricAggregationWithSettings.Rate.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Rate.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithtype","title":"fn metrics.MetricAggregationWithSettings.Rate.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsratesettings","title":"obj metrics.MetricAggregationWithSettings.Rate.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratesettingswithmode","title":"# fn metrics.MetricAggregationWithSettings.Rate.settings.withMode","text":"<pre><code>withMode(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratesettingswithunit","title":"# fn metrics.MetricAggregationWithSettings.Rate.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdata","title":"obj metrics.MetricAggregationWithSettings.RawData","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithhide","title":"fn metrics.MetricAggregationWithSettings.RawData.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithid","title":"fn metrics.MetricAggregationWithSettings.RawData.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithsettings","title":"fn metrics.MetricAggregationWithSettings.RawData.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.RawData.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithtype","title":"fn metrics.MetricAggregationWithSettings.RawData.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdatasettings","title":"obj metrics.MetricAggregationWithSettings.RawData.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatasettingswithsize","title":"# fn metrics.MetricAggregationWithSettings.RawData.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdocument","title":"obj metrics.MetricAggregationWithSettings.RawDocument","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithhide","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithid","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithsettings","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithtype","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdocumentsettings","title":"obj metrics.MetricAggregationWithSettings.RawDocument.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentsettingswithsize","title":"# fn metrics.MetricAggregationWithSettings.RawDocument.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsserialdiff","title":"obj metrics.MetricAggregationWithSettings.SerialDiff","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithfield","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithhide","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithid","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithsettings","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithtype","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsserialdiffsettings","title":"obj metrics.MetricAggregationWithSettings.SerialDiff.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffsettingswithlag","title":"# fn metrics.MetricAggregationWithSettings.SerialDiff.settings.withLag","text":"<pre><code>withLag(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingssum","title":"obj metrics.MetricAggregationWithSettings.Sum","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithfield","title":"fn metrics.MetricAggregationWithSettings.Sum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithhide","title":"fn metrics.MetricAggregationWithSettings.Sum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithid","title":"fn metrics.MetricAggregationWithSettings.Sum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithsettings","title":"fn metrics.MetricAggregationWithSettings.Sum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Sum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithtype","title":"fn metrics.MetricAggregationWithSettings.Sum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingssumsettings","title":"obj metrics.MetricAggregationWithSettings.Sum.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingssumsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Sum.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Sum.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingstopmetrics","title":"obj metrics.MetricAggregationWithSettings.TopMetrics","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithhide","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithid","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithsettings","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithtype","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingstopmetricssettings","title":"obj metrics.MetricAggregationWithSettings.TopMetrics.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithmetrics","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withMetrics","text":"<pre><code>withMetrics(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithmetricsmixin","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withMetricsMixin","text":"<pre><code>withMetricsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithorder","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withOrder","text":"<pre><code>withOrder(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithorderby","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsuniquecount","title":"obj metrics.MetricAggregationWithSettings.UniqueCount","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithfield","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithhide","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithid","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithsettings","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithtype","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsuniquecountsettings","title":"obj metrics.MetricAggregationWithSettings.UniqueCount.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.UniqueCount.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountsettingswithprecisionthreshold","title":"# fn metrics.MetricAggregationWithSettings.UniqueCount.settings.withPrecisionThreshold","text":"<pre><code>withPrecisionThreshold(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregation","title":"obj metrics.PipelineMetricAggregation","text":""},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscript","title":"obj metrics.PipelineMetricAggregation.BucketScript","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithhide","title":"fn metrics.PipelineMetricAggregation.BucketScript.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithid","title":"fn metrics.PipelineMetricAggregation.BucketScript.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithpipelinevariables","title":"fn metrics.PipelineMetricAggregation.BucketScript.withPipelineVariables","text":"<pre><code>withPipelineVariables(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithpipelinevariablesmixin","title":"fn metrics.PipelineMetricAggregation.BucketScript.withPipelineVariablesMixin","text":"<pre><code>withPipelineVariablesMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithsettings","title":"fn metrics.PipelineMetricAggregation.BucketScript.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.BucketScript.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithtype","title":"fn metrics.PipelineMetricAggregation.BucketScript.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscriptpipelinevariables","title":"obj metrics.PipelineMetricAggregation.BucketScript.pipelineVariables","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptpipelinevariableswithname","title":"# fn metrics.PipelineMetricAggregation.BucketScript.pipelineVariables.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptpipelinevariableswithpipelineagg","title":"# fn metrics.PipelineMetricAggregation.BucketScript.pipelineVariables.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscriptsettings","title":"obj metrics.PipelineMetricAggregation.BucketScript.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptsettingswithscript","title":"# fn metrics.PipelineMetricAggregation.BucketScript.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptsettingswithscriptmixin","title":"# fn metrics.PipelineMetricAggregation.BucketScript.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscriptsettingsscript","title":"# obj metrics.PipelineMetricAggregation.BucketScript.settings.script","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptsettingsscriptwithinline","title":"## fn metrics.PipelineMetricAggregation.BucketScript.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationcumulativesum","title":"obj metrics.PipelineMetricAggregation.CumulativeSum","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithfield","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithhide","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithid","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithpipelineagg","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithsettings","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithtype","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationcumulativesumsettings","title":"obj metrics.PipelineMetricAggregation.CumulativeSum.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumsettingswithformat","title":"# fn metrics.PipelineMetricAggregation.CumulativeSum.settings.withFormat","text":"<pre><code>withFormat(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationderivative","title":"obj metrics.PipelineMetricAggregation.Derivative","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithfield","title":"fn metrics.PipelineMetricAggregation.Derivative.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithhide","title":"fn metrics.PipelineMetricAggregation.Derivative.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithid","title":"fn metrics.PipelineMetricAggregation.Derivative.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithpipelineagg","title":"fn metrics.PipelineMetricAggregation.Derivative.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithsettings","title":"fn metrics.PipelineMetricAggregation.Derivative.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.Derivative.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithtype","title":"fn metrics.PipelineMetricAggregation.Derivative.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationderivativesettings","title":"obj metrics.PipelineMetricAggregation.Derivative.settings","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativesettingswithunit","title":"# fn metrics.PipelineMetricAggregation.Derivative.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#obj-metricspipelinemetricaggregationmovingaverage","title":"obj metrics.PipelineMetricAggregation.MovingAverage","text":""},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithfield","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithhide","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithid","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithpipelineagg","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithsettings","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"API/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithtype","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/loki.html","title":"loki","text":"<p>grafonnet.query.loki</p>"},{"location":"API/query/loki.html#index","title":"Index","text":"<ul> <li><code>fn new(datasource, expr)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withEditorMode(value)</code></li> <li><code>fn withExpr(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withInstant(value)</code></li> <li><code>fn withLegendFormat(value)</code></li> <li><code>fn withMaxLines(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRange(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withResolution(value)</code></li> </ul>"},{"location":"API/query/loki.html#fields","title":"Fields","text":""},{"location":"API/query/loki.html#fn-new","title":"fn new","text":"<pre><code>new(datasource, expr)\n</code></pre> <p>Creates a new loki query target for panels.</p>"},{"location":"API/query/loki.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Set the datasource for this query.</p>"},{"location":"API/query/loki.html#fn-witheditormode","title":"fn withEditorMode","text":"<pre><code>withEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"code\", \"builder\"</p>"},{"location":"API/query/loki.html#fn-withexpr","title":"fn withExpr","text":"<pre><code>withExpr(value)\n</code></pre> <p>The LogQL query.</p>"},{"location":"API/query/loki.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/loki.html#fn-withinstant","title":"fn withInstant","text":"<pre><code>withInstant(value)\n</code></pre> <p>@deprecated, now use queryType.</p>"},{"location":"API/query/loki.html#fn-withlegendformat","title":"fn withLegendFormat","text":"<pre><code>withLegendFormat(value)\n</code></pre> <p>Used to override the name of the series.</p>"},{"location":"API/query/loki.html#fn-withmaxlines","title":"fn withMaxLines","text":"<pre><code>withMaxLines(value)\n</code></pre> <p>Used to limit the number of log rows returned.</p>"},{"location":"API/query/loki.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/loki.html#fn-withrange","title":"fn withRange","text":"<pre><code>withRange(value)\n</code></pre> <p>@deprecated, now use queryType.</p>"},{"location":"API/query/loki.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/loki.html#fn-withresolution","title":"fn withResolution","text":"<pre><code>withResolution(value)\n</code></pre> <p>Used to scale the interval value.</p>"},{"location":"API/query/parca.html","title":"parca","text":"<p>grafonnet.query.parca</p>"},{"location":"API/query/parca.html#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabelSelector(value=\"{}\")</code></li> <li><code>fn withProfileTypeId(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"API/query/parca.html#fields","title":"Fields","text":""},{"location":"API/query/parca.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/parca.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/parca.html#fn-withlabelselector","title":"fn withLabelSelector","text":"<pre><code>withLabelSelector(value=\"{}\")\n</code></pre> <p>Specifies the query label selectors.</p>"},{"location":"API/query/parca.html#fn-withprofiletypeid","title":"fn withProfileTypeId","text":"<pre><code>withProfileTypeId(value)\n</code></pre> <p>Specifies the type of profile to query.</p>"},{"location":"API/query/parca.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/parca.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/phlare.html","title":"phlare","text":"<p>grafonnet.query.phlare</p>"},{"location":"API/query/phlare.html#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withGroupBy(value)</code></li> <li><code>fn withGroupByMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabelSelector(value=\"{}\")</code></li> <li><code>fn withProfileTypeId(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"API/query/phlare.html#fields","title":"Fields","text":""},{"location":"API/query/phlare.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/phlare.html#fn-withgroupby","title":"fn withGroupBy","text":"<pre><code>withGroupBy(value)\n</code></pre> <p>Allows to group the results.</p>"},{"location":"API/query/phlare.html#fn-withgroupbymixin","title":"fn withGroupByMixin","text":"<pre><code>withGroupByMixin(value)\n</code></pre> <p>Allows to group the results.</p>"},{"location":"API/query/phlare.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/phlare.html#fn-withlabelselector","title":"fn withLabelSelector","text":"<pre><code>withLabelSelector(value=\"{}\")\n</code></pre> <p>Specifies the query label selectors.</p>"},{"location":"API/query/phlare.html#fn-withprofiletypeid","title":"fn withProfileTypeId","text":"<pre><code>withProfileTypeId(value)\n</code></pre> <p>Specifies the type of profile to query.</p>"},{"location":"API/query/phlare.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/phlare.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/prometheus.html","title":"prometheus","text":"<p>grafonnet.query.prometheus</p>"},{"location":"API/query/prometheus.html#index","title":"Index","text":"<ul> <li><code>fn new(datasource, expr)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withEditorMode(value)</code></li> <li><code>fn withExemplar(value)</code></li> <li><code>fn withExpr(value)</code></li> <li><code>fn withFormat(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withInstant(value)</code></li> <li><code>fn withIntervalFactor(value)</code></li> <li><code>fn withLegendFormat(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRange(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"API/query/prometheus.html#fields","title":"Fields","text":""},{"location":"API/query/prometheus.html#fn-new","title":"fn new","text":"<pre><code>new(datasource, expr)\n</code></pre> <p>Creates a new prometheus query target for panels.</p>"},{"location":"API/query/prometheus.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Set the datasource for this query.</p>"},{"location":"API/query/prometheus.html#fn-witheditormode","title":"fn withEditorMode","text":"<pre><code>withEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"code\", \"builder\"</p>"},{"location":"API/query/prometheus.html#fn-withexemplar","title":"fn withExemplar","text":"<pre><code>withExemplar(value)\n</code></pre> <p>Execute an additional query to identify interesting raw samples relevant for the given expr</p>"},{"location":"API/query/prometheus.html#fn-withexpr","title":"fn withExpr","text":"<pre><code>withExpr(value)\n</code></pre> <p>The actual expression/query that will be evaluated by Prometheus</p>"},{"location":"API/query/prometheus.html#fn-withformat","title":"fn withFormat","text":"<pre><code>withFormat(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"time_series\", \"table\", \"heatmap\"</p>"},{"location":"API/query/prometheus.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/prometheus.html#fn-withinstant","title":"fn withInstant","text":"<pre><code>withInstant(value)\n</code></pre> <p>Returns only the latest value that Prometheus has scraped for the requested time series</p>"},{"location":"API/query/prometheus.html#fn-withintervalfactor","title":"fn withIntervalFactor","text":"<pre><code>withIntervalFactor(value)\n</code></pre> <p>Set the interval factor for this query.</p>"},{"location":"API/query/prometheus.html#fn-withlegendformat","title":"fn withLegendFormat","text":"<pre><code>withLegendFormat(value)\n</code></pre> <p>Set the legend format for this query.</p>"},{"location":"API/query/prometheus.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/prometheus.html#fn-withrange","title":"fn withRange","text":"<pre><code>withRange(value)\n</code></pre> <p>Returns a Range vector, comprised of a set of time series containing a range of data points over time for each time series</p>"},{"location":"API/query/prometheus.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/tempo.html","title":"tempo","text":"<p>grafonnet.query.tempo</p>"},{"location":"API/query/tempo.html#index","title":"Index","text":"<ul> <li><code>fn new(datasource, query, filters)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withMaxDuration(value)</code></li> <li><code>fn withMinDuration(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withSearch(value)</code></li> <li><code>fn withServiceMapQuery(value)</code></li> <li><code>fn withServiceName(value)</code></li> <li><code>fn withSpanName(value)</code></li> <li><code>obj filters</code><ul> <li><code>fn withId(value)</code></li> <li><code>fn withOperator(value)</code></li> <li><code>fn withScope(value)</code></li> <li><code>fn withTag(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>fn withValueMixin(value)</code></li> <li><code>fn withValueType(value)</code></li> </ul> </li> </ul>"},{"location":"API/query/tempo.html#fields","title":"Fields","text":""},{"location":"API/query/tempo.html#fn-new","title":"fn new","text":"<pre><code>new(datasource, query, filters)\n</code></pre> <p>Creates a new tempo query target for panels.</p>"},{"location":"API/query/tempo.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Set the datasource for this query.</p>"},{"location":"API/query/tempo.html#fn-withfilters","title":"fn withFilters","text":"<pre><code>withFilters(value)\n</code></pre>"},{"location":"API/query/tempo.html#fn-withfiltersmixin","title":"fn withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre>"},{"location":"API/query/tempo.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/tempo.html#fn-withlimit","title":"fn withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>Defines the maximum number of traces that are returned from Tempo</p>"},{"location":"API/query/tempo.html#fn-withmaxduration","title":"fn withMaxDuration","text":"<pre><code>withMaxDuration(value)\n</code></pre> <p>Define the maximum duration to select traces. Use duration format, for example: 1.2s, 100ms</p>"},{"location":"API/query/tempo.html#fn-withminduration","title":"fn withMinDuration","text":"<pre><code>withMinDuration(value)\n</code></pre> <p>Define the minimum duration to select traces. Use duration format, for example: 1.2s, 100ms</p>"},{"location":"API/query/tempo.html#fn-withquery","title":"fn withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>TraceQL query or trace ID</p>"},{"location":"API/query/tempo.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/tempo.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/tempo.html#fn-withsearch","title":"fn withSearch","text":"<pre><code>withSearch(value)\n</code></pre> <p>Logfmt query to filter traces by their tags. Example: http.status_code=200 error=true</p>"},{"location":"API/query/tempo.html#fn-withservicemapquery","title":"fn withServiceMapQuery","text":"<pre><code>withServiceMapQuery(value)\n</code></pre> <p>Filters to be included in a PromQL query to select data for the service graph. Example: {client=\"app\",service=\"app\"}</p>"},{"location":"API/query/tempo.html#fn-withservicename","title":"fn withServiceName","text":"<pre><code>withServiceName(value)\n</code></pre> <p>Query traces by service name</p>"},{"location":"API/query/tempo.html#fn-withspanname","title":"fn withSpanName","text":"<pre><code>withSpanName(value)\n</code></pre> <p>Query traces by span name</p>"},{"location":"API/query/tempo.html#obj-filters","title":"obj filters","text":""},{"location":"API/query/tempo.html#fn-filterswithid","title":"fn filters.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Uniquely identify the filter, will not be used in the query generation</p>"},{"location":"API/query/tempo.html#fn-filterswithoperator","title":"fn filters.withOperator","text":"<pre><code>withOperator(value)\n</code></pre> <p>The operator that connects the tag to the value, for example: =, &gt;, !=, =~</p>"},{"location":"API/query/tempo.html#fn-filterswithscope","title":"fn filters.withScope","text":"<pre><code>withScope(value)\n</code></pre> <p>static fields are pre-set in the UI, dynamic fields are added by the user</p> <p>Accepted values for <code>value</code> are \"unscoped\", \"resource\", \"span\"</p>"},{"location":"API/query/tempo.html#fn-filterswithtag","title":"fn filters.withTag","text":"<pre><code>withTag(value)\n</code></pre> <p>The tag for the search filter, for example: .http.status_code, .service.name, status</p>"},{"location":"API/query/tempo.html#fn-filterswithvalue","title":"fn filters.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The value for the search filter</p>"},{"location":"API/query/tempo.html#fn-filterswithvaluemixin","title":"fn filters.withValueMixin","text":"<pre><code>withValueMixin(value)\n</code></pre> <p>The value for the search filter</p>"},{"location":"API/query/tempo.html#fn-filterswithvaluetype","title":"fn filters.withValueType","text":"<pre><code>withValueType(value)\n</code></pre> <p>The type of the value, used for example to check whether we need to wrap the value in quotes when generating the query</p>"},{"location":"API/query/testData.html","title":"testData","text":"<p>grafonnet.query.testData</p>"},{"location":"API/query/testData.html#index","title":"Index","text":"<ul> <li><code>fn withAlias(value)</code></li> <li><code>fn withChannel(value)</code></li> <li><code>fn withCsvContent(value)</code></li> <li><code>fn withCsvFileName(value)</code></li> <li><code>fn withCsvWave(value)</code></li> <li><code>fn withCsvWaveMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withErrorType(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabels(value)</code></li> <li><code>fn withLevelColumn(value)</code></li> <li><code>fn withLines(value)</code></li> <li><code>fn withNodes(value)</code></li> <li><code>fn withNodesMixin(value)</code></li> <li><code>fn withPoints(value)</code></li> <li><code>fn withPointsMixin(value)</code></li> <li><code>fn withPulseWave(value)</code></li> <li><code>fn withPulseWaveMixin(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRawFrameContent(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withScenarioId(value)</code></li> <li><code>fn withSeriesCount(value)</code></li> <li><code>fn withSim(value)</code></li> <li><code>fn withSimMixin(value)</code></li> <li><code>fn withSpanCount(value)</code></li> <li><code>fn withStream(value)</code></li> <li><code>fn withStreamMixin(value)</code></li> <li><code>fn withStringInput(value)</code></li> <li><code>fn withUsa(value)</code></li> <li><code>fn withUsaMixin(value)</code></li> <li><code>obj csvWave</code><ul> <li><code>fn withLabels(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withTimeStep(value)</code></li> <li><code>fn withValuesCSV(value)</code></li> </ul> </li> <li><code>obj nodes</code><ul> <li><code>fn withCount(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj pulseWave</code><ul> <li><code>fn withOffCount(value)</code></li> <li><code>fn withOffValue(value)</code></li> <li><code>fn withOnCount(value)</code></li> <li><code>fn withOnValue(value)</code></li> <li><code>fn withTimeStep(value)</code></li> </ul> </li> <li><code>obj sim</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withConfigMixin(value)</code></li> <li><code>fn withKey(value)</code></li> <li><code>fn withKeyMixin(value)</code></li> <li><code>fn withLast(value)</code></li> <li><code>fn withStream(value)</code></li> <li><code>obj key</code><ul> <li><code>fn withTick(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> </ul> </li> <li><code>obj stream</code><ul> <li><code>fn withBands(value)</code></li> <li><code>fn withNoise(value)</code></li> <li><code>fn withSpeed(value)</code></li> <li><code>fn withSpread(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj usa</code><ul> <li><code>fn withFields(value)</code></li> <li><code>fn withFieldsMixin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withPeriod(value)</code></li> <li><code>fn withStates(value)</code></li> <li><code>fn withStatesMixin(value)</code></li> </ul> </li> </ul>"},{"location":"API/query/testData.html#fields","title":"Fields","text":""},{"location":"API/query/testData.html#fn-withalias","title":"fn withAlias","text":"<pre><code>withAlias(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withchannel","title":"fn withChannel","text":"<pre><code>withChannel(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withcsvcontent","title":"fn withCsvContent","text":"<pre><code>withCsvContent(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withcsvfilename","title":"fn withCsvFileName","text":"<pre><code>withCsvFileName(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withcsvwave","title":"fn withCsvWave","text":"<pre><code>withCsvWave(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withcsvwavemixin","title":"fn withCsvWaveMixin","text":"<pre><code>withCsvWaveMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"API/query/testData.html#fn-witherrortype","title":"fn withErrorType","text":"<pre><code>withErrorType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"server_panic\", \"frontend_exception\", \"frontend_observable\"</p>"},{"location":"API/query/testData.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"API/query/testData.html#fn-withlabels","title":"fn withLabels","text":"<pre><code>withLabels(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withlevelcolumn","title":"fn withLevelColumn","text":"<pre><code>withLevelColumn(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withlines","title":"fn withLines","text":"<pre><code>withLines(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withnodes","title":"fn withNodes","text":"<pre><code>withNodes(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withnodesmixin","title":"fn withNodesMixin","text":"<pre><code>withNodesMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withpoints","title":"fn withPoints","text":"<pre><code>withPoints(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withpointsmixin","title":"fn withPointsMixin","text":"<pre><code>withPointsMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withpulsewave","title":"fn withPulseWave","text":"<pre><code>withPulseWave(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withpulsewavemixin","title":"fn withPulseWaveMixin","text":"<pre><code>withPulseWaveMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"API/query/testData.html#fn-withrawframecontent","title":"fn withRawFrameContent","text":"<pre><code>withRawFrameContent(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"API/query/testData.html#fn-withscenarioid","title":"fn withScenarioId","text":"<pre><code>withScenarioId(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"random_walk\", \"slow_query\", \"random_walk_with_error\", \"random_walk_table\", \"exponential_heatmap_bucket_data\", \"linear_heatmap_bucket_data\", \"no_data_points\", \"datapoints_outside_range\", \"csv_metric_values\", \"predictable_pulse\", \"predictable_csv_wave\", \"streaming_client\", \"simulation\", \"usa\", \"live\", \"grafana_api\", \"arrow\", \"annotations\", \"table_static\", \"server_error_500\", \"logs\", \"node_graph\", \"flame_graph\", \"raw_frame\", \"csv_file\", \"csv_content\", \"trace\", \"manual_entry\", \"variables-query\"</p>"},{"location":"API/query/testData.html#fn-withseriescount","title":"fn withSeriesCount","text":"<pre><code>withSeriesCount(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withsim","title":"fn withSim","text":"<pre><code>withSim(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withsimmixin","title":"fn withSimMixin","text":"<pre><code>withSimMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withspancount","title":"fn withSpanCount","text":"<pre><code>withSpanCount(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withstream","title":"fn withStream","text":"<pre><code>withStream(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withstreammixin","title":"fn withStreamMixin","text":"<pre><code>withStreamMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withstringinput","title":"fn withStringInput","text":"<pre><code>withStringInput(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withusa","title":"fn withUsa","text":"<pre><code>withUsa(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-withusamixin","title":"fn withUsaMixin","text":"<pre><code>withUsaMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#obj-csvwave","title":"obj csvWave","text":""},{"location":"API/query/testData.html#fn-csvwavewithlabels","title":"fn csvWave.withLabels","text":"<pre><code>withLabels(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-csvwavewithname","title":"fn csvWave.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-csvwavewithtimestep","title":"fn csvWave.withTimeStep","text":"<pre><code>withTimeStep(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-csvwavewithvaluescsv","title":"fn csvWave.withValuesCSV","text":"<pre><code>withValuesCSV(value)\n</code></pre>"},{"location":"API/query/testData.html#obj-nodes","title":"obj nodes","text":""},{"location":"API/query/testData.html#fn-nodeswithcount","title":"fn nodes.withCount","text":"<pre><code>withCount(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-nodeswithtype","title":"fn nodes.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"random\", \"response\", \"random edges\"</p>"},{"location":"API/query/testData.html#obj-pulsewave","title":"obj pulseWave","text":""},{"location":"API/query/testData.html#fn-pulsewavewithoffcount","title":"fn pulseWave.withOffCount","text":"<pre><code>withOffCount(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-pulsewavewithoffvalue","title":"fn pulseWave.withOffValue","text":"<pre><code>withOffValue(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-pulsewavewithoncount","title":"fn pulseWave.withOnCount","text":"<pre><code>withOnCount(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-pulsewavewithonvalue","title":"fn pulseWave.withOnValue","text":"<pre><code>withOnValue(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-pulsewavewithtimestep","title":"fn pulseWave.withTimeStep","text":"<pre><code>withTimeStep(value)\n</code></pre>"},{"location":"API/query/testData.html#obj-sim","title":"obj sim","text":""},{"location":"API/query/testData.html#fn-simwithconfig","title":"fn sim.withConfig","text":"<pre><code>withConfig(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-simwithconfigmixin","title":"fn sim.withConfigMixin","text":"<pre><code>withConfigMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-simwithkey","title":"fn sim.withKey","text":"<pre><code>withKey(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-simwithkeymixin","title":"fn sim.withKeyMixin","text":"<pre><code>withKeyMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-simwithlast","title":"fn sim.withLast","text":"<pre><code>withLast(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-simwithstream","title":"fn sim.withStream","text":"<pre><code>withStream(value)\n</code></pre>"},{"location":"API/query/testData.html#obj-simkey","title":"obj sim.key","text":""},{"location":"API/query/testData.html#fn-simkeywithtick","title":"fn sim.key.withTick","text":"<pre><code>withTick(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-simkeywithtype","title":"fn sim.key.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-simkeywithuid","title":"fn sim.key.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"API/query/testData.html#obj-stream","title":"obj stream","text":""},{"location":"API/query/testData.html#fn-streamwithbands","title":"fn stream.withBands","text":"<pre><code>withBands(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-streamwithnoise","title":"fn stream.withNoise","text":"<pre><code>withNoise(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-streamwithspeed","title":"fn stream.withSpeed","text":"<pre><code>withSpeed(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-streamwithspread","title":"fn stream.withSpread","text":"<pre><code>withSpread(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-streamwithtype","title":"fn stream.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"signal\", \"logs\", \"fetch\"</p>"},{"location":"API/query/testData.html#fn-streamwithurl","title":"fn stream.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"API/query/testData.html#obj-usa","title":"obj usa","text":""},{"location":"API/query/testData.html#fn-usawithfields","title":"fn usa.withFields","text":"<pre><code>withFields(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-usawithfieldsmixin","title":"fn usa.withFieldsMixin","text":"<pre><code>withFieldsMixin(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-usawithmode","title":"fn usa.withMode","text":"<pre><code>withMode(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-usawithperiod","title":"fn usa.withPeriod","text":"<pre><code>withPeriod(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-usawithstates","title":"fn usa.withStates","text":"<pre><code>withStates(value)\n</code></pre>"},{"location":"API/query/testData.html#fn-usawithstatesmixin","title":"fn usa.withStatesMixin","text":"<pre><code>withStatesMixin(value)\n</code></pre>"},{"location":"examples/runtimeDashboard.html","title":"Controller Runtime dashboard","text":"<p>The controller runtime dashboard example shows how to compose a dashboard from reusable components. There are separate definitions of panels, variables and queries. The queries are combined with the panels and then the panels are grouped into rows. Eventually the panels and rows are rendered into a grid. Let's break it down.</p> <p>Similarly to the simple dashboard, Grafonnet is imported through <code>g.libsonnet</code> and <code>row</code> becomes a shortcut for the row panel. Additionally the panels, variables and queries get imported.</p> <pre><code>local g = import 'g.libsonnet';\n\nlocal row = g.panel.row;\n\nlocal panels = import './panels.libsonnet';\nlocal variables = import './variables.libsonnet';\nlocal queries = import './queries.libsonnet';\n</code></pre> <p>The dashboard gets initialized with a title and description. The tooltip is configured to share a crosshair and tooltip on all panels.</p> <pre><code>g.dashboard.new('Controller Runtime')\n+ g.dashboard.withDescription(|||\n  Generic dashboard for controller-runtime based processes\n  (https://github.com/kubernetes-sigs/controller-runtime)\n|||)\n+ g.dashboard.graphTooltip.withSharedCrosshair()\n</code></pre> <p>The variables get added to provide dropdowns for selecting the datasource, cluster, namespace and job values.</p> <pre><code>+ g.dashboard.withVariables([\nvariables.datasource,\nvariables.cluster,\nvariables.namespace,\nvariables.job,\n])\n</code></pre> <p>And eventually add the panels.</p> <pre><code>+ g.dashboard.withPanels( /* ... */ )\n</code></pre>"},{"location":"examples/runtimeDashboard.html#panels","title":"Panels","text":"<p>The panels are defined separately from the queries, this turns them into reusable components. A panels can be called with a title and query. Let's take the 'Threads' panel as an example.</p> <pre><code>panels.timeSeries.seconds('GC Duration Mean', queries.gcDuration),\n</code></pre> <p>The 'Threads' panels uses the <code>base</code> timeSeries panel. Reusing the same panel definition for this and other panels increases consistency. The shortcuts for <code>fieldOverride</code> etc. are intended to make the code more concise.</p> <pre><code>// from panels.libsonnet\nlocal g = import 'g.libsonnet';\n\n{\ntimeseries: {\nlocal timeSeries = g.panel.timeSeries,\nlocal fieldOverride = g.panel.timeSeries.fieldOverride,\nlocal custom = timeSeries.fieldConfig.defaults.custom,\nlocal options = timeSeries.options,\n\nbase(title, targets):\ntimeSeries.new(title)\n+ timeSeries.queryOptions.withTargets(targets)\n+ timeSeries.queryOptions.withInterval('1m')\n+ options.legend.withDisplayMode('table')\n+ options.legend.withCalcs([\n'lastNotNull',\n'max',\n])\n+ custom.withFillOpacity(10)\n+ custom.withShowPoints('never'),\n}\n}\n</code></pre> <p>The 'GC Duration Mean' panel extends the <code>base</code> panel to display the duration in seconds on a logarithmic scale. The <code>cpuUsage</code> panel is a shortcut to <code>seconds</code> panel.</p> <pre><code>{\ntimeseries: {\nseconds(title, targets):\nself.base(title, targets)\n+ timeSeries.standardOptions.withUnit('s')\n+ custom.scaleDistribution.withType('log')\n+ custom.scaleDistribution.withLog(10),\n\ncpuUsage: self.seconds,\n}\n}\n</code></pre>"},{"location":"examples/runtimeDashboard.html#rows-and-grid","title":"Rows and Grid","text":"<p>Rows can be used to group panels and optionally collapse them, however using them within Jsonnet can be quite cumbersome. For example: all panels added after a row in the panel array will inevitably become part of the row, also the order in the array doesn't necessarily apply with how Grafana displays them. The <code>makeGrid</code> util function attempts to aid with this.</p> <p>First the panels are consistently added to the rows so that the intention is clear from a Jsonnet perspective.</p> <pre><code>    row.new('Process')\n+ row.withPanels([\npanels.timeSeries.cpuUsage('CPU Usage', queries.cpuUsage),\npanels.timeSeries.memoryUsage('Memory Usage', queries.memUsage),\npanels.timeSeries.base('Goroutines', queries.goroutines),\npanels.timeSeries.base('Threads', queries.threads),\npanels.timeSeries.seconds('GC Duration Mean', queries.gcDuration),\n]),\n</code></pre> <p>Second the panel array gets processed by <code>makeGrid</code> before added it to the dashboard.</p> <pre><code>+ g.dashboard.withPanels(\ng.util.grid.makeGrid([\nrow.new('Process')\n+ row.withPanels([\npanels.timeSeries.cpuUsage('CPU Usage', queries.cpuUsage),\npanels.timeSeries.memoryUsage('Memory Usage', queries.memUsage),\npanels.timeSeries.base('Goroutines', queries.goroutines),\npanels.timeSeries.base('Threads', queries.threads),\npanels.timeSeries.seconds('GC Duration Mean', queries.gcDuration),\n]),\nrow.new('Kubernetes Client')\n+ row.withCollapsed(true)\n+ row.withPanels([\npanels.heatmap.base('Workqueue Waiting Duration Over Time', queries.wqDurationOverTime),\npanels.timeSeries.durationQuantile('Workqueue Waiting Duration Quantile', queries.wqDurationQuantile),\npanels.timeSeries.short('Workqueue Depth', queries.wqDepth),\npanels.timeSeries.short('Failed Requests', queries.failedRequests),\n]),\nrow.new('Controller Runtime')\n+ row.withCollapsed(true)\n+ row.withPanels([\npanels.heatmap.base('Reconciling Latency Over Time', queries.reconcilingLatencyOverTime),\npanels.timeSeries.durationQuantile('Reconciling Latency Quantile', queries.reconcilingDurationQuantile),\n]),\n], panelWidth=8)\n)\n</code></pre>"},{"location":"examples/runtimeDashboard.html#queries","title":"Queries","text":"<p>The queries are defined as separate objects. This allows us to swap out the Prometheus queries for Graphite queries while not having to change the dashboard. Additionally this makes it possible to reuse the queries on different panels or even in different dashboards.</p> <p>Let's take a look at a query definition. The <code>cpuUsage</code> is an instance of a <code>prometheusQuery</code>. Note that the query definition leans heavily on the variables, making the datasource configurable and using variables in the query expression, setting values for the cluster, namespace and job labels. Finally this configures a <code>legendFormat</code>, telling Grafana which values to show in the legend.</p> <pre><code>// from queries.libsonnet\nlocal g = import './g.libsonnet';\nlocal prometheusQuery = g.query.prometheus;\n\nlocal variables = import './variables.libsonnet';\n\n{\ncpuUsage:\nprometheusQuery.new(\n'$' + variables.datasource.name,\n|||\n        sum by (cluster, namespace, job) (\n            rate(\n                process_cpu_seconds_total{\n                    cluster=~\"$cluster\",\n                    namespace=~\"$namespace\",\n                    job=~\"$job\"\n                }\n            [$__rate_interval])\n        )\n      |||\n    )\n    + prometheusQuery.withIntervalFactor(2)\n    + prometheusQuery.withLegendFormat(|||\n      {{cluster}} - {{namespace}}\n    |||),\n}\n</code></pre>"},{"location":"examples/runtimeDashboard.html#variables","title":"Variables","text":"<p>To make this dashboard dynamic, it uses variables. This allows the user to select and manipulate the data being displayed.</p> <p>In this case there is a single 'datasource' variable and several 'query' variables. The 'query' variables depend on the datasource variable and then cascadingly depend on each other. This means that the values of for example <code>namespace</code> depend on the values from <code>datasource</code> and <code>cluster</code>.</p> <pre><code>// variables.libsonnet\nlocal g = import './g.libsonnet';\nlocal var = g.dashboard.variable;\n\n{\ndatasource:\nvar.datasource.new('datasource', 'prometheus')\n+ var.datasource.withRegex('(ops|dev)-cortex'),\n\ncluster:\nvar.query.new('cluster')\n+ var.query.withDatasourceFromVariable(self.datasource)\n+ var.query.queryTypes.withLabelValues(\n'cluster',\n'process_cpu_seconds_total',\n)\n+ var.query.withRefresh('time')\n+ var.query.selectionOptions.withMulti()\n+ var.query.selectionOptions.withIncludeAll(),\n\nnamespace:\nvar.query.new('namespace')\n+ var.query.withDatasourceFromVariable(self.datasource)\n+ var.query.queryTypes.withLabelValues(\n'namespace',\n'process_cpu_seconds_total{cluster=~\"$%s\"}' % self.cluster.name,\n)\n+ var.query.withRefresh('time'),\n\njob:\nvar.query.new('job')\n+ var.query.withDatasourceFromVariable(self.datasource)\n+ var.query.queryTypes.withLabelValues(\n'job',\n'process_cpu_seconds_total{cluster=~\"$%s\", namespace=~\"$%s\"}'\n% [\nself.cluster.name,\nself.namespace.name,\n],\n)\n+ var.query.withRefresh('time'),\n}\n</code></pre> <p>The full controller runtime dashboard example can be found in the repo.</p>"},{"location":"examples/simple.html","title":"Simple dashboard","text":"<p>This example shows a simple dashboard with a single panel displaying one query:</p> <pre><code>local g = import 'g.libsonnet';\n\ng.dashboard.new('Faro dashboard')\n+ g.dashboard.withUid('faro-grafonnet-demo')\n+ g.dashboard.withDescription('Dashboard for Faro')\n+ g.dashboard.graphTooltip.withSharedCrosshair()\n+ g.dashboard.withPanels([\ng.panel.timeSeries.new('Requests / sec')\n+ g.panel.timeSeries.queryOptions.withTargets([\ng.query.prometheus.new(\n'mimir',\n'sum by (status_code) (rate(request_duration_seconds_count{job=~\".*/faro-api\"}[$__rate_interval]))',\n),\n])\n+ g.panel.timeSeries.standardOptions.withUnit('reqps')\n+ g.panel.timeSeries.gridPos.withW(24)\n+ g.panel.timeSeries.gridPos.withH(8),\n])\n</code></pre> <p>Note the <code>g.libsonnet</code> import at the top. The file contains the import reference to the actual version of Grafonnet being used, either latest or a more specific version. This makes the dashboard more portable. In this case the dashboard references <code>grafonnet-latest</code>:</p> <pre><code>import 'github.com/grafana/grafonnet/gen/grafonnet-latest/main.libsonnet'\n</code></pre>"}]}