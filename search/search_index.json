{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"grafonnet","text":"<p>Jsonnet library for generating Grafana dashboards.</p>"},{"location":"index.html#maturity","title":"Maturity","text":"<p>The code in this repository should be considered experimental. Documentation is only available alongside the code. It comes with no support, but we are keen to receive feedback on the product and suggestions on how to improve it, though we cannot commit to resolution of any particular issue. No SLAs are available. It is not meant to be used in production environments, and the risks are unknown/high.</p> <p>Grafana Labs defines experimental features as follows:</p> <p>Projects and features in the Experimental stage are supported only by the Engineering teams; on-call support is not available. Documentation is either limited or not provided outside of code comments. No SLA is provided.</p> <p>Experimental projects or features are primarily intended for open source engineers who want to participate in ensuring systems stability, and to gain consensus and approval for open source governance projects.</p> <p>Projects and features in the Experimental phase are not meant to be used in production environments, and the risks are unknown/high.</p> <p>Additional information can be found in Release life cycle for Grafana Labs.</p>"},{"location":"index.html#introduction","title":"Introduction","text":"<p>This library depends on JSON Schemas generated by Grok, these schemas are generated directly from the Grafana repository to ensure Grafonnet can keep up with Grafana development.</p> <p>Grafonnet is the spiritual successor of grafonnet-lib. As grafonnet-lib was manually written, it had a hard time to keep up with Grafana development, this resulted in it being under-maintained. Besides that, it also came with a performance penalty in jsonnet as it used the builder pattern, although visually appealing it becomes very slow for environments that need to manage many dashboards.</p>"},{"location":"index.html#requirements","title":"Requirements","text":"<p>Grafonnet uses the Jsonnet programming language.</p> <p>NOTE: There is a significant performance issue with the C implementation of Jsonnet. You are strongly recommended to use the newer go-jsonnet Jsonnet implementation. This is also the implementation recommended by the Jsonnet developers themselves.</p> <p>The library can be installed with jsonnet-bundler.</p>"},{"location":"index.html#install","title":"Install","text":"<p>To add grafonnet to a jsonnet project:</p> <pre><code>jb install github.com/grafana/grafonnet/gen/grafonnet-latest@main\n</code></pre>"},{"location":"index.html#usage","title":"Usage","text":"<pre><code>// dashboard.jsonnet\nlocal grafonnet = import 'github.com/grafana/grafonnet/gen/grafonnet-latest/main.libsonnet';\n\ngrafonnet.dashboard.new('My Dashboard')\n</code></pre> <pre><code>jsonnet -J vendor dashboard.jsonnet\n</code></pre>"},{"location":"index.html#subpackages","title":"Subpackages","text":"<ul> <li>dashboard</li> <li>librarypanel</li> <li>panel</li> <li>playlist</li> <li>preferences</li> <li>publicdashboard</li> <li>query</li> <li>serviceaccount</li> <li>team</li> <li>util</li> </ul>"},{"location":"grafonnet/index.html","title":"grafonnet","text":"<ul> <li>dashboard</li> <li>librarypanel</li> <li>panel</li> <li>playlist</li> <li>preferences</li> <li>publicdashboard</li> <li>query</li> <li>serviceaccount</li> <li>team</li> <li>util</li> </ul>"},{"location":"grafonnet/dashboard.html","title":"dashboard","text":"<p>grafonnet.dashboard</p>"},{"location":"grafonnet/dashboard.html#subpackages","title":"Subpackages","text":"<ul> <li>annotation</li> <li>link</li> <li>variable</li> </ul>"},{"location":"grafonnet/dashboard.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withAnnotations(value)</code></li> <li><code>fn withAnnotationsMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withEditable(value=true)</code></li> <li><code>fn withFiscalYearStartMonth(value=0)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withLiveNow(value)</code></li> <li><code>fn withPanels(value)</code></li> <li><code>fn withPanelsMixin(value)</code></li> <li><code>fn withRefresh(value)</code></li> <li><code>fn withRefreshMixin(value)</code></li> <li><code>fn withSchemaVersion(value=36)</code></li> <li><code>fn withStyle(value=\"dark\")</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTemplating(value)</code></li> <li><code>fn withTemplatingMixin(value)</code></li> <li><code>fn withTimezone(value=\"browser\")</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>fn withVariables(value)</code></li> <li><code>fn withVariablesMixin(value)</code></li> <li><code>fn withWeekStart(value)</code></li> <li><code>obj graphTooltip</code><ul> <li><code>fn withSharedCrosshair()</code></li> <li><code>fn withSharedTooltip()</code></li> </ul> </li> <li><code>obj time</code><ul> <li><code>fn withFrom(value=\"now-6h\")</code></li> <li><code>fn withTo(value=\"now\")</code></li> </ul> </li> <li><code>obj timepicker</code><ul> <li><code>fn withCollapse(value=false)</code></li> <li><code>fn withEnable(value=true)</code></li> <li><code>fn withHidden(value=false)</code></li> <li><code>fn withRefreshIntervals(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])</code></li> <li><code>fn withRefreshIntervalsMixin(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])</code></li> <li><code>fn withTimeOptions(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])</code></li> <li><code>fn withTimeOptionsMixin(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])</code></li> </ul> </li> </ul>"},{"location":"grafonnet/dashboard.html#fields","title":"Fields","text":""},{"location":"grafonnet/dashboard.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new dashboard with a title.</p>"},{"location":"grafonnet/dashboard.html#fn-withannotations","title":"fn withAnnotations","text":"<pre><code>withAnnotations(value)\n</code></pre> <p><code>withAnnotations</code> adds an array of annotations to a dashboard.</p> <p>This function appends passed data to existing values</p>"},{"location":"grafonnet/dashboard.html#fn-withannotationsmixin","title":"fn withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(value)\n</code></pre> <p><code>withAnnotationsMixin</code> adds an array of annotations to a dashboard.</p> <p>This function appends passed data to existing values</p>"},{"location":"grafonnet/dashboard.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description of dashboard.</p>"},{"location":"grafonnet/dashboard.html#fn-witheditable","title":"fn withEditable","text":"<pre><code>withEditable(value=true)\n</code></pre> <p>Whether a dashboard is editable or not.</p>"},{"location":"grafonnet/dashboard.html#fn-withfiscalyearstartmonth","title":"fn withFiscalYearStartMonth","text":"<pre><code>withFiscalYearStartMonth(value=0)\n</code></pre> <p>The month that the fiscal year starts on.  0 = January, 11 = December</p>"},{"location":"grafonnet/dashboard.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard.html#fn-withlivenow","title":"fn withLiveNow","text":"<pre><code>withLiveNow(value)\n</code></pre> <p>When set to true, the dashboard will redraw panels at an interval matching the pixel width. This will keep data \"moving left\" regardless of the query refresh rate.  This setting helps avoid dashboards presenting stale live data</p>"},{"location":"grafonnet/dashboard.html#fn-withpanels","title":"fn withPanels","text":"<pre><code>withPanels(value)\n</code></pre>"},{"location":"grafonnet/dashboard.html#fn-withpanelsmixin","title":"fn withPanelsMixin","text":"<pre><code>withPanelsMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard.html#fn-withrefresh","title":"fn withRefresh","text":"<pre><code>withRefresh(value)\n</code></pre> <p>Refresh rate of dashboard. Represented via interval string, e.g. \"5s\", \"1m\", \"1h\", \"1d\".</p>"},{"location":"grafonnet/dashboard.html#fn-withrefreshmixin","title":"fn withRefreshMixin","text":"<pre><code>withRefreshMixin(value)\n</code></pre> <p>Refresh rate of dashboard. Represented via interval string, e.g. \"5s\", \"1m\", \"1h\", \"1d\".</p>"},{"location":"grafonnet/dashboard.html#fn-withschemaversion","title":"fn withSchemaVersion","text":"<pre><code>withSchemaVersion(value=36)\n</code></pre> <p>Version of the JSON schema, incremented each time a Grafana update brings changes to said schema. TODO this is the existing schema numbering system. It will be replaced by Thema's themaVersion</p>"},{"location":"grafonnet/dashboard.html#fn-withstyle","title":"fn withStyle","text":"<pre><code>withStyle(value=\"dark\")\n</code></pre> <p>Theme of dashboard.</p> <p>Accepted values for <code>value</code> are \"dark\", \"light\"</p>"},{"location":"grafonnet/dashboard.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>Tags associated with dashboard.</p>"},{"location":"grafonnet/dashboard.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>Tags associated with dashboard.</p>"},{"location":"grafonnet/dashboard.html#fn-withtemplating","title":"fn withTemplating","text":"<pre><code>withTemplating(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard.html#fn-withtemplatingmixin","title":"fn withTemplatingMixin","text":"<pre><code>withTemplatingMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard.html#fn-withtimezone","title":"fn withTimezone","text":"<pre><code>withTimezone(value=\"browser\")\n</code></pre> <p>Timezone of dashboard. Accepts IANA TZDB zone ID or \"browser\" or \"utc\".</p>"},{"location":"grafonnet/dashboard.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Title of dashboard.</p>"},{"location":"grafonnet/dashboard.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique dashboard identifier that can be generated by anyone. string (8-40)</p>"},{"location":"grafonnet/dashboard.html#fn-withvariables","title":"fn withVariables","text":"<pre><code>withVariables(value)\n</code></pre> <p><code>withVariables</code> adds an array of variables to a dashboard</p>"},{"location":"grafonnet/dashboard.html#fn-withvariablesmixin","title":"fn withVariablesMixin","text":"<pre><code>withVariablesMixin(value)\n</code></pre> <p><code>withVariablesMixin</code> adds an array of variables to a dashboard.</p> <p>This function appends passed data to existing values</p>"},{"location":"grafonnet/dashboard.html#fn-withweekstart","title":"fn withWeekStart","text":"<pre><code>withWeekStart(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard.html#obj-graphtooltip","title":"obj graphTooltip","text":""},{"location":"grafonnet/dashboard.html#fn-graphtooltipwithsharedcrosshair","title":"fn graphTooltip.withSharedCrosshair","text":"<pre><code>withSharedCrosshair()\n</code></pre> <p>Share crosshair on all panels.</p>"},{"location":"grafonnet/dashboard.html#fn-graphtooltipwithsharedtooltip","title":"fn graphTooltip.withSharedTooltip","text":"<pre><code>withSharedTooltip()\n</code></pre> <p>Share crosshair and tooltip on all panels.</p>"},{"location":"grafonnet/dashboard.html#obj-time","title":"obj time","text":""},{"location":"grafonnet/dashboard.html#fn-timewithfrom","title":"fn time.withFrom","text":"<pre><code>withFrom(value=\"now-6h\")\n</code></pre>"},{"location":"grafonnet/dashboard.html#fn-timewithto","title":"fn time.withTo","text":"<pre><code>withTo(value=\"now\")\n</code></pre>"},{"location":"grafonnet/dashboard.html#obj-timepicker","title":"obj timepicker","text":""},{"location":"grafonnet/dashboard.html#fn-timepickerwithcollapse","title":"fn timepicker.withCollapse","text":"<pre><code>withCollapse(value=false)\n</code></pre> <p>Whether timepicker is collapsed or not.</p>"},{"location":"grafonnet/dashboard.html#fn-timepickerwithenable","title":"fn timepicker.withEnable","text":"<pre><code>withEnable(value=true)\n</code></pre> <p>Whether timepicker is enabled or not.</p>"},{"location":"grafonnet/dashboard.html#fn-timepickerwithhidden","title":"fn timepicker.withHidden","text":"<pre><code>withHidden(value=false)\n</code></pre> <p>Whether timepicker is visible or not.</p>"},{"location":"grafonnet/dashboard.html#fn-timepickerwithrefreshintervals","title":"fn timepicker.withRefreshIntervals","text":"<pre><code>withRefreshIntervals(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])\n</code></pre> <p>Selectable intervals for auto-refresh.</p>"},{"location":"grafonnet/dashboard.html#fn-timepickerwithrefreshintervalsmixin","title":"fn timepicker.withRefreshIntervalsMixin","text":"<pre><code>withRefreshIntervalsMixin(value=[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"])\n</code></pre> <p>Selectable intervals for auto-refresh.</p>"},{"location":"grafonnet/dashboard.html#fn-timepickerwithtimeoptions","title":"fn timepicker.withTimeOptions","text":"<pre><code>withTimeOptions(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard.html#fn-timepickerwithtimeoptionsmixin","title":"fn timepicker.withTimeOptionsMixin","text":"<pre><code>withTimeOptionsMixin(value=[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"])\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/librarypanel.html","title":"librarypanel","text":"<p>grafonnet.librarypanel</p>"},{"location":"grafonnet/librarypanel.html#index","title":"Index","text":"<ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withFolderUid(value)</code></li> <li><code>fn withMeta(value)</code></li> <li><code>fn withMetaMixin(value)</code></li> <li><code>fn withModel(value)</code></li> <li><code>fn withModelMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withSchemaVersion(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>fn withVersion(value)</code></li> <li><code>obj meta</code><ul> <li><code>fn withConnectedDashboards(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withCreatedBy(value)</code></li> <li><code>fn withCreatedByMixin(value)</code></li> <li><code>fn withFolderName(value)</code></li> <li><code>fn withFolderUid(value)</code></li> <li><code>fn withUpdated(value)</code></li> <li><code>fn withUpdatedBy(value)</code></li> <li><code>fn withUpdatedByMixin(value)</code></li> <li><code>obj createdBy</code><ul> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> <li><code>obj updatedBy</code><ul> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/librarypanel.html#fields","title":"Fields","text":""},{"location":"grafonnet/librarypanel.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Panel description</p>"},{"location":"grafonnet/librarypanel.html#fn-withfolderuid","title":"fn withFolderUid","text":"<pre><code>withFolderUid(value)\n</code></pre> <p>Folder UID</p>"},{"location":"grafonnet/librarypanel.html#fn-withmeta","title":"fn withMeta","text":"<pre><code>withMeta(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-withmetamixin","title":"fn withMetaMixin","text":"<pre><code>withMetaMixin(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-withmodel","title":"fn withModel","text":"<pre><code>withModel(value)\n</code></pre> <p>TODO: should be the same panel schema defined in dashboard Typescript: Omit;"},{"location":"grafonnet/librarypanel.html#fn-withmodelmixin","title":"fn withModelMixin","text":"<pre><code>withModelMixin(value)\n</code></pre> <p>TODO: should be the same panel schema defined in dashboard Typescript: Omit;"},{"location":"grafonnet/librarypanel.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Panel name (also saved in the model)</p>"},{"location":"grafonnet/librarypanel.html#fn-withschemaversion","title":"fn withSchemaVersion","text":"<pre><code>withSchemaVersion(value)\n</code></pre> <p>Dashboard version when this was saved (zero if unknown)</p>"},{"location":"grafonnet/librarypanel.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>The panel type (from inside the model)</p>"},{"location":"grafonnet/librarypanel.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Library element UID</p>"},{"location":"grafonnet/librarypanel.html#fn-withversion","title":"fn withVersion","text":"<pre><code>withVersion(value)\n</code></pre> <p>panel version, incremented each time the dashboard is updated.</p>"},{"location":"grafonnet/librarypanel.html#obj-meta","title":"obj meta","text":""},{"location":"grafonnet/librarypanel.html#fn-metawithconnecteddashboards","title":"fn meta.withConnectedDashboards","text":"<pre><code>withConnectedDashboards(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithcreated","title":"fn meta.withCreated","text":"<pre><code>withCreated(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithcreatedby","title":"fn meta.withCreatedBy","text":"<pre><code>withCreatedBy(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithcreatedbymixin","title":"fn meta.withCreatedByMixin","text":"<pre><code>withCreatedByMixin(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithfoldername","title":"fn meta.withFolderName","text":"<pre><code>withFolderName(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithfolderuid","title":"fn meta.withFolderUid","text":"<pre><code>withFolderUid(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithupdated","title":"fn meta.withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithupdatedby","title":"fn meta.withUpdatedBy","text":"<pre><code>withUpdatedBy(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metawithupdatedbymixin","title":"fn meta.withUpdatedByMixin","text":"<pre><code>withUpdatedByMixin(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#obj-metacreatedby","title":"obj meta.createdBy","text":""},{"location":"grafonnet/librarypanel.html#fn-metacreatedbywithavatarurl","title":"fn meta.createdBy.withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metacreatedbywithid","title":"fn meta.createdBy.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metacreatedbywithname","title":"fn meta.createdBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#obj-metaupdatedby","title":"obj meta.updatedBy","text":""},{"location":"grafonnet/librarypanel.html#fn-metaupdatedbywithavatarurl","title":"fn meta.updatedBy.withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metaupdatedbywithid","title":"fn meta.updatedBy.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/librarypanel.html#fn-metaupdatedbywithname","title":"fn meta.updatedBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel.html","title":"panel","text":"<p>grafonnet.panel</p>"},{"location":"grafonnet/panel.html#subpackages","title":"Subpackages","text":"<ul> <li>alertGroups</li> <li>annotationsList</li> <li>barChart</li> <li>barGauge</li> <li>candlestick</li> <li>canvas</li> <li>dashboardList</li> <li>debug</li> <li>gauge</li> <li>geomap</li> <li>heatmap</li> <li>histogram</li> <li>logs</li> <li>news</li> <li>nodeGraph</li> <li>pieChart</li> <li>row</li> <li>stat</li> <li>stateTimeline</li> <li>statusHistory</li> <li>table</li> <li>text</li> <li>timeSeries</li> <li>xyChart</li> </ul>"},{"location":"grafonnet/playlist.html","title":"playlist","text":"<p>grafonnet.playlist</p>"},{"location":"grafonnet/playlist.html#index","title":"Index","text":"<ul> <li><code>fn withInterval(value=\"5m\")</code></li> <li><code>fn withItems(value)</code></li> <li><code>fn withItemsMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj items</code><ul> <li><code>fn withTitle(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/playlist.html#fields","title":"Fields","text":""},{"location":"grafonnet/playlist.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value=\"5m\")\n</code></pre> <p>Interval sets the time between switching views in a playlist. FIXME: Is this based on a standardized format or what options are available? Can datemath be used?</p>"},{"location":"grafonnet/playlist.html#fn-withitems","title":"fn withItems","text":"<pre><code>withItems(value)\n</code></pre> <p>The ordered list of items that the playlist will iterate over. FIXME! This should not be optional, but changing it makes the godegen awkward</p>"},{"location":"grafonnet/playlist.html#fn-withitemsmixin","title":"fn withItemsMixin","text":"<pre><code>withItemsMixin(value)\n</code></pre> <p>The ordered list of items that the playlist will iterate over. FIXME! This should not be optional, but changing it makes the godegen awkward</p>"},{"location":"grafonnet/playlist.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the playlist.</p>"},{"location":"grafonnet/playlist.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique playlist identifier. Generated on creation, either by the creator of the playlist of by the application.</p>"},{"location":"grafonnet/playlist.html#obj-items","title":"obj items","text":""},{"location":"grafonnet/playlist.html#fn-itemswithtitle","title":"fn items.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Title is an unused property -- it will be removed in the future</p>"},{"location":"grafonnet/playlist.html#fn-itemswithtype","title":"fn items.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Type of the item.</p> <p>Accepted values for <code>value</code> are \"dashboard_by_uid\", \"dashboard_by_id\", \"dashboard_by_tag\"</p>"},{"location":"grafonnet/playlist.html#fn-itemswithvalue","title":"fn items.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>Value depends on type and describes the playlist item.</p> <ul> <li>dashboard_by_id: The value is an internal numerical identifier set by Grafana. This  is not portable as the numerical identifier is non-deterministic between different instances.  Will be replaced by dashboard_by_uid in the future. (deprecated)</li> <li>dashboard_by_tag: The value is a tag which is set on any number of dashboards. All  dashboards behind the tag will be added to the playlist.</li> <li>dashboard_by_uid: The value is the dashboard UID</li> </ul>"},{"location":"grafonnet/preferences.html","title":"preferences","text":"<p>grafonnet.preferences</p>"},{"location":"grafonnet/preferences.html#index","title":"Index","text":"<ul> <li><code>fn withHomeDashboardUID(value)</code></li> <li><code>fn withLanguage(value)</code></li> <li><code>fn withQueryHistory(value)</code></li> <li><code>fn withQueryHistoryMixin(value)</code></li> <li><code>fn withTheme(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withWeekStart(value)</code></li> <li><code>obj queryHistory</code><ul> <li><code>fn withHomeTab(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/preferences.html#fields","title":"Fields","text":""},{"location":"grafonnet/preferences.html#fn-withhomedashboarduid","title":"fn withHomeDashboardUID","text":"<pre><code>withHomeDashboardUID(value)\n</code></pre> <p>UID for the home dashboard</p>"},{"location":"grafonnet/preferences.html#fn-withlanguage","title":"fn withLanguage","text":"<pre><code>withLanguage(value)\n</code></pre> <p>Selected language (beta)</p>"},{"location":"grafonnet/preferences.html#fn-withqueryhistory","title":"fn withQueryHistory","text":"<pre><code>withQueryHistory(value)\n</code></pre>"},{"location":"grafonnet/preferences.html#fn-withqueryhistorymixin","title":"fn withQueryHistoryMixin","text":"<pre><code>withQueryHistoryMixin(value)\n</code></pre>"},{"location":"grafonnet/preferences.html#fn-withtheme","title":"fn withTheme","text":"<pre><code>withTheme(value)\n</code></pre> <p>light, dark, empty is default</p>"},{"location":"grafonnet/preferences.html#fn-withtimezone","title":"fn withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre> <p>The timezone selection TODO: this should use the timezone defined in common</p>"},{"location":"grafonnet/preferences.html#fn-withweekstart","title":"fn withWeekStart","text":"<pre><code>withWeekStart(value)\n</code></pre> <p>day of the week (sunday, monday, etc)</p>"},{"location":"grafonnet/preferences.html#obj-queryhistory","title":"obj queryHistory","text":""},{"location":"grafonnet/preferences.html#fn-queryhistorywithhometab","title":"fn queryHistory.withHomeTab","text":"<pre><code>withHomeTab(value)\n</code></pre> <p>one of: '' | 'query' | 'starred';</p>"},{"location":"grafonnet/publicdashboard.html","title":"publicdashboard","text":"<p>grafonnet.publicdashboard</p>"},{"location":"grafonnet/publicdashboard.html#index","title":"Index","text":"<ul> <li><code>fn withAccessToken(value)</code></li> <li><code>fn withAnnotationsEnabled(value)</code></li> <li><code>fn withDashboardUid(value)</code></li> <li><code>fn withIsEnabled(value)</code></li> <li><code>fn withTimeSelectionEnabled(value)</code></li> <li><code>fn withUid(value)</code></li> </ul>"},{"location":"grafonnet/publicdashboard.html#fields","title":"Fields","text":""},{"location":"grafonnet/publicdashboard.html#fn-withaccesstoken","title":"fn withAccessToken","text":"<pre><code>withAccessToken(value)\n</code></pre> <p>Unique public access token</p>"},{"location":"grafonnet/publicdashboard.html#fn-withannotationsenabled","title":"fn withAnnotationsEnabled","text":"<pre><code>withAnnotationsEnabled(value)\n</code></pre> <p>Flag that indicates if annotations are enabled</p>"},{"location":"grafonnet/publicdashboard.html#fn-withdashboarduid","title":"fn withDashboardUid","text":"<pre><code>withDashboardUid(value)\n</code></pre> <p>Dashboard unique identifier referenced by this public dashboard</p>"},{"location":"grafonnet/publicdashboard.html#fn-withisenabled","title":"fn withIsEnabled","text":"<pre><code>withIsEnabled(value)\n</code></pre> <p>Flag that indicates if the public dashboard is enabled</p>"},{"location":"grafonnet/publicdashboard.html#fn-withtimeselectionenabled","title":"fn withTimeSelectionEnabled","text":"<pre><code>withTimeSelectionEnabled(value)\n</code></pre> <p>Flag that indicates if the time range picker is enabled</p>"},{"location":"grafonnet/publicdashboard.html#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique public dashboard identifier</p>"},{"location":"grafonnet/query.html","title":"query","text":"<p>grafonnet.query</p>"},{"location":"grafonnet/query.html#subpackages","title":"Subpackages","text":"<ul> <li>azureMonitor</li> <li>cloudWatch</li> <li>elasticsearch</li> <li>loki</li> <li>parca</li> <li>phlare</li> <li>prometheus</li> <li>tempo</li> <li>testData</li> </ul>"},{"location":"grafonnet/serviceaccount.html","title":"serviceaccount","text":"<p>grafonnet.serviceaccount</p>"},{"location":"grafonnet/serviceaccount.html#index","title":"Index","text":"<ul> <li><code>fn withAccessControl(value)</code></li> <li><code>fn withAccessControlMixin(value)</code></li> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withIsDisabled(value)</code></li> <li><code>fn withLogin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOrgId(value)</code></li> <li><code>fn withRole(value)</code></li> <li><code>fn withTeams(value)</code></li> <li><code>fn withTeamsMixin(value)</code></li> <li><code>fn withTokens(value)</code></li> <li><code>fn withUpdated(value)</code></li> </ul>"},{"location":"grafonnet/serviceaccount.html#fields","title":"Fields","text":""},{"location":"grafonnet/serviceaccount.html#fn-withaccesscontrol","title":"fn withAccessControl","text":"<pre><code>withAccessControl(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withaccesscontrolmixin","title":"fn withAccessControlMixin","text":"<pre><code>withAccessControlMixin(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withavatarurl","title":"fn withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre> <p>AvatarUrl is the service account's avatar URL. It allows the frontend to display a picture in front of the service account.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withcreated","title":"fn withCreated","text":"<pre><code>withCreated(value)\n</code></pre> <p>Created indicates when the service account was created.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>ID is the unique identifier of the service account in the database.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withisdisabled","title":"fn withIsDisabled","text":"<pre><code>withIsDisabled(value)\n</code></pre> <p>IsDisabled indicates if the service account is disabled.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withlogin","title":"fn withLogin","text":"<pre><code>withLogin(value)\n</code></pre> <p>Login of the service account.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the service account.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withorgid","title":"fn withOrgId","text":"<pre><code>withOrgId(value)\n</code></pre> <p>OrgId is the ID of an organisation the service account belongs to.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withrole","title":"fn withRole","text":"<pre><code>withRole(value)\n</code></pre> <p>OrgRole is a Grafana Organization Role which can be 'Viewer', 'Editor', 'Admin'.</p> <p>Accepted values for <code>value</code> are \"Admin\", \"Editor\", \"Viewer\"</p>"},{"location":"grafonnet/serviceaccount.html#fn-withteams","title":"fn withTeams","text":"<pre><code>withTeams(value)\n</code></pre> <p>Teams is a list of teams the service account belongs to.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withteamsmixin","title":"fn withTeamsMixin","text":"<pre><code>withTeamsMixin(value)\n</code></pre> <p>Teams is a list of teams the service account belongs to.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withtokens","title":"fn withTokens","text":"<pre><code>withTokens(value)\n</code></pre> <p>Tokens is the number of active tokens for the service account. Tokens are used to authenticate the service account against Grafana.</p>"},{"location":"grafonnet/serviceaccount.html#fn-withupdated","title":"fn withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre> <p>Updated indicates when the service account was updated.</p>"},{"location":"grafonnet/team.html","title":"team","text":"<p>grafonnet.team</p>"},{"location":"grafonnet/team.html#index","title":"Index","text":"<ul> <li><code>fn withAccessControl(value)</code></li> <li><code>fn withAccessControlMixin(value)</code></li> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withEmail(value)</code></li> <li><code>fn withMemberCount(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOrgId(value)</code></li> <li><code>fn withPermission(value)</code></li> <li><code>fn withUpdated(value)</code></li> </ul>"},{"location":"grafonnet/team.html#fields","title":"Fields","text":""},{"location":"grafonnet/team.html#fn-withaccesscontrol","title":"fn withAccessControl","text":"<pre><code>withAccessControl(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/team.html#fn-withaccesscontrolmixin","title":"fn withAccessControlMixin","text":"<pre><code>withAccessControlMixin(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/team.html#fn-withavatarurl","title":"fn withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre> <p>AvatarUrl is the team's avatar URL.</p>"},{"location":"grafonnet/team.html#fn-withcreated","title":"fn withCreated","text":"<pre><code>withCreated(value)\n</code></pre> <p>Created indicates when the team was created.</p>"},{"location":"grafonnet/team.html#fn-withemail","title":"fn withEmail","text":"<pre><code>withEmail(value)\n</code></pre> <p>Email of the team.</p>"},{"location":"grafonnet/team.html#fn-withmembercount","title":"fn withMemberCount","text":"<pre><code>withMemberCount(value)\n</code></pre> <p>MemberCount is the number of the team members.</p>"},{"location":"grafonnet/team.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the team.</p>"},{"location":"grafonnet/team.html#fn-withorgid","title":"fn withOrgId","text":"<pre><code>withOrgId(value)\n</code></pre> <p>OrgId is the ID of an organisation the team belongs to.</p>"},{"location":"grafonnet/team.html#fn-withpermission","title":"fn withPermission","text":"<pre><code>withPermission(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1, 2, 4</p>"},{"location":"grafonnet/team.html#fn-withupdated","title":"fn withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre> <p>Updated indicates when the team was updated.</p>"},{"location":"grafonnet/util.html","title":"util","text":"<p>Helper functions that work well with Grafonnet.</p>"},{"location":"grafonnet/util.html#index","title":"Index","text":"<ul> <li><code>obj dashboard</code><ul> <li><code>fn getOptionsForCustomQuery(query)</code></li> </ul> </li> <li><code>obj grid</code><ul> <li><code>fn makeGrid(panels, panelWidth, panelHeight)</code></li> </ul> </li> <li><code>obj panel</code><ul> <li><code>fn setPanelIDs(panels)</code></li> </ul> </li> <li><code>obj string</code><ul> <li><code>fn slugify(string)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/util.html#fields","title":"Fields","text":""},{"location":"grafonnet/util.html#obj-dashboard","title":"obj dashboard","text":""},{"location":"grafonnet/util.html#fn-dashboardgetoptionsforcustomquery","title":"fn dashboard.getOptionsForCustomQuery","text":"<pre><code>getOptionsForCustomQuery(query)\n</code></pre> <p><code>getOptionsForCustomQuery</code> provides values for the <code>options</code> and <code>current</code> fields. These are required for template variables of type 'custom'but do not automatically get populated by Grafana when importing a dashboard from JSON.</p> <p>This is a bit of a hack and should always be called on functions that set <code>type</code> on a template variable (see the dashboard.templating.list veneer). Ideally Grafana populates these fields from the <code>query</code> value but this provides a backwards compatible solution.</p>"},{"location":"grafonnet/util.html#obj-grid","title":"obj grid","text":""},{"location":"grafonnet/util.html#fn-gridmakegrid","title":"fn grid.makeGrid","text":"<pre><code>makeGrid(panels, panelWidth, panelHeight)\n</code></pre> <p><code>makeGrid</code> returns an array of <code>panels</code> organized in a grid with equal <code>panelWidth</code> and <code>panelHeight</code>. Row panels are used as \"linebreaks\", if a Row panel is collapsed, then all panels below it will be folded into the row.</p> <p>This function will use the full grid of 24 columns, setting <code>panelWidth</code> to a value that can divide 24 into equal parts will fill up the page nicely. (1, 2, 3, 4, 6, 8, 12) Other value for <code>panelWidth</code> will leave a gap on the far right.</p>"},{"location":"grafonnet/util.html#obj-panel","title":"obj panel","text":""},{"location":"grafonnet/util.html#fn-panelsetpanelids","title":"fn panel.setPanelIDs","text":"<pre><code>setPanelIDs(panels)\n</code></pre> <p><code>setPanelIDs</code> ensures that all <code>panels</code> have a unique ID, this functions is used in <code>dashboard.withPanels</code> and <code>dashboard.withPanelsMixin</code> to provide a consistent experience.</p> <p>used in ../veneer/dashboard.libsonnet</p>"},{"location":"grafonnet/util.html#obj-string","title":"obj string","text":""},{"location":"grafonnet/util.html#fn-stringslugify","title":"fn string.slugify","text":"<pre><code>slugify(string)\n</code></pre> <p><code>slugify</code> will create a simple slug from <code>string</code>, keeping only alphanumeric characters and replacing spaces with dashes.</p>"},{"location":"grafonnet/dashboard/index.html","title":"grafonnet.dashboard","text":"<ul> <li>annotation</li> <li>link</li> <li>variable</li> </ul>"},{"location":"grafonnet/dashboard/annotation.html","title":"annotation","text":""},{"location":"grafonnet/dashboard/annotation.html#index","title":"Index","text":"<ul> <li><code>fn withBuiltIn(value=0)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withEnable(value=true)</code></li> <li><code>fn withHide(value=false)</code></li> <li><code>fn withIconColor(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withShowIn(value=0)</code></li> <li><code>fn withTarget(value)</code></li> <li><code>fn withTargetMixin(value)</code></li> <li><code>fn withType(value=\"dashboard\")</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj target</code><ul> <li><code>fn withLimit(value)</code></li> <li><code>fn withMatchAny(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/dashboard/annotation.html#fields","title":"Fields","text":""},{"location":"grafonnet/dashboard/annotation.html#fn-withbuiltin","title":"fn withBuiltIn","text":"<pre><code>withBuiltIn(value=0)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Datasource to use for annotation.</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Datasource to use for annotation.</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withenable","title":"fn withEnable","text":"<pre><code>withEnable(value=true)\n</code></pre> <p>Whether annotation is enabled.</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value=false)\n</code></pre> <p>Whether to hide annotation.</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withiconcolor","title":"fn withIconColor","text":"<pre><code>withIconColor(value)\n</code></pre> <p>Annotation icon color.</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of annotation.</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withrawquery","title":"fn withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre> <p>Query for annotation data.</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withshowin","title":"fn withShowIn","text":"<pre><code>withShowIn(value=0)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#fn-withtarget","title":"fn withTarget","text":"<pre><code>withTarget(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withtargetmixin","title":"fn withTargetMixin","text":"<pre><code>withTargetMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/annotation.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value=\"dashboard\")\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/dashboard/annotation.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#obj-target","title":"obj target","text":""},{"location":"grafonnet/dashboard/annotation.html#fn-targetwithlimit","title":"fn target.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#fn-targetwithmatchany","title":"fn target.withMatchAny","text":"<pre><code>withMatchAny(value)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#fn-targetwithtags","title":"fn target.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#fn-targetwithtagsmixin","title":"fn target.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/annotation.html#fn-targetwithtype","title":"fn target.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html","title":"link","text":""},{"location":"grafonnet/dashboard/link.html#index","title":"Index","text":"<ul> <li><code>obj dashboards</code><ul> <li><code>fn new(title, tags)</code></li> <li><code>obj options</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> </ul> </li> </ul> </li> <li><code>obj link</code><ul> <li><code>fn new(title, utl)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/dashboard/link.html#fields","title":"Fields","text":""},{"location":"grafonnet/dashboard/link.html#obj-dashboards","title":"obj dashboards","text":""},{"location":"grafonnet/dashboard/link.html#fn-dashboardsnew","title":"fn dashboards.new","text":"<pre><code>new(title, tags)\n</code></pre> <p>Create links to dashboards based on <code>tags</code>.</p>"},{"location":"grafonnet/dashboard/link.html#obj-dashboardsoptions","title":"obj dashboards.options","text":""},{"location":"grafonnet/dashboard/link.html#fn-dashboardsoptionswithasdropdown","title":"fn dashboards.options.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#fn-dashboardsoptionswithincludevars","title":"fn dashboards.options.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#fn-dashboardsoptionswithkeeptime","title":"fn dashboards.options.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#fn-dashboardsoptionswithtargetblank","title":"fn dashboards.options.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#obj-link","title":"obj link","text":""},{"location":"grafonnet/dashboard/link.html#fn-linknew","title":"fn link.new","text":"<pre><code>new(title, utl)\n</code></pre> <p>Create link to an arbitrary URL.</p>"},{"location":"grafonnet/dashboard/link.html#fn-linkwithicon","title":"fn link.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#fn-linkwithtooltip","title":"fn link.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#obj-linkoptions","title":"obj link.options","text":""},{"location":"grafonnet/dashboard/link.html#fn-linkoptionswithasdropdown","title":"fn link.options.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#fn-linkoptionswithincludevars","title":"fn link.options.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#fn-linkoptionswithkeeptime","title":"fn link.options.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/link.html#fn-linkoptionswithtargetblank","title":"fn link.options.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html","title":"variable","text":"<p>Example usage:</p> <pre><code>local g = import 'g.libsonnet';\nlocal var = g.dashboard.variable;\n\nlocal customVar =\nvar.custom.new(\n'myOptions',\nvalues=['a', 'b', 'c', 'd'],\n)\n+ var.custom.generalOptions.withDescription(\n'This is a variable for my custom options.'\n)\n+ var.custom.selectionOptions.withMulti();\n\nlocal queryVar =\nvar.query.new('queryOptions')\n+ var.query.queryTypes.withLabelValues(\n'up',\n'instance',\n)\n+ var.query.withDatasource(\ntype='prometheus',\nuid='mimir-prod',\n)\n+ var.query.selectionOptions.withIncludeAll();\n\n\ng.dashboard.new('my dashboard')\n+ g.dashboard.withVariables([\ncustomVar,\nqueryVar,\n])\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#index","title":"Index","text":"<ul> <li><code>obj adhoc</code><ul> <li><code>fn new(name, type, uid)</code></li> <li><code>fn newFromVariable(name, variable)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj constant</code><ul> <li><code>fn new(name, value)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn new(name, values)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> <li><code>obj selectionOptions</code><ul> <li><code>fn withIncludeAll(value=true, customAllValue)</code></li> <li><code>fn withMulti(value=true)</code></li> </ul> </li> </ul> </li> <li><code>obj datasource</code><ul> <li><code>fn new(name, type)</code></li> <li><code>fn withRegex(value)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> <li><code>obj selectionOptions</code><ul> <li><code>fn withIncludeAll(value=true, customAllValue)</code></li> <li><code>fn withMulti(value=true)</code></li> </ul> </li> </ul> </li> <li><code>obj interval</code><ul> <li><code>fn new(name, values)</code></li> <li><code>fn withAutoOption(count, minInterval)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj query</code><ul> <li><code>fn new(name, query=\"\")</code></li> <li><code>fn withDatasource(type, uid)</code></li> <li><code>fn withDatasourceFromVariable(variable)</code></li> <li><code>fn withRegex(value)</code></li> <li><code>fn withSort(i=0, type=\"alphabetical\", asc=true, caseInsensitive=false)</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> <li><code>obj queryTypes</code><ul> <li><code>fn withLabelValues(label, metric)</code></li> </ul> </li> <li><code>obj refresh</code><ul> <li><code>fn onLoad()</code></li> <li><code>fn onTime()</code></li> </ul> </li> <li><code>obj selectionOptions</code><ul> <li><code>fn withIncludeAll(value=true, customAllValue)</code></li> <li><code>fn withMulti(value=true)</code></li> </ul> </li> </ul> </li> <li><code>obj textbox</code><ul> <li><code>fn new(name, default=\"\")</code></li> <li><code>obj generalOptions</code><ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>obj showOnDashboard</code><ul> <li><code>fn withLabelAndValue()</code></li> <li><code>fn withNothing()</code></li> <li><code>fn withValueOnly()</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/dashboard/variable.html#fields","title":"Fields","text":""},{"location":"grafonnet/dashboard/variable.html#obj-adhoc","title":"obj adhoc","text":""},{"location":"grafonnet/dashboard/variable.html#fn-adhocnew","title":"fn adhoc.new","text":"<pre><code>new(name, type, uid)\n</code></pre> <p><code>new</code> creates an adhoc template variable for datasource with <code>type</code> and <code>uid</code>.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-adhocnewfromvariable","title":"fn adhoc.newFromVariable","text":"<pre><code>newFromVariable(name, variable)\n</code></pre> <p>Same as <code>new</code> but selecting the datasource from another template variable.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-adhocgeneraloptions","title":"obj adhoc.generalOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-adhocgeneraloptionswithdescription","title":"fn adhoc.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-adhocgeneraloptionswithlabel","title":"fn adhoc.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-adhocgeneraloptionswithname","title":"fn adhoc.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-adhocgeneraloptionsshowondashboard","title":"obj adhoc.generalOptions.showOnDashboard","text":""},{"location":"grafonnet/dashboard/variable.html#fn-adhocgeneraloptionsshowondashboardwithlabelandvalue","title":"fn adhoc.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-adhocgeneraloptionsshowondashboardwithnothing","title":"fn adhoc.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-adhocgeneraloptionsshowondashboardwithvalueonly","title":"fn adhoc.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-constant","title":"obj constant","text":""},{"location":"grafonnet/dashboard/variable.html#fn-constantnew","title":"fn constant.new","text":"<pre><code>new(name, value)\n</code></pre> <p><code>new</code> creates a hidden constant template variable.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-constantgeneraloptions","title":"obj constant.generalOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-constantgeneraloptionswithdescription","title":"fn constant.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-constantgeneraloptionswithlabel","title":"fn constant.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-constantgeneraloptionswithname","title":"fn constant.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-constantgeneraloptionsshowondashboard","title":"obj constant.generalOptions.showOnDashboard","text":""},{"location":"grafonnet/dashboard/variable.html#fn-constantgeneraloptionsshowondashboardwithlabelandvalue","title":"fn constant.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-constantgeneraloptionsshowondashboardwithnothing","title":"fn constant.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-constantgeneraloptionsshowondashboardwithvalueonly","title":"fn constant.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-custom","title":"obj custom","text":""},{"location":"grafonnet/dashboard/variable.html#fn-customnew","title":"fn custom.new","text":"<pre><code>new(name, values)\n</code></pre> <p><code>new</code> creates a custom template variable.</p> <p>The <code>values</code> array accepts an object with key/value keys, if it's not an object then it will be added as a string.</p> <p>Example: <pre><code>[\n  { key: 'mykey', value: 'myvalue' },\n  'myvalue',\n  12,\n]\n\n\n#### obj custom.generalOptions\n\n\n##### fn custom.generalOptions.withDescription\n\n```ts\nwithDescription(value)\n</code></pre></p>"},{"location":"grafonnet/dashboard/variable.html#fn-customgeneraloptionswithlabel","title":"fn custom.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-customgeneraloptionswithname","title":"fn custom.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-customgeneraloptionsshowondashboard","title":"obj custom.generalOptions.showOnDashboard","text":""},{"location":"grafonnet/dashboard/variable.html#fn-customgeneraloptionsshowondashboardwithlabelandvalue","title":"fn custom.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-customgeneraloptionsshowondashboardwithnothing","title":"fn custom.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-customgeneraloptionsshowondashboardwithvalueonly","title":"fn custom.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-customselectionoptions","title":"obj custom.selectionOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-customselectionoptionswithincludeall","title":"fn custom.selectionOptions.withIncludeAll","text":"<pre><code>withIncludeAll(value=true, customAllValue)\n</code></pre> <p><code>withIncludeAll</code> enables an option to include all variables.</p> <p>Optionally you can set a <code>customAllValue</code>.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-customselectionoptionswithmulti","title":"fn custom.selectionOptions.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/dashboard/variable.html#fn-datasourcenew","title":"fn datasource.new","text":"<pre><code>new(name, type)\n</code></pre> <p><code>new</code> creates a datasource template variable.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-datasourcewithregex","title":"fn datasource.withRegex","text":"<pre><code>withRegex(value)\n</code></pre> <p><code>withRegex</code> filter for which data source instances to choose from in the variable value list. Example: <code>/^prod/</code></p>"},{"location":"grafonnet/dashboard/variable.html#obj-datasourcegeneraloptions","title":"obj datasource.generalOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-datasourcegeneraloptionswithdescription","title":"fn datasource.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-datasourcegeneraloptionswithlabel","title":"fn datasource.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-datasourcegeneraloptionswithname","title":"fn datasource.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-datasourcegeneraloptionsshowondashboard","title":"obj datasource.generalOptions.showOnDashboard","text":""},{"location":"grafonnet/dashboard/variable.html#fn-datasourcegeneraloptionsshowondashboardwithlabelandvalue","title":"fn datasource.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-datasourcegeneraloptionsshowondashboardwithnothing","title":"fn datasource.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-datasourcegeneraloptionsshowondashboardwithvalueonly","title":"fn datasource.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-datasourceselectionoptions","title":"obj datasource.selectionOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-datasourceselectionoptionswithincludeall","title":"fn datasource.selectionOptions.withIncludeAll","text":"<pre><code>withIncludeAll(value=true, customAllValue)\n</code></pre> <p><code>withIncludeAll</code> enables an option to include all variables.</p> <p>Optionally you can set a <code>customAllValue</code>.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-datasourceselectionoptionswithmulti","title":"fn datasource.selectionOptions.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-interval","title":"obj interval","text":""},{"location":"grafonnet/dashboard/variable.html#fn-intervalnew","title":"fn interval.new","text":"<pre><code>new(name, values)\n</code></pre> <p><code>new</code> creates an interval template variable.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-intervalwithautooption","title":"fn interval.withAutoOption","text":"<pre><code>withAutoOption(count, minInterval)\n</code></pre> <p><code>withAutoOption</code> adds an options to dynamically calculate interval by dividing time range by the count specified.</p> <p>`minInterval' has to be either unit-less or end with one of the following units: \"y, M, w, d, h, m, s, ms\".</p>"},{"location":"grafonnet/dashboard/variable.html#obj-intervalgeneraloptions","title":"obj interval.generalOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-intervalgeneraloptionswithdescription","title":"fn interval.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-intervalgeneraloptionswithlabel","title":"fn interval.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-intervalgeneraloptionswithname","title":"fn interval.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-intervalgeneraloptionsshowondashboard","title":"obj interval.generalOptions.showOnDashboard","text":""},{"location":"grafonnet/dashboard/variable.html#fn-intervalgeneraloptionsshowondashboardwithlabelandvalue","title":"fn interval.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-intervalgeneraloptionsshowondashboardwithnothing","title":"fn interval.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-intervalgeneraloptionsshowondashboardwithvalueonly","title":"fn interval.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-query","title":"obj query","text":""},{"location":"grafonnet/dashboard/variable.html#fn-querynew","title":"fn query.new","text":"<pre><code>new(name, query=\"\")\n</code></pre> <p>Create a query template variable.</p> <p><code>query</code> argument is optional, this can also be set with <code>query.queryTypes</code>.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-querywithdatasource","title":"fn query.withDatasource","text":"<pre><code>withDatasource(type, uid)\n</code></pre> <p>Select a datasource for the variable template query.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-querywithdatasourcefromvariable","title":"fn query.withDatasourceFromVariable","text":"<pre><code>withDatasourceFromVariable(variable)\n</code></pre> <p>Select the datasource from another template variable.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-querywithregex","title":"fn query.withRegex","text":"<pre><code>withRegex(value)\n</code></pre> <p><code>withRegex</code> can extract part of a series name or metric node segment. Named capture groups can be used to separate the display text and value (see examples).</p>"},{"location":"grafonnet/dashboard/variable.html#fn-querywithsort","title":"fn query.withSort","text":"<pre><code>withSort(i=0, type=\"alphabetical\", asc=true, caseInsensitive=false)\n</code></pre> <p>Choose how to sort the values in the dropdown.</p> <p>This can be called as <code>withSort(&lt;number&gt;) to use the integer values for each option. If</code>i==0` then it will be ignored and the other arguments will take precedence.</p> <p>The numerical values are:</p> <ul> <li>1 - Alphabetical (asc)</li> <li>2 - Alphabetical (desc)</li> <li>3 - Numerical (asc)</li> <li>4 - Numerical (desc)</li> <li>5 - Alphabetical (case-insensitive, asc)</li> <li>6 - Alphabetical (case-insensitive, desc)</li> </ul>"},{"location":"grafonnet/dashboard/variable.html#obj-querygeneraloptions","title":"obj query.generalOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-querygeneraloptionswithdescription","title":"fn query.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-querygeneraloptionswithlabel","title":"fn query.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-querygeneraloptionswithname","title":"fn query.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-querygeneraloptionsshowondashboard","title":"obj query.generalOptions.showOnDashboard","text":""},{"location":"grafonnet/dashboard/variable.html#fn-querygeneraloptionsshowondashboardwithlabelandvalue","title":"fn query.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-querygeneraloptionsshowondashboardwithnothing","title":"fn query.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-querygeneraloptionsshowondashboardwithvalueonly","title":"fn query.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-queryquerytypes","title":"obj query.queryTypes","text":""},{"location":"grafonnet/dashboard/variable.html#fn-queryquerytypeswithlabelvalues","title":"fn query.queryTypes.withLabelValues","text":"<pre><code>withLabelValues(label, metric)\n</code></pre> <p>Construct a Prometheus template variable using <code>label_values()</code>.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-queryrefresh","title":"obj query.refresh","text":""},{"location":"grafonnet/dashboard/variable.html#fn-queryrefreshonload","title":"fn query.refresh.onLoad","text":"<pre><code>onLoad()\n</code></pre> <p>Refresh label values on dashboard load.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-queryrefreshontime","title":"fn query.refresh.onTime","text":"<pre><code>onTime()\n</code></pre> <p>Refresh label values on time range change.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-queryselectionoptions","title":"obj query.selectionOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-queryselectionoptionswithincludeall","title":"fn query.selectionOptions.withIncludeAll","text":"<pre><code>withIncludeAll(value=true, customAllValue)\n</code></pre> <p><code>withIncludeAll</code> enables an option to include all variables.</p> <p>Optionally you can set a <code>customAllValue</code>.</p>"},{"location":"grafonnet/dashboard/variable.html#fn-queryselectionoptionswithmulti","title":"fn query.selectionOptions.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-textbox","title":"obj textbox","text":""},{"location":"grafonnet/dashboard/variable.html#fn-textboxnew","title":"fn textbox.new","text":"<pre><code>new(name, default=\"\")\n</code></pre> <p><code>new</code> creates a textbox template variable.</p>"},{"location":"grafonnet/dashboard/variable.html#obj-textboxgeneraloptions","title":"obj textbox.generalOptions","text":""},{"location":"grafonnet/dashboard/variable.html#fn-textboxgeneraloptionswithdescription","title":"fn textbox.generalOptions.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-textboxgeneraloptionswithlabel","title":"fn textbox.generalOptions.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-textboxgeneraloptionswithname","title":"fn textbox.generalOptions.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#obj-textboxgeneraloptionsshowondashboard","title":"obj textbox.generalOptions.showOnDashboard","text":""},{"location":"grafonnet/dashboard/variable.html#fn-textboxgeneraloptionsshowondashboardwithlabelandvalue","title":"fn textbox.generalOptions.showOnDashboard.withLabelAndValue","text":"<pre><code>withLabelAndValue()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-textboxgeneraloptionsshowondashboardwithnothing","title":"fn textbox.generalOptions.showOnDashboard.withNothing","text":"<pre><code>withNothing()\n</code></pre>"},{"location":"grafonnet/dashboard/variable.html#fn-textboxgeneraloptionsshowondashboardwithvalueonly","title":"fn textbox.generalOptions.showOnDashboard.withValueOnly","text":"<pre><code>withValueOnly()\n</code></pre>"},{"location":"grafonnet/panel/index.html","title":"grafonnet.panel","text":"<ul> <li>alertGroups</li> <li>annotationsList</li> <li>barChart</li> <li>barGauge</li> <li>candlestick</li> <li>canvas</li> <li>dashboardList</li> <li>debug</li> <li>gauge</li> <li>geomap</li> <li>heatmap</li> <li>histogram</li> <li>logs</li> <li>news</li> <li>nodeGraph</li> <li>pieChart</li> <li>row</li> <li>stat</li> <li>stateTimeline</li> <li>statusHistory</li> <li>table</li> <li>text</li> <li>timeSeries</li> <li>xyChart</li> </ul>"},{"location":"grafonnet/panel/alertGroups.html","title":"alertGroups","text":"<p>grafonnet.panel.alertGroups</p>"},{"location":"grafonnet/panel/alertGroups.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withAlertmanager(value)</code></li> <li><code>fn withExpandAll(value)</code></li> <li><code>fn withLabels(value)</code></li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/alertGroups.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new alertGroups panel with a title.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-optionswithalertmanager","title":"fn options.withAlertmanager","text":"<pre><code>withAlertmanager(value)\n</code></pre> <p>Name of the alertmanager used as a source for alerts</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-optionswithexpandall","title":"fn options.withExpandAll","text":"<pre><code>withExpandAll(value)\n</code></pre> <p>Expand all alert groups by default</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-optionswithlabels","title":"fn options.withLabels","text":"<pre><code>withLabels(value)\n</code></pre> <p>Comma-separated list of values used to filter alert results</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/alertGroups.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/alertGroups.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/alertGroups.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/alertGroups.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html","title":"annotationsList","text":"<p>grafonnet.panel.annotationsList</p>"},{"location":"grafonnet/panel/annotationsList.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withLimit(value=10)</code></li> <li><code>fn withNavigateAfter(value=\"10m\")</code></li> <li><code>fn withNavigateBefore(value=\"10m\")</code></li> <li><code>fn withNavigateToPanel(value=true)</code></li> <li><code>fn withOnlyFromThisDashboard(value=false)</code></li> <li><code>fn withOnlyInTimeRange(value=false)</code></li> <li><code>fn withShowTags(value=true)</code></li> <li><code>fn withShowTime(value=true)</code></li> <li><code>fn withShowUser(value=true)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/annotationsList.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new annotationsList panel with a title.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithlimit","title":"fn options.withLimit","text":"<pre><code>withLimit(value=10)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithnavigateafter","title":"fn options.withNavigateAfter","text":"<pre><code>withNavigateAfter(value=\"10m\")\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithnavigatebefore","title":"fn options.withNavigateBefore","text":"<pre><code>withNavigateBefore(value=\"10m\")\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithnavigatetopanel","title":"fn options.withNavigateToPanel","text":"<pre><code>withNavigateToPanel(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithonlyfromthisdashboard","title":"fn options.withOnlyFromThisDashboard","text":"<pre><code>withOnlyFromThisDashboard(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithonlyintimerange","title":"fn options.withOnlyInTimeRange","text":"<pre><code>withOnlyInTimeRange(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithshowtags","title":"fn options.withShowTags","text":"<pre><code>withShowTags(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithshowtime","title":"fn options.withShowTime","text":"<pre><code>withShowTime(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithshowuser","title":"fn options.withShowUser","text":"<pre><code>withShowUser(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithtags","title":"fn options.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-optionswithtagsmixin","title":"fn options.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/annotationsList.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/annotationsList.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/annotationsList.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/annotationsList.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html","title":"barChart","text":"<p>grafonnet.panel.barChart</p>"},{"location":"grafonnet/panel/barChart.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withFillOpacity(value=80)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withThresholdsStyle(value)</code></li> <li><code>fn withThresholdsStyleMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholdsStyle</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withBarRadius(value=0)</code></li> <li><code>fn withBarWidth(value=0.97)</code></li> <li><code>fn withColorByField(value)</code></li> <li><code>fn withFullHighlight(value=false)</code></li> <li><code>fn withGroupWidth(value=0.7)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withStacking(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withXField(value)</code></li> <li><code>fn withXTickLabelMaxLength(value)</code></li> <li><code>fn withXTickLabelRotation(value=0)</code></li> <li><code>fn withXTickLabelSpacing(value=0)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/barChart.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/barChart.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new barChart panel with a title.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barChart.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barChart.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barChart.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/barChart.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barChart.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/barChart.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/barChart.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=80)\n</code></pre> <p>Controls the fill opacity of the bars.</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"opacity\", \"hue\", \"scheme\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre> <p>Controls line width of the bars.</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwiththresholdsstyle","title":"fn fieldConfig.defaults.custom.withThresholdsStyle","text":"<pre><code>withThresholdsStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomwiththresholdsstylemixin","title":"fn fieldConfig.defaults.custom.withThresholdsStyleMixin","text":"<pre><code>withThresholdsStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultscustomthresholdsstyle","title":"obj fieldConfig.defaults.custom.thresholdsStyle","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultscustomthresholdsstylewithmode","title":"# fn fieldConfig.defaults.custom.thresholdsStyle.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"off\", \"line\", \"dashed\", \"area\", \"line+area\", \"dashed+area\", \"series\"</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/barChart.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barChart.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/barChart.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barChart.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/barChart.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/barChart.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/barChart.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/barChart.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/barChart.html#fn-optionswithbarradius","title":"fn options.withBarRadius","text":"<pre><code>withBarRadius(value=0)\n</code></pre> <p>Controls the radius of each bar.</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithbarwidth","title":"fn options.withBarWidth","text":"<pre><code>withBarWidth(value=0.97)\n</code></pre> <p>Controls the width of bars. 1 = Max width, 0 = Min width.</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithcolorbyfield","title":"fn options.withColorByField","text":"<pre><code>withColorByField(value)\n</code></pre> <p>Use the color value for a sibling field to color each bar value.</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithfullhighlight","title":"fn options.withFullHighlight","text":"<pre><code>withFullHighlight(value=false)\n</code></pre> <p>Enables mode which highlights the entire bar area and shows tooltip when cursor hovers over highlighted area</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithgroupwidth","title":"fn options.withGroupWidth","text":"<pre><code>withGroupWidth(value=0.7)\n</code></pre> <p>Controls the width of groups. 1 = max with, 0 = min width.</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithstacking","title":"fn options.withStacking","text":"<pre><code>withStacking(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"normal\", \"percent\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithxfield","title":"fn options.withXField","text":"<pre><code>withXField(value)\n</code></pre> <p>Manually select which field from the dataset to represent the x field.</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithxticklabelmaxlength","title":"fn options.withXTickLabelMaxLength","text":"<pre><code>withXTickLabelMaxLength(value)\n</code></pre> <p>Sets the max length that a label can have before it is truncated.</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithxticklabelrotation","title":"fn options.withXTickLabelRotation","text":"<pre><code>withXTickLabelRotation(value=0)\n</code></pre> <p>Controls the rotation of the x axis labels.</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionswithxticklabelspacing","title":"fn options.withXTickLabelSpacing","text":"<pre><code>withXTickLabelSpacing(value=0)\n</code></pre> <p>Controls the spacing between x axis labels. negative values indicate backwards skipping behavior</p>"},{"location":"grafonnet/panel/barChart.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/barChart.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/barChart.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/barChart.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"grafonnet/panel/barChart.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"grafonnet/panel/barChart.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/barChart.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/barChart.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/barChart.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/barChart.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/barChart.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/barChart.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html","title":"barGauge","text":"<p>grafonnet.panel.barGauge</p>"},{"location":"grafonnet/panel/barGauge.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withMinVizHeight(value=10)</code></li> <li><code>fn withMinVizWidth(value=0)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withShowUnfilled(value=true)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withValueMode(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/barGauge.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/barGauge.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new barGauge panel with a title.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/barGauge.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/barGauge.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barGauge.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/barGauge.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barGauge.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/barGauge.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/barGauge.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/barGauge.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/barGauge.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/barGauge.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/barGauge.html#fn-optionswithdisplaymode","title":"fn options.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>Enum expressing the possible display modes for the bar gauge component of Grafana UI</p> <p>Accepted values for <code>value</code> are \"basic\", \"lcd\", \"gradient\"</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithminvizheight","title":"fn options.withMinVizHeight","text":"<pre><code>withMinVizHeight(value=10)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithminvizwidth","title":"fn options.withMinVizWidth","text":"<pre><code>withMinVizWidth(value=0)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithshowunfilled","title":"fn options.withShowUnfilled","text":"<pre><code>withShowUnfilled(value=true)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionswithvaluemode","title":"fn options.withValueMode","text":"<pre><code>withValueMode(value)\n</code></pre> <p>Allows for the table cell gauge display type to set the gauge mode.</p> <p>Accepted values for <code>value</code> are \"color\", \"text\", \"hidden\"</p>"},{"location":"grafonnet/panel/barGauge.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/barGauge.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/barGauge.html#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/barGauge.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/barGauge.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/barGauge.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/barGauge.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/barGauge.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/barGauge.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/barGauge.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/barGauge.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/barGauge.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html","title":"candlestick","text":"<p>grafonnet.panel.candlestick</p>"},{"location":"grafonnet/panel/candlestick.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/candlestick.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/candlestick.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new candlestick panel with a title.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/candlestick.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/candlestick.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/candlestick.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/candlestick.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/candlestick.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/candlestick.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/candlestick.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/candlestick.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/candlestick.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/candlestick.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/candlestick.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/candlestick.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/candlestick.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/candlestick.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/candlestick.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/candlestick.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html","title":"canvas","text":"<p>grafonnet.panel.canvas</p>"},{"location":"grafonnet/panel/canvas.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/canvas.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/canvas.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new canvas panel with a title.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/canvas.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/canvas.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/canvas.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/canvas.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/canvas.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/canvas.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/canvas.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/canvas.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/canvas.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/canvas.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/canvas.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/canvas.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/canvas.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/canvas.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/canvas.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/canvas.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/canvas.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/canvas.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/canvas.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/canvas.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/canvas.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/canvas.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/canvas.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html","title":"dashboardList","text":"<p>grafonnet.panel.dashboardList</p>"},{"location":"grafonnet/panel/dashboardList.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withFolderId(value)</code></li> <li><code>fn withLayout(value)</code></li> <li><code>fn withMaxItems(value=10)</code></li> <li><code>fn withQuery(value=\"\")</code></li> <li><code>fn withShowHeadings(value=true)</code></li> <li><code>fn withShowRecentlyViewed(value=false)</code></li> <li><code>fn withShowSearch(value=false)</code></li> <li><code>fn withShowStarred(value=true)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/dashboardList.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new dashboardList panel with a title.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithfolderid","title":"fn options.withFolderId","text":"<pre><code>withFolderId(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithlayout","title":"fn options.withLayout","text":"<pre><code>withLayout(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"list\", \"previews\"</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithmaxitems","title":"fn options.withMaxItems","text":"<pre><code>withMaxItems(value=10)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithquery","title":"fn options.withQuery","text":"<pre><code>withQuery(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithshowheadings","title":"fn options.withShowHeadings","text":"<pre><code>withShowHeadings(value=true)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithshowrecentlyviewed","title":"fn options.withShowRecentlyViewed","text":"<pre><code>withShowRecentlyViewed(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithshowsearch","title":"fn options.withShowSearch","text":"<pre><code>withShowSearch(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithshowstarred","title":"fn options.withShowStarred","text":"<pre><code>withShowStarred(value=true)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithtags","title":"fn options.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-optionswithtagsmixin","title":"fn options.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/dashboardList.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/dashboardList.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/dashboardList.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/dashboardList.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html","title":"debug","text":"<p>grafonnet.panel.debug</p>"},{"location":"grafonnet/panel/debug.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCounters(value)</code></li> <li><code>fn withCountersMixin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>obj counters</code><ul> <li><code>fn withDataChanged(value)</code></li> <li><code>fn withRender(value)</code></li> <li><code>fn withSchemaChanged(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/debug.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/debug.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new debug panel with a title.</p>"},{"location":"grafonnet/panel/debug.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/debug.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/debug.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/debug.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/debug.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/debug.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/debug.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/debug.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/debug.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/debug.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/debug.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/debug.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/debug.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/debug.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/debug.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/debug.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/debug.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/debug.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/debug.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/debug.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/debug.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/debug.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/debug.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/debug.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/debug.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/debug.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/debug.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/debug.html#fn-optionswithcounters","title":"fn options.withCounters","text":"<pre><code>withCounters(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-optionswithcountersmixin","title":"fn options.withCountersMixin","text":"<pre><code>withCountersMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-optionswithmode","title":"fn options.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"render\", \"events\", \"cursor\", \"State\", \"ThrowError\"</p>"},{"location":"grafonnet/panel/debug.html#obj-optionscounters","title":"obj options.counters","text":""},{"location":"grafonnet/panel/debug.html#fn-optionscounterswithdatachanged","title":"fn options.counters.withDataChanged","text":"<pre><code>withDataChanged(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-optionscounterswithrender","title":"fn options.counters.withRender","text":"<pre><code>withRender(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-optionscounterswithschemachanged","title":"fn options.counters.withSchemaChanged","text":"<pre><code>withSchemaChanged(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/debug.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/debug.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/debug.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/debug.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/debug.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/debug.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html","title":"gauge","text":"<p>grafonnet.panel.gauge</p>"},{"location":"grafonnet/panel/gauge.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withShowThresholdLabels(value=false)</code></li> <li><code>fn withShowThresholdMarkers(value=true)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/gauge.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/gauge.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new gauge panel with a title.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/gauge.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/gauge.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/gauge.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/gauge.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/gauge.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/gauge.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/gauge.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/gauge.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/gauge.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/gauge.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/gauge.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/gauge.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/gauge.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/gauge.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/gauge.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/gauge.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/gauge.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/gauge.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionswithshowthresholdlabels","title":"fn options.withShowThresholdLabels","text":"<pre><code>withShowThresholdLabels(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-optionswithshowthresholdmarkers","title":"fn options.withShowThresholdMarkers","text":"<pre><code>withShowThresholdMarkers(value=true)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/gauge.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/gauge.html#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/gauge.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/gauge.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/gauge.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/gauge.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/gauge.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/gauge.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/gauge.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/gauge.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/gauge.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html","title":"geomap","text":"<p>grafonnet.panel.geomap</p>"},{"location":"grafonnet/panel/geomap.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withBasemap(value)</code></li> <li><code>fn withBasemapMixin(value)</code></li> <li><code>fn withControls(value)</code></li> <li><code>fn withControlsMixin(value)</code></li> <li><code>fn withLayers(value)</code></li> <li><code>fn withLayersMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withView(value)</code></li> <li><code>fn withViewMixin(value)</code></li> <li><code>obj basemap</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withFilterData(value)</code></li> <li><code>fn withLocation(value)</code></li> <li><code>fn withLocationMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOpacity(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj location</code><ul> <li><code>fn withGazetteer(value)</code></li> <li><code>fn withGeohash(value)</code></li> <li><code>fn withLatitude(value)</code></li> <li><code>fn withLongitude(value)</code></li> <li><code>fn withLookup(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withWkt(value)</code></li> </ul> </li> </ul> </li> <li><code>obj controls</code><ul> <li><code>fn withMouseWheelZoom(value)</code></li> <li><code>fn withShowAttribution(value)</code></li> <li><code>fn withShowDebug(value)</code></li> <li><code>fn withShowMeasure(value)</code></li> <li><code>fn withShowScale(value)</code></li> <li><code>fn withShowZoom(value)</code></li> </ul> </li> <li><code>obj layers</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withFilterData(value)</code></li> <li><code>fn withLocation(value)</code></li> <li><code>fn withLocationMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOpacity(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj location</code><ul> <li><code>fn withGazetteer(value)</code></li> <li><code>fn withGeohash(value)</code></li> <li><code>fn withLatitude(value)</code></li> <li><code>fn withLongitude(value)</code></li> <li><code>fn withLookup(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withWkt(value)</code></li> </ul> </li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj view</code><ul> <li><code>fn withAllLayers(value=true)</code></li> <li><code>fn withId(value=\"zero\")</code></li> <li><code>fn withLastOnly(value)</code></li> <li><code>fn withLat(value=0)</code></li> <li><code>fn withLayer(value)</code></li> <li><code>fn withLon(value=0)</code></li> <li><code>fn withMaxZoom(value)</code></li> <li><code>fn withMinZoom(value)</code></li> <li><code>fn withPadding(value)</code></li> <li><code>fn withShared(value)</code></li> <li><code>fn withZoom(value=1)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/geomap.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/geomap.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new geomap panel with a title.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/geomap.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/geomap.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/geomap.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/geomap.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/geomap.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/geomap.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/geomap.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/geomap.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/geomap.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/geomap.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/geomap.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/geomap.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/geomap.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/geomap.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/geomap.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/geomap.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/geomap.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionswithbasemap","title":"fn options.withBasemap","text":"<pre><code>withBasemap(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithbasemapmixin","title":"fn options.withBasemapMixin","text":"<pre><code>withBasemapMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithcontrols","title":"fn options.withControls","text":"<pre><code>withControls(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithcontrolsmixin","title":"fn options.withControlsMixin","text":"<pre><code>withControlsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithlayers","title":"fn options.withLayers","text":"<pre><code>withLayers(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithlayersmixin","title":"fn options.withLayersMixin","text":"<pre><code>withLayersMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithview","title":"fn options.withView","text":"<pre><code>withView(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionswithviewmixin","title":"fn options.withViewMixin","text":"<pre><code>withViewMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-optionsbasemap","title":"obj options.basemap","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithconfig","title":"fn options.basemap.withConfig","text":"<pre><code>withConfig(value)\n</code></pre> <p>Custom options depending on the type</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithfilterdata","title":"fn options.basemap.withFilterData","text":"<pre><code>withFilterData(value)\n</code></pre> <p>Defines a frame MatcherConfig that may filter data for the given layer</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithlocation","title":"fn options.basemap.withLocation","text":"<pre><code>withLocation(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithlocationmixin","title":"fn options.basemap.withLocationMixin","text":"<pre><code>withLocationMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithname","title":"fn options.basemap.withName","text":"<pre><code>withName(value)\n</code></pre> <p>configured unique display name</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithopacity","title":"fn options.basemap.withOpacity","text":"<pre><code>withOpacity(value)\n</code></pre> <p>Common properties: https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html Layer opacity (0-1)</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithtooltip","title":"fn options.basemap.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Check tooltip (defaults to true)</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemapwithtype","title":"fn options.basemap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-optionsbasemaplocation","title":"obj options.basemap.location","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemaplocationwithgazetteer","title":"fn options.basemap.location.withGazetteer","text":"<pre><code>withGazetteer(value)\n</code></pre> <p>Path to Gazetteer</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemaplocationwithgeohash","title":"fn options.basemap.location.withGeohash","text":"<pre><code>withGeohash(value)\n</code></pre> <p>Field mappings</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemaplocationwithlatitude","title":"fn options.basemap.location.withLatitude","text":"<pre><code>withLatitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemaplocationwithlongitude","title":"fn options.basemap.location.withLongitude","text":"<pre><code>withLongitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemaplocationwithlookup","title":"fn options.basemap.location.withLookup","text":"<pre><code>withLookup(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemaplocationwithmode","title":"fn options.basemap.location.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"auto\", \"geohash\", \"coords\", \"lookup\"</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionsbasemaplocationwithwkt","title":"fn options.basemap.location.withWkt","text":"<pre><code>withWkt(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-optionscontrols","title":"obj options.controls","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionscontrolswithmousewheelzoom","title":"fn options.controls.withMouseWheelZoom","text":"<pre><code>withMouseWheelZoom(value)\n</code></pre> <p>let the mouse wheel zoom</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionscontrolswithshowattribution","title":"fn options.controls.withShowAttribution","text":"<pre><code>withShowAttribution(value)\n</code></pre> <p>Lower right</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionscontrolswithshowdebug","title":"fn options.controls.withShowDebug","text":"<pre><code>withShowDebug(value)\n</code></pre> <p>Show debug</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionscontrolswithshowmeasure","title":"fn options.controls.withShowMeasure","text":"<pre><code>withShowMeasure(value)\n</code></pre> <p>Show measure</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionscontrolswithshowscale","title":"fn options.controls.withShowScale","text":"<pre><code>withShowScale(value)\n</code></pre> <p>Scale options</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionscontrolswithshowzoom","title":"fn options.controls.withShowZoom","text":"<pre><code>withShowZoom(value)\n</code></pre> <p>Zoom (upper left)</p>"},{"location":"grafonnet/panel/geomap.html#obj-optionslayers","title":"obj options.layers","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithconfig","title":"fn options.layers.withConfig","text":"<pre><code>withConfig(value)\n</code></pre> <p>Custom options depending on the type</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithfilterdata","title":"fn options.layers.withFilterData","text":"<pre><code>withFilterData(value)\n</code></pre> <p>Defines a frame MatcherConfig that may filter data for the given layer</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithlocation","title":"fn options.layers.withLocation","text":"<pre><code>withLocation(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithlocationmixin","title":"fn options.layers.withLocationMixin","text":"<pre><code>withLocationMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithname","title":"fn options.layers.withName","text":"<pre><code>withName(value)\n</code></pre> <p>configured unique display name</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithopacity","title":"fn options.layers.withOpacity","text":"<pre><code>withOpacity(value)\n</code></pre> <p>Common properties: https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html Layer opacity (0-1)</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithtooltip","title":"fn options.layers.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Check tooltip (defaults to true)</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerswithtype","title":"fn options.layers.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-optionslayerslocation","title":"obj options.layers.location","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionslayerslocationwithgazetteer","title":"fn options.layers.location.withGazetteer","text":"<pre><code>withGazetteer(value)\n</code></pre> <p>Path to Gazetteer</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerslocationwithgeohash","title":"fn options.layers.location.withGeohash","text":"<pre><code>withGeohash(value)\n</code></pre> <p>Field mappings</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerslocationwithlatitude","title":"fn options.layers.location.withLatitude","text":"<pre><code>withLatitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerslocationwithlongitude","title":"fn options.layers.location.withLongitude","text":"<pre><code>withLongitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerslocationwithlookup","title":"fn options.layers.location.withLookup","text":"<pre><code>withLookup(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerslocationwithmode","title":"fn options.layers.location.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"auto\", \"geohash\", \"coords\", \"lookup\"</p>"},{"location":"grafonnet/panel/geomap.html#fn-optionslayerslocationwithwkt","title":"fn options.layers.location.withWkt","text":"<pre><code>withWkt(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"none\", \"details\"</p>"},{"location":"grafonnet/panel/geomap.html#obj-optionsview","title":"obj options.view","text":""},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithalllayers","title":"fn options.view.withAllLayers","text":"<pre><code>withAllLayers(value=true)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithid","title":"fn options.view.withId","text":"<pre><code>withId(value=\"zero\")\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithlastonly","title":"fn options.view.withLastOnly","text":"<pre><code>withLastOnly(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithlat","title":"fn options.view.withLat","text":"<pre><code>withLat(value=0)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithlayer","title":"fn options.view.withLayer","text":"<pre><code>withLayer(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithlon","title":"fn options.view.withLon","text":"<pre><code>withLon(value=0)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithmaxzoom","title":"fn options.view.withMaxZoom","text":"<pre><code>withMaxZoom(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithminzoom","title":"fn options.view.withMinZoom","text":"<pre><code>withMinZoom(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithpadding","title":"fn options.view.withPadding","text":"<pre><code>withPadding(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithshared","title":"fn options.view.withShared","text":"<pre><code>withShared(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-optionsviewwithzoom","title":"fn options.view.withZoom","text":"<pre><code>withZoom(value=1)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/geomap.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/geomap.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/geomap.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/geomap.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/geomap.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/geomap.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html","title":"heatmap","text":"<p>grafonnet.panel.heatmap</p>"},{"location":"grafonnet/panel/heatmap.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCalculate(value=false)</code></li> <li><code>fn withCalculation(value)</code></li> <li><code>fn withCalculationMixin(value)</code></li> <li><code>fn withCellGap(value=1)</code></li> <li><code>fn withCellRadius(value)</code></li> <li><code>fn withCellValues(value={})</code></li> <li><code>fn withCellValuesMixin(value={})</code></li> <li><code>fn withColor(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})</code></li> <li><code>fn withColorMixin(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})</code></li> <li><code>fn withExemplars(value)</code></li> <li><code>fn withExemplarsMixin(value)</code></li> <li><code>fn withFilterValues(value={\"le\": 0.000000001})</code></li> <li><code>fn withFilterValuesMixin(value={\"le\": 0.000000001})</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withRowsFrame(value)</code></li> <li><code>fn withRowsFrameMixin(value)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withYAxis(value)</code></li> <li><code>fn withYAxisMixin(value)</code></li> <li><code>obj calculation</code><ul> <li><code>fn withXBuckets(value)</code></li> <li><code>fn withXBucketsMixin(value)</code></li> <li><code>fn withYBuckets(value)</code></li> <li><code>fn withYBucketsMixin(value)</code></li> <li><code>obj xBuckets</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScaleMixin(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj scale</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj yBuckets</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScaleMixin(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj scale</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj cellValues</code><ul> <li><code>fn withCellValues(value)</code></li> <li><code>fn withCellValuesMixin(value)</code></li> <li><code>obj CellValues</code><ul> <li><code>fn withDecimals(value)</code></li> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj color</code><ul> <li><code>fn withHeatmapColorOptions(value)</code></li> <li><code>fn withHeatmapColorOptionsMixin(value)</code></li> <li><code>obj HeatmapColorOptions</code><ul> <li><code>fn withExponent(value)</code></li> <li><code>fn withFill(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withReverse(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScheme(value)</code></li> <li><code>fn withSteps(value)</code></li> </ul> </li> </ul> </li> <li><code>obj exemplars</code><ul> <li><code>fn withColor(value)</code></li> </ul> </li> <li><code>obj filterValues</code><ul> <li><code>fn withFilterValueRange(value)</code></li> <li><code>fn withFilterValueRangeMixin(value)</code></li> <li><code>obj FilterValueRange</code><ul> <li><code>fn withGe(value)</code></li> <li><code>fn withLe(value)</code></li> </ul> </li> </ul> </li> <li><code>obj legend</code><ul> <li><code>fn withShow(value)</code></li> </ul> </li> <li><code>obj rowsFrame</code><ul> <li><code>fn withLayout(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withShow(value)</code></li> <li><code>fn withYHistogram(value)</code></li> </ul> </li> <li><code>obj yAxis</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withReverse(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/heatmap.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/heatmap.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new heatmap panel with a title.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/heatmap.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/heatmap.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/heatmap.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/heatmap.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/heatmap.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/heatmap.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/heatmap.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/heatmap.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/heatmap.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcalculate","title":"fn options.withCalculate","text":"<pre><code>withCalculate(value=false)\n</code></pre> <p>Controls if the heatmap should be calculated from data</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcalculation","title":"fn options.withCalculation","text":"<pre><code>withCalculation(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcalculationmixin","title":"fn options.withCalculationMixin","text":"<pre><code>withCalculationMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcellgap","title":"fn options.withCellGap","text":"<pre><code>withCellGap(value=1)\n</code></pre> <p>Controls gap between cells</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcellradius","title":"fn options.withCellRadius","text":"<pre><code>withCellRadius(value)\n</code></pre> <p>Controls cell radius</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcellvalues","title":"fn options.withCellValues","text":"<pre><code>withCellValues(value={})\n</code></pre> <p>Controls cell value unit</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcellvaluesmixin","title":"fn options.withCellValuesMixin","text":"<pre><code>withCellValuesMixin(value={})\n</code></pre> <p>Controls cell value unit</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcolor","title":"fn options.withColor","text":"<pre><code>withColor(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})\n</code></pre> <p>Controls the color options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithcolormixin","title":"fn options.withColorMixin","text":"<pre><code>withColorMixin(value={\"exponent\": 0.5,\"fill\": \"dark-orange\",\"reverse\": false,\"scheme\": \"Oranges\",\"steps\": 64})\n</code></pre> <p>Controls the color options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithexemplars","title":"fn options.withExemplars","text":"<pre><code>withExemplars(value)\n</code></pre> <p>Controls exemplar options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithexemplarsmixin","title":"fn options.withExemplarsMixin","text":"<pre><code>withExemplarsMixin(value)\n</code></pre> <p>Controls exemplar options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithfiltervalues","title":"fn options.withFilterValues","text":"<pre><code>withFilterValues(value={\"le\": 0.000000001})\n</code></pre> <p>Filters values between a given range</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithfiltervaluesmixin","title":"fn options.withFilterValuesMixin","text":"<pre><code>withFilterValuesMixin(value={\"le\": 0.000000001})\n</code></pre> <p>Filters values between a given range</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>Controls legend options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>Controls legend options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithrowsframe","title":"fn options.withRowsFrame","text":"<pre><code>withRowsFrame(value)\n</code></pre> <p>Controls frame rows options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithrowsframemixin","title":"fn options.withRowsFrameMixin","text":"<pre><code>withRowsFrameMixin(value)\n</code></pre> <p>Controls frame rows options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Controls tooltip options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>Controls tooltip options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithyaxis","title":"fn options.withYAxis","text":"<pre><code>withYAxis(value)\n</code></pre> <p>Configuration options for the yAxis</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionswithyaxismixin","title":"fn options.withYAxisMixin","text":"<pre><code>withYAxisMixin(value)\n</code></pre> <p>Configuration options for the yAxis</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscalculation","title":"obj options.calculation","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationwithxbuckets","title":"fn options.calculation.withXBuckets","text":"<pre><code>withXBuckets(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationwithxbucketsmixin","title":"fn options.calculation.withXBucketsMixin","text":"<pre><code>withXBucketsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationwithybuckets","title":"fn options.calculation.withYBuckets","text":"<pre><code>withYBuckets(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationwithybucketsmixin","title":"fn options.calculation.withYBucketsMixin","text":"<pre><code>withYBucketsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscalculationxbuckets","title":"obj options.calculation.xBuckets","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationxbucketswithmode","title":"fn options.calculation.xBuckets.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"size\", \"count\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationxbucketswithscale","title":"fn options.calculation.xBuckets.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationxbucketswithscalemixin","title":"fn options.calculation.xBuckets.withScaleMixin","text":"<pre><code>withScaleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationxbucketswithvalue","title":"fn options.calculation.xBuckets.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The number of buckets to use for the axis in the heatmap</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscalculationxbucketsscale","title":"obj options.calculation.xBuckets.scale","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationxbucketsscalewithlinearthreshold","title":"# fn options.calculation.xBuckets.scale.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationxbucketsscalewithlog","title":"# fn options.calculation.xBuckets.scale.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationxbucketsscalewithtype","title":"# fn options.calculation.xBuckets.scale.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscalculationybuckets","title":"obj options.calculation.yBuckets","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationybucketswithmode","title":"fn options.calculation.yBuckets.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"size\", \"count\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationybucketswithscale","title":"fn options.calculation.yBuckets.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationybucketswithscalemixin","title":"fn options.calculation.yBuckets.withScaleMixin","text":"<pre><code>withScaleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationybucketswithvalue","title":"fn options.calculation.yBuckets.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The number of buckets to use for the axis in the heatmap</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscalculationybucketsscale","title":"obj options.calculation.yBuckets.scale","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationybucketsscalewithlinearthreshold","title":"# fn options.calculation.yBuckets.scale.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationybucketsscalewithlog","title":"# fn options.calculation.yBuckets.scale.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscalculationybucketsscalewithtype","title":"# fn options.calculation.yBuckets.scale.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscellvalues","title":"obj options.cellValues","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscellvalueswithcellvalues","title":"fn options.cellValues.withCellValues","text":"<pre><code>withCellValues(value)\n</code></pre> <p>Controls cell value options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscellvalueswithcellvaluesmixin","title":"fn options.cellValues.withCellValuesMixin","text":"<pre><code>withCellValuesMixin(value)\n</code></pre> <p>Controls cell value options</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscellvaluescellvalues","title":"obj options.cellValues.CellValues","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscellvaluescellvalueswithdecimals","title":"fn options.cellValues.CellValues.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Controls the number of decimals for cell values</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscellvaluescellvalueswithunit","title":"fn options.cellValues.CellValues.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Controls the cell value unit</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscolor","title":"obj options.color","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorwithheatmapcoloroptions","title":"fn options.color.withHeatmapColorOptions","text":"<pre><code>withHeatmapColorOptions(value)\n</code></pre> <p>Controls various color options</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorwithheatmapcoloroptionsmixin","title":"fn options.color.withHeatmapColorOptionsMixin","text":"<pre><code>withHeatmapColorOptionsMixin(value)\n</code></pre> <p>Controls various color options</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionscolorheatmapcoloroptions","title":"obj options.color.HeatmapColorOptions","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithexponent","title":"fn options.color.HeatmapColorOptions.withExponent","text":"<pre><code>withExponent(value)\n</code></pre> <p>Controls the exponent when scale is set to exponential</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithfill","title":"fn options.color.HeatmapColorOptions.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Controls the color fill when in opacity mode</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithmax","title":"fn options.color.HeatmapColorOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre> <p>Sets the maximum value for the color scale</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithmin","title":"fn options.color.HeatmapColorOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre> <p>Sets the minimum value for the color scale</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithmode","title":"fn options.color.HeatmapColorOptions.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Controls the color mode of the heatmap</p> <p>Accepted values for <code>value</code> are \"opacity\", \"scheme\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithreverse","title":"fn options.color.HeatmapColorOptions.withReverse","text":"<pre><code>withReverse(value)\n</code></pre> <p>Reverses the color scheme</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithscale","title":"fn options.color.HeatmapColorOptions.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>Controls the color scale of the heatmap</p> <p>Accepted values for <code>value</code> are \"linear\", \"exponential\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithscheme","title":"fn options.color.HeatmapColorOptions.withScheme","text":"<pre><code>withScheme(value)\n</code></pre> <p>Controls the color scheme used</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionscolorheatmapcoloroptionswithsteps","title":"fn options.color.HeatmapColorOptions.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Controls the number of color steps</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionsexemplars","title":"obj options.exemplars","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionsexemplarswithcolor","title":"fn options.exemplars.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>Sets the color of the exemplar markers</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionsfiltervalues","title":"obj options.filterValues","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionsfiltervalueswithfiltervaluerange","title":"fn options.filterValues.withFilterValueRange","text":"<pre><code>withFilterValueRange(value)\n</code></pre> <p>Controls the value filter range</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsfiltervalueswithfiltervaluerangemixin","title":"fn options.filterValues.withFilterValueRangeMixin","text":"<pre><code>withFilterValueRangeMixin(value)\n</code></pre> <p>Controls the value filter range</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionsfiltervaluesfiltervaluerange","title":"obj options.filterValues.FilterValueRange","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionsfiltervaluesfiltervaluerangewithge","title":"fn options.filterValues.FilterValueRange.withGe","text":"<pre><code>withGe(value)\n</code></pre> <p>Sets the filter range to values greater than or equal to the given value</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsfiltervaluesfiltervaluerangewithle","title":"fn options.filterValues.FilterValueRange.withLe","text":"<pre><code>withLe(value)\n</code></pre> <p>Sets the filter range to values less than or equal to the given value</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionslegendwithshow","title":"fn options.legend.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Controls if the legend is shown</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionsrowsframe","title":"obj options.rowsFrame","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionsrowsframewithlayout","title":"fn options.rowsFrame.withLayout","text":"<pre><code>withLayout(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"le\", \"ge\", \"unknown\", \"auto\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsrowsframewithvalue","title":"fn options.rowsFrame.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>Sets the name of the cell when not calculating from data</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionstooltipwithshow","title":"fn options.tooltip.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Controls if the tooltip is shown</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionstooltipwithyhistogram","title":"fn options.tooltip.withYHistogram","text":"<pre><code>withYHistogram(value)\n</code></pre> <p>Controls if the tooltip shows a histogram of the y-axis values</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionsyaxis","title":"obj options.yAxis","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxiscenteredzero","title":"fn options.yAxis.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxiscolormode","title":"fn options.yAxis.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxisgridshow","title":"fn options.yAxis.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxislabel","title":"fn options.yAxis.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxisplacement","title":"fn options.yAxis.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxissoftmax","title":"fn options.yAxis.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxissoftmin","title":"fn options.yAxis.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithaxiswidth","title":"fn options.yAxis.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithdecimals","title":"fn options.yAxis.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Controls the number of decimals for yAxis values</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithmax","title":"fn options.yAxis.withMax","text":"<pre><code>withMax(value)\n</code></pre> <p>Sets the maximum value for the yAxis</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithmin","title":"fn options.yAxis.withMin","text":"<pre><code>withMin(value)\n</code></pre> <p>Sets the minimum value for the yAxis</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithreverse","title":"fn options.yAxis.withReverse","text":"<pre><code>withReverse(value)\n</code></pre> <p>Reverses the yAxis</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithscaledistribution","title":"fn options.yAxis.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithscaledistributionmixin","title":"fn options.yAxis.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxiswithunit","title":"fn options.yAxis.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Sets the yAxis unit</p>"},{"location":"grafonnet/panel/heatmap.html#obj-optionsyaxisscaledistribution","title":"obj options.yAxis.scaleDistribution","text":""},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxisscaledistributionwithlinearthreshold","title":"fn options.yAxis.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxisscaledistributionwithlog","title":"fn options.yAxis.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-optionsyaxisscaledistributionwithtype","title":"fn options.yAxis.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/heatmap.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/heatmap.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/heatmap.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/heatmap.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/heatmap.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/heatmap.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/heatmap.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html","title":"histogram","text":"<p>grafonnet.panel.histogram</p>"},{"location":"grafonnet/panel/histogram.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withFillOpacity(value=80)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withBucketOffset(value=0)</code></li> <li><code>fn withBucketSize(value)</code></li> <li><code>fn withCombine(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/histogram.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/histogram.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new histogram panel with a title.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/histogram.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/histogram.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/histogram.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/histogram.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/histogram.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/histogram.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/histogram.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=80)\n</code></pre> <p>Controls the fill opacity of the bars.</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"opacity\", \"hue\", \"scheme\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre> <p>Controls line width of the bars.</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/histogram.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/histogram.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/histogram.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/histogram.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/histogram.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/histogram.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/histogram.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/histogram.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/histogram.html#fn-optionswithbucketoffset","title":"fn options.withBucketOffset","text":"<pre><code>withBucketOffset(value=0)\n</code></pre> <p>Offset buckets by this amount</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionswithbucketsize","title":"fn options.withBucketSize","text":"<pre><code>withBucketSize(value)\n</code></pre> <p>Size of each bucket</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionswithcombine","title":"fn options.withCombine","text":"<pre><code>withCombine(value)\n</code></pre> <p>Combines multiple series into a single histogram</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/histogram.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"grafonnet/panel/histogram.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"grafonnet/panel/histogram.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/histogram.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/histogram.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/histogram.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/histogram.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/histogram.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/histogram.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html","title":"logs","text":"<p>grafonnet.panel.logs</p>"},{"location":"grafonnet/panel/logs.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDedupStrategy(value)</code></li> <li><code>fn withEnableLogDetails(value)</code></li> <li><code>fn withPrettifyLogMessage(value)</code></li> <li><code>fn withShowCommonLabels(value)</code></li> <li><code>fn withShowLabels(value)</code></li> <li><code>fn withShowTime(value)</code></li> <li><code>fn withSortOrder(value)</code></li> <li><code>fn withWrapLogMessage(value)</code></li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/logs.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/logs.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new logs panel with a title.</p>"},{"location":"grafonnet/panel/logs.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/logs.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/logs.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/logs.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/logs.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/logs.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/logs.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/logs.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/logs.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/logs.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/logs.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/logs.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/logs.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/logs.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/logs.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/logs.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/logs.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/logs.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/logs.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/logs.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/logs.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/logs.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/logs.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/logs.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/logs.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/logs.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/logs.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/logs.html#fn-optionswithdedupstrategy","title":"fn options.withDedupStrategy","text":"<pre><code>withDedupStrategy(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"none\", \"exact\", \"numbers\", \"signature\"</p>"},{"location":"grafonnet/panel/logs.html#fn-optionswithenablelogdetails","title":"fn options.withEnableLogDetails","text":"<pre><code>withEnableLogDetails(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-optionswithprettifylogmessage","title":"fn options.withPrettifyLogMessage","text":"<pre><code>withPrettifyLogMessage(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-optionswithshowcommonlabels","title":"fn options.withShowCommonLabels","text":"<pre><code>withShowCommonLabels(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-optionswithshowlabels","title":"fn options.withShowLabels","text":"<pre><code>withShowLabels(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-optionswithshowtime","title":"fn options.withShowTime","text":"<pre><code>withShowTime(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-optionswithsortorder","title":"fn options.withSortOrder","text":"<pre><code>withSortOrder(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Descending\", \"Ascending\"</p>"},{"location":"grafonnet/panel/logs.html#fn-optionswithwraplogmessage","title":"fn options.withWrapLogMessage","text":"<pre><code>withWrapLogMessage(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/logs.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/logs.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/logs.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/logs.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/logs.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/logs.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html","title":"news","text":"<p>grafonnet.panel.news</p>"},{"location":"grafonnet/panel/news.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withFeedUrl(value)</code></li> <li><code>fn withShowImage(value=true)</code></li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/news.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/news.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new news panel with a title.</p>"},{"location":"grafonnet/panel/news.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/news.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/news.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/news.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/news.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/news.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/news.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/news.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/news.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/news.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/news.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/news.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/news.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/news.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/news.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/news.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/news.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/news.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/news.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/news.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/news.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/news.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/news.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/news.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/news.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/news.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/news.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/news.html#fn-optionswithfeedurl","title":"fn options.withFeedUrl","text":"<pre><code>withFeedUrl(value)\n</code></pre> <p>empty/missing will default to grafana blog</p>"},{"location":"grafonnet/panel/news.html#fn-optionswithshowimage","title":"fn options.withShowImage","text":"<pre><code>withShowImage(value=true)\n</code></pre>"},{"location":"grafonnet/panel/news.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/news.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/news.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/news.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/news.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/news.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/news.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html","title":"nodeGraph","text":"<p>grafonnet.panel.nodeGraph</p>"},{"location":"grafonnet/panel/nodeGraph.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withEdges(value)</code></li> <li><code>fn withEdgesMixin(value)</code></li> <li><code>fn withNodes(value)</code></li> <li><code>fn withNodesMixin(value)</code></li> <li><code>obj edges</code><ul> <li><code>fn withMainStatUnit(value)</code></li> <li><code>fn withSecondaryStatUnit(value)</code></li> </ul> </li> <li><code>obj nodes</code><ul> <li><code>fn withArcs(value)</code></li> <li><code>fn withArcsMixin(value)</code></li> <li><code>fn withMainStatUnit(value)</code></li> <li><code>fn withSecondaryStatUnit(value)</code></li> <li><code>obj arcs</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withField(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/nodeGraph.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new nodeGraph panel with a title.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-optionswithedges","title":"fn options.withEdges","text":"<pre><code>withEdges(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionswithedgesmixin","title":"fn options.withEdgesMixin","text":"<pre><code>withEdgesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionswithnodes","title":"fn options.withNodes","text":"<pre><code>withNodes(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionswithnodesmixin","title":"fn options.withNodesMixin","text":"<pre><code>withNodesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#obj-optionsedges","title":"obj options.edges","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsedgeswithmainstatunit","title":"fn options.edges.withMainStatUnit","text":"<pre><code>withMainStatUnit(value)\n</code></pre> <p>Unit for the main stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsedgeswithsecondarystatunit","title":"fn options.edges.withSecondaryStatUnit","text":"<pre><code>withSecondaryStatUnit(value)\n</code></pre> <p>Unit for the secondary stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-optionsnodes","title":"obj options.nodes","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsnodeswitharcs","title":"fn options.nodes.withArcs","text":"<pre><code>withArcs(value)\n</code></pre> <p>Define which fields are shown as part of the node arc (colored circle around the node).</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsnodeswitharcsmixin","title":"fn options.nodes.withArcsMixin","text":"<pre><code>withArcsMixin(value)\n</code></pre> <p>Define which fields are shown as part of the node arc (colored circle around the node).</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsnodeswithmainstatunit","title":"fn options.nodes.withMainStatUnit","text":"<pre><code>withMainStatUnit(value)\n</code></pre> <p>Unit for the main stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsnodeswithsecondarystatunit","title":"fn options.nodes.withSecondaryStatUnit","text":"<pre><code>withSecondaryStatUnit(value)\n</code></pre> <p>Unit for the secondary stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-optionsnodesarcs","title":"obj options.nodes.arcs","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsnodesarcswithcolor","title":"fn options.nodes.arcs.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>The color of the arc.</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-optionsnodesarcswithfield","title":"fn options.nodes.arcs.withField","text":"<pre><code>withField(value)\n</code></pre> <p>Field from which to get the value. Values should be less than 1, representing fraction of a circle.</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/nodeGraph.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/nodeGraph.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/nodeGraph.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html","title":"pieChart","text":"<p>grafonnet.panel.pieChart</p>"},{"location":"grafonnet/panel/pieChart.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDisplayLabels(value)</code></li> <li><code>fn withDisplayLabelsMixin(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withPieType(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withValues(value)</code></li> <li><code>fn withValuesMixin(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/pieChart.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/pieChart.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new pieChart panel with a title.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/pieChart.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/pieChart.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/pieChart.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/pieChart.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/pieChart.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/pieChart.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/pieChart.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/pieChart.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/pieChart.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/pieChart.html#fn-optionswithdisplaylabels","title":"fn options.withDisplayLabels","text":"<pre><code>withDisplayLabels(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithdisplaylabelsmixin","title":"fn options.withDisplayLabelsMixin","text":"<pre><code>withDisplayLabelsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithpietype","title":"fn options.withPieType","text":"<pre><code>withPieType(value)\n</code></pre> <p>Select the pie chart display style.</p> <p>Accepted values for <code>value</code> are \"pie\", \"donut\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithvalues","title":"fn options.legend.withValues","text":"<pre><code>withValues(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithvaluesmixin","title":"fn options.legend.withValuesMixin","text":"<pre><code>withValuesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/pieChart.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/pieChart.html#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/pieChart.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/pieChart.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/pieChart.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"grafonnet/panel/pieChart.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"grafonnet/panel/pieChart.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/pieChart.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/pieChart.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/pieChart.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/pieChart.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/pieChart.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/pieChart.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html","title":"row","text":"<p>grafonnet.panel.row</p>"},{"location":"grafonnet/panel/row.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withCollapsed(value=false)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPanels(value)</code></li> <li><code>fn withPanelsMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/row.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/row.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new row panel with a title.</p>"},{"location":"grafonnet/panel/row.html#fn-withcollapsed","title":"fn withCollapsed","text":"<pre><code>withCollapsed(value=false)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Name of default datasource.</p>"},{"location":"grafonnet/panel/row.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Name of default datasource.</p>"},{"location":"grafonnet/panel/row.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-withpanels","title":"fn withPanels","text":"<pre><code>withPanels(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-withpanelsmixin","title":"fn withPanelsMixin","text":"<pre><code>withPanelsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/row.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"row\"</p>"},{"location":"grafonnet/panel/row.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/row.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/row.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/row.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/row.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/row.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/row.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/row.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/stat.html","title":"stat","text":"<p>grafonnet.panel.stat</p>"},{"location":"grafonnet/panel/stat.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withColorMode(value)</code></li> <li><code>fn withGraphMode(value)</code></li> <li><code>fn withJustifyMode(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTextMode(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/stat.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/stat.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new stat panel with a title.</p>"},{"location":"grafonnet/panel/stat.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stat.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stat.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/stat.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stat.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stat.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stat.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/stat.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/stat.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/stat.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/stat.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stat.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stat.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stat.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stat.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/stat.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/stat.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/stat.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/stat.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stat.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/stat.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stat.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/stat.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/stat.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/stat.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/stat.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/stat.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/stat.html#fn-optionswithcolormode","title":"fn options.withColorMode","text":"<pre><code>withColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"value\", \"background\", \"background_solid\", \"none\"</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithgraphmode","title":"fn options.withGraphMode","text":"<pre><code>withGraphMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"line\", \"area\"</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithjustifymode","title":"fn options.withJustifyMode","text":"<pre><code>withJustifyMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"center\"</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"vertical\", \"horizontal\"</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat.html#fn-optionswithtextmode","title":"fn options.withTextMode","text":"<pre><code>withTextMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"value\", \"value_and_name\", \"name\", \"none\"</p>"},{"location":"grafonnet/panel/stat.html#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/stat.html#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/stat.html#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/stat.html#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/stat.html#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/stat.html#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/stat.html#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/stat.html#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/stat.html#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/stat.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/stat.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/stat.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/stat.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/stat.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/stat.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/stat.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html","title":"stateTimeline","text":"<p>grafonnet.panel.stateTimeline</p>"},{"location":"grafonnet/panel/stateTimeline.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn withFillOpacity(value=70)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=0)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withAlignValue(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withMergeValues(value=true)</code></li> <li><code>fn withRowHeight(value=0.9)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withTimezoneMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/stateTimeline.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new stateTimeline panel with a title.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=70)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=0)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithalignvalue","title":"fn options.withAlignValue","text":"<pre><code>withAlignValue(value)\n</code></pre> <p>Controls the value alignment in the TimelineChart component</p> <p>Accepted values for <code>value</code> are \"center\", \"left\", \"right\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithmergevalues","title":"fn options.withMergeValues","text":"<pre><code>withMergeValues(value=true)\n</code></pre> <p>Merge equal consecutive values</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithrowheight","title":"fn options.withRowHeight","text":"<pre><code>withRowHeight(value=0.9)\n</code></pre> <p>Controls the row height</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithtimezone","title":"fn options.withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithtimezonemixin","title":"fn options.withTimezoneMixin","text":"<pre><code>withTimezoneMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/stateTimeline.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/stateTimeline.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/stateTimeline.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html","title":"statusHistory","text":"<p>grafonnet.panel.statusHistory</p>"},{"location":"grafonnet/panel/statusHistory.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn withFillOpacity(value=70)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withColWidth(value=0.9)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withRowHeight(value=0.9)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withTimezoneMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/statusHistory.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new statusHistory panel with a title.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=70)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithcolwidth","title":"fn options.withColWidth","text":"<pre><code>withColWidth(value=0.9)\n</code></pre> <p>Controls the column width</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithrowheight","title":"fn options.withRowHeight","text":"<pre><code>withRowHeight(value=0.9)\n</code></pre> <p>Set the height of the rows</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithtimezone","title":"fn options.withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithtimezonemixin","title":"fn options.withTimezoneMixin","text":"<pre><code>withTimezoneMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/statusHistory.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/statusHistory.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/statusHistory.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/statusHistory.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html","title":"table","text":"<p>grafonnet.panel.table</p>"},{"location":"grafonnet/panel/table.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCellHeight(value)</code></li> <li><code>fn withFooter(value={\"countRows\": false,\"reducer\": [],\"show\": false})</code></li> <li><code>fn withFooterMixin(value={\"countRows\": false,\"reducer\": [],\"show\": false})</code></li> <li><code>fn withFrameIndex(value=0)</code></li> <li><code>fn withShowHeader(value=true)</code></li> <li><code>fn withShowRowNums(value=false)</code></li> <li><code>fn withShowTypeIcons(value=false)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortByMixin(value)</code></li> <li><code>obj footer</code><ul> <li><code>fn withTableFooterOptions(value)</code></li> <li><code>fn withTableFooterOptionsMixin(value)</code></li> <li><code>obj TableFooterOptions</code><ul> <li><code>fn withCountRows(value)</code></li> <li><code>fn withEnablePagination(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withFieldsMixin(value)</code></li> <li><code>fn withReducer(value)</code></li> <li><code>fn withReducerMixin(value)</code></li> <li><code>fn withShow(value)</code></li> </ul> </li> </ul> </li> <li><code>obj sortBy</code><ul> <li><code>fn withDesc(value)</code></li> <li><code>fn withDisplayName(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/table.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/table.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new table panel with a title.</p>"},{"location":"grafonnet/panel/table.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/table.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/table.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/table.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/table.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/table.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/table.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/table.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/table.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/table.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/table.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/table.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/table.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/table.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/table.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/table.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/table.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/table.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/table.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/table.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/table.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/table.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/table.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/table.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/table.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/table.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/table.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/table.html#fn-optionswithcellheight","title":"fn options.withCellHeight","text":"<pre><code>withCellHeight(value)\n</code></pre> <p>Height of a table cell</p> <p>Accepted values for <code>value</code> are \"sm\", \"md\", \"lg\"</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithfooter","title":"fn options.withFooter","text":"<pre><code>withFooter(value={\"countRows\": false,\"reducer\": [],\"show\": false})\n</code></pre> <p>Controls footer options</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithfootermixin","title":"fn options.withFooterMixin","text":"<pre><code>withFooterMixin(value={\"countRows\": false,\"reducer\": [],\"show\": false})\n</code></pre> <p>Controls footer options</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithframeindex","title":"fn options.withFrameIndex","text":"<pre><code>withFrameIndex(value=0)\n</code></pre> <p>Represents the index of the selected frame</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithshowheader","title":"fn options.withShowHeader","text":"<pre><code>withShowHeader(value=true)\n</code></pre> <p>Controls whether the panel should show the header</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithshowrownums","title":"fn options.withShowRowNums","text":"<pre><code>withShowRowNums(value=false)\n</code></pre> <p>Controls whether the columns should be numbered</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithshowtypeicons","title":"fn options.withShowTypeIcons","text":"<pre><code>withShowTypeIcons(value=false)\n</code></pre> <p>Controls whether the header should show icons for the column types</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithsortby","title":"fn options.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre> <p>Used to control row sorting</p>"},{"location":"grafonnet/panel/table.html#fn-optionswithsortbymixin","title":"fn options.withSortByMixin","text":"<pre><code>withSortByMixin(value)\n</code></pre> <p>Used to control row sorting</p>"},{"location":"grafonnet/panel/table.html#obj-optionsfooter","title":"obj options.footer","text":""},{"location":"grafonnet/panel/table.html#fn-optionsfooterwithtablefooteroptions","title":"fn options.footer.withTableFooterOptions","text":"<pre><code>withTableFooterOptions(value)\n</code></pre> <p>Footer options</p>"},{"location":"grafonnet/panel/table.html#fn-optionsfooterwithtablefooteroptionsmixin","title":"fn options.footer.withTableFooterOptionsMixin","text":"<pre><code>withTableFooterOptionsMixin(value)\n</code></pre> <p>Footer options</p>"},{"location":"grafonnet/panel/table.html#obj-optionsfootertablefooteroptions","title":"obj options.footer.TableFooterOptions","text":""},{"location":"grafonnet/panel/table.html#fn-optionsfootertablefooteroptionswithcountrows","title":"fn options.footer.TableFooterOptions.withCountRows","text":"<pre><code>withCountRows(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-optionsfootertablefooteroptionswithenablepagination","title":"fn options.footer.TableFooterOptions.withEnablePagination","text":"<pre><code>withEnablePagination(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-optionsfootertablefooteroptionswithfields","title":"fn options.footer.TableFooterOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-optionsfootertablefooteroptionswithfieldsmixin","title":"fn options.footer.TableFooterOptions.withFieldsMixin","text":"<pre><code>withFieldsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-optionsfootertablefooteroptionswithreducer","title":"fn options.footer.TableFooterOptions.withReducer","text":"<pre><code>withReducer(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-optionsfootertablefooteroptionswithreducermixin","title":"fn options.footer.TableFooterOptions.withReducerMixin","text":"<pre><code>withReducerMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-optionsfootertablefooteroptionswithshow","title":"fn options.footer.TableFooterOptions.withShow","text":"<pre><code>withShow(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#obj-optionssortby","title":"obj options.sortBy","text":""},{"location":"grafonnet/panel/table.html#fn-optionssortbywithdesc","title":"fn options.sortBy.withDesc","text":"<pre><code>withDesc(value)\n</code></pre> <p>Flag used to indicate descending sort order</p>"},{"location":"grafonnet/panel/table.html#fn-optionssortbywithdisplayname","title":"fn options.sortBy.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>Sets the display name of the field to sort by</p>"},{"location":"grafonnet/panel/table.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/table.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/table.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/table.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/table.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/table.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/table.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html","title":"text","text":"<p>grafonnet.panel.text</p>"},{"location":"grafonnet/panel/text.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withCode(value)</code></li> <li><code>fn withCodeMixin(value)</code></li> <li><code>fn withContent(value=\"# Title\\n\\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\")</code></li> <li><code>fn withMode(value)</code></li> <li><code>obj code</code><ul> <li><code>fn withLanguage(value=\"plaintext\")</code></li> <li><code>fn withShowLineNumbers(value=false)</code></li> <li><code>fn withShowMiniMap(value=false)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/text.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/text.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new text panel with a title.</p>"},{"location":"grafonnet/panel/text.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/text.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/text.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/text.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/text.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/text.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/text.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/text.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/text.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/text.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/text.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/text.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/text.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/text.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/text.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/text.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/text.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/text.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/text.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/text.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/text.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/text.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/text.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/text.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/text.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/text.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/text.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/text.html#fn-optionswithcode","title":"fn options.withCode","text":"<pre><code>withCode(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-optionswithcodemixin","title":"fn options.withCodeMixin","text":"<pre><code>withCodeMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-optionswithcontent","title":"fn options.withContent","text":"<pre><code>withContent(value=\"# Title\\n\\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)\")\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-optionswithmode","title":"fn options.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"html\", \"markdown\", \"code\"</p>"},{"location":"grafonnet/panel/text.html#obj-optionscode","title":"obj options.code","text":""},{"location":"grafonnet/panel/text.html#fn-optionscodewithlanguage","title":"fn options.code.withLanguage","text":"<pre><code>withLanguage(value=\"plaintext\")\n</code></pre> <p>Accepted values for <code>value</code> are \"plaintext\", \"yaml\", \"xml\", \"typescript\", \"sql\", \"go\", \"markdown\", \"html\", \"json\"</p>"},{"location":"grafonnet/panel/text.html#fn-optionscodewithshowlinenumbers","title":"fn options.code.withShowLineNumbers","text":"<pre><code>withShowLineNumbers(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-optionscodewithshowminimap","title":"fn options.code.withShowMiniMap","text":"<pre><code>withShowMiniMap(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/text.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/text.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/text.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/text.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/text.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/text.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html","title":"timeSeries","text":"<p>grafonnet.panel.timeSeries</p>"},{"location":"grafonnet/panel/timeSeries.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj custom</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withBarAlignment(value)</code></li> <li><code>fn withBarMaxWidth(value)</code></li> <li><code>fn withBarWidthFactor(value)</code></li> <li><code>fn withDrawStyle(value)</code></li> <li><code>fn withFillBelowTo(value)</code></li> <li><code>fn withFillColor(value)</code></li> <li><code>fn withFillOpacity(value)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineColor(value)</code></li> <li><code>fn withLineInterpolation(value)</code></li> <li><code>fn withLineStyle(value)</code></li> <li><code>fn withLineStyleMixin(value)</code></li> <li><code>fn withLineWidth(value)</code></li> <li><code>fn withPointColor(value)</code></li> <li><code>fn withPointSize(value)</code></li> <li><code>fn withPointSymbol(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withShowPoints(value)</code></li> <li><code>fn withSpanNulls(value)</code></li> <li><code>fn withSpanNullsMixin(value)</code></li> <li><code>fn withStacking(value)</code></li> <li><code>fn withStackingMixin(value)</code></li> <li><code>fn withThresholdsStyle(value)</code></li> <li><code>fn withThresholdsStyleMixin(value)</code></li> <li><code>fn withTransform(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj lineStyle</code><ul> <li><code>fn withDash(value)</code></li> <li><code>fn withDashMixin(value)</code></li> <li><code>fn withFill(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj stacking</code><ul> <li><code>fn withGroup(value)</code></li> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj thresholdsStyle</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/timeSeries.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new timeSeries panel with a title.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithbaralignment","title":"fn fieldConfig.defaults.custom.withBarAlignment","text":"<pre><code>withBarAlignment(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are -1, 0, 1</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithbarmaxwidth","title":"fn fieldConfig.defaults.custom.withBarMaxWidth","text":"<pre><code>withBarMaxWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithbarwidthfactor","title":"fn fieldConfig.defaults.custom.withBarWidthFactor","text":"<pre><code>withBarWidthFactor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithdrawstyle","title":"fn fieldConfig.defaults.custom.withDrawStyle","text":"<pre><code>withDrawStyle(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"line\", \"bars\", \"points\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithfillbelowto","title":"fn fieldConfig.defaults.custom.withFillBelowTo","text":"<pre><code>withFillBelowTo(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithfillcolor","title":"fn fieldConfig.defaults.custom.withFillColor","text":"<pre><code>withFillColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"opacity\", \"hue\", \"scheme\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithlinecolor","title":"fn fieldConfig.defaults.custom.withLineColor","text":"<pre><code>withLineColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithlineinterpolation","title":"fn fieldConfig.defaults.custom.withLineInterpolation","text":"<pre><code>withLineInterpolation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"smooth\", \"stepBefore\", \"stepAfter\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithlinestyle","title":"fn fieldConfig.defaults.custom.withLineStyle","text":"<pre><code>withLineStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithlinestylemixin","title":"fn fieldConfig.defaults.custom.withLineStyleMixin","text":"<pre><code>withLineStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithpointcolor","title":"fn fieldConfig.defaults.custom.withPointColor","text":"<pre><code>withPointColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithpointsize","title":"fn fieldConfig.defaults.custom.withPointSize","text":"<pre><code>withPointSize(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithpointsymbol","title":"fn fieldConfig.defaults.custom.withPointSymbol","text":"<pre><code>withPointSymbol(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithshowpoints","title":"fn fieldConfig.defaults.custom.withShowPoints","text":"<pre><code>withShowPoints(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithspannulls","title":"fn fieldConfig.defaults.custom.withSpanNulls","text":"<pre><code>withSpanNulls(value)\n</code></pre> <p>Indicate if null values should be treated as gaps or connected. When the value is a number, it represents the maximum delta in the X axis that should be considered connected.  For timeseries, this is milliseconds</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithspannullsmixin","title":"fn fieldConfig.defaults.custom.withSpanNullsMixin","text":"<pre><code>withSpanNullsMixin(value)\n</code></pre> <p>Indicate if null values should be treated as gaps or connected. When the value is a number, it represents the maximum delta in the X axis that should be considered connected.  For timeseries, this is milliseconds</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithstacking","title":"fn fieldConfig.defaults.custom.withStacking","text":"<pre><code>withStacking(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithstackingmixin","title":"fn fieldConfig.defaults.custom.withStackingMixin","text":"<pre><code>withStackingMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwiththresholdsstyle","title":"fn fieldConfig.defaults.custom.withThresholdsStyle","text":"<pre><code>withThresholdsStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwiththresholdsstylemixin","title":"fn fieldConfig.defaults.custom.withThresholdsStyleMixin","text":"<pre><code>withThresholdsStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomwithtransform","title":"fn fieldConfig.defaults.custom.withTransform","text":"<pre><code>withTransform(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"constant\", \"negative-Y\"</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultscustomlinestyle","title":"obj fieldConfig.defaults.custom.lineStyle","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomlinestylewithdash","title":"# fn fieldConfig.defaults.custom.lineStyle.withDash","text":"<pre><code>withDash(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomlinestylewithdashmixin","title":"# fn fieldConfig.defaults.custom.lineStyle.withDashMixin","text":"<pre><code>withDashMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomlinestylewithfill","title":"# fn fieldConfig.defaults.custom.lineStyle.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"solid\", \"dash\", \"dot\", \"square\"</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultscustomstacking","title":"obj fieldConfig.defaults.custom.stacking","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomstackingwithgroup","title":"# fn fieldConfig.defaults.custom.stacking.withGroup","text":"<pre><code>withGroup(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomstackingwithmode","title":"# fn fieldConfig.defaults.custom.stacking.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"none\", \"normal\", \"percent\"</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultscustomthresholdsstyle","title":"obj fieldConfig.defaults.custom.thresholdsStyle","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultscustomthresholdsstylewithmode","title":"# fn fieldConfig.defaults.custom.thresholdsStyle.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"off\", \"line\", \"dashed\", \"area\", \"line+area\", \"dashed+area\", \"series\"</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/timeSeries.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/timeSeries.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/timeSeries.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/timeSeries.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html","title":"xyChart","text":"<p>grafonnet.panel.xyChart</p>"},{"location":"grafonnet/panel/xyChart.html#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value=\"h\")</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code><ul> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj fieldConfig</code><ul> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code><ul> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> </ul> </li> <li><code>obj mappings</code><ul> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code><ul> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj thresholds</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> <li><code>obj properties</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj gridPos</code><ul> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul> </li> <li><code>obj libraryPanel</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj links</code><ul> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj options</code><ul> <li><code>fn withDims(value)</code></li> <li><code>fn withDimsMixin(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withSeries(value)</code></li> <li><code>fn withSeriesMapping(value)</code></li> <li><code>fn withSeriesMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj dims</code><ul> <li><code>fn withExclude(value)</code></li> <li><code>fn withExcludeMixin(value)</code></li> <li><code>fn withFrame(value)</code></li> <li><code>fn withX(value)</code></li> </ul> </li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj series</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withLabelValue(value)</code></li> <li><code>fn withLabelValueMixin(value)</code></li> <li><code>fn withLineColor(value)</code></li> <li><code>fn withLineColorMixin(value)</code></li> <li><code>fn withLineStyle(value)</code></li> <li><code>fn withLineStyleMixin(value)</code></li> <li><code>fn withLineWidth(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withPointColor(value)</code></li> <li><code>fn withPointColorMixin(value)</code></li> <li><code>fn withPointSize(value)</code></li> <li><code>fn withPointSizeMixin(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withShow(value)</code></li> <li><code>fn withX(value)</code></li> <li><code>fn withY(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj labelValue</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj lineColor</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> </ul> </li> <li><code>obj lineStyle</code><ul> <li><code>fn withDash(value)</code></li> <li><code>fn withDashMixin(value)</code></li> <li><code>fn withFill(value)</code></li> </ul> </li> <li><code>obj pointColor</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> </ul> </li> <li><code>obj pointSize</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> </ul> </li> <li><code>obj transformations</code><ul> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value=\"\")</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/panel/xyChart.html#fields","title":"Fields","text":""},{"location":"grafonnet/panel/xyChart.html#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new xyChart panel with a title.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value=\"h\")\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are \"h\", \"v\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/xyChart.html#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"min\", \"max\", \"last\"</p>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"true\", \"false\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"absolute\", \"percentage\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/xyChart.html#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/xyChart.html#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/xyChart.html#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/xyChart.html#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/xyChart.html#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/xyChart.html#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/xyChart.html#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/xyChart.html#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"link\", \"dashboards\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionswithdims","title":"fn options.withDims","text":"<pre><code>withDims(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithdimsmixin","title":"fn options.withDimsMixin","text":"<pre><code>withDimsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithseries","title":"fn options.withSeries","text":"<pre><code>withSeries(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithseriesmapping","title":"fn options.withSeriesMapping","text":"<pre><code>withSeriesMapping(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"auto\", \"manual\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithseriesmixin","title":"fn options.withSeriesMixin","text":"<pre><code>withSeriesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsdims","title":"obj options.dims","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsdimswithexclude","title":"fn options.dims.withExclude","text":"<pre><code>withExclude(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsdimswithexcludemixin","title":"fn options.dims.withExcludeMixin","text":"<pre><code>withExcludeMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsdimswithframe","title":"fn options.dims.withFrame","text":"<pre><code>withFrame(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsdimswithx","title":"fn options.dims.withX","text":"<pre><code>withX(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are \"list\", \"table\", \"hidden\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"bottom\", \"right\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsseries","title":"obj options.series","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxiscenteredzero","title":"fn options.series.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxiscolormode","title":"fn options.series.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"text\", \"series\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxisgridshow","title":"fn options.series.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxislabel","title":"fn options.series.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxisplacement","title":"fn options.series.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"top\", \"right\", \"bottom\", \"left\", \"hidden\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxissoftmax","title":"fn options.series.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxissoftmin","title":"fn options.series.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithaxiswidth","title":"fn options.series.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithhidefrom","title":"fn options.series.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithhidefrommixin","title":"fn options.series.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlabel","title":"fn options.series.withLabel","text":"<pre><code>withLabel(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"auto\", \"never\", \"always\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlabelvalue","title":"fn options.series.withLabelValue","text":"<pre><code>withLabelValue(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlabelvaluemixin","title":"fn options.series.withLabelValueMixin","text":"<pre><code>withLabelValueMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlinecolor","title":"fn options.series.withLineColor","text":"<pre><code>withLineColor(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlinecolormixin","title":"fn options.series.withLineColorMixin","text":"<pre><code>withLineColorMixin(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlinestyle","title":"fn options.series.withLineStyle","text":"<pre><code>withLineStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlinestylemixin","title":"fn options.series.withLineStyleMixin","text":"<pre><code>withLineStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithlinewidth","title":"fn options.series.withLineWidth","text":"<pre><code>withLineWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithname","title":"fn options.series.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithpointcolor","title":"fn options.series.withPointColor","text":"<pre><code>withPointColor(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithpointcolormixin","title":"fn options.series.withPointColorMixin","text":"<pre><code>withPointColorMixin(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithpointsize","title":"fn options.series.withPointSize","text":"<pre><code>withPointSize(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithpointsizemixin","title":"fn options.series.withPointSizeMixin","text":"<pre><code>withPointSizeMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithscaledistribution","title":"fn options.series.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithscaledistributionmixin","title":"fn options.series.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithshow","title":"fn options.series.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"points\", \"lines\", \"points+lines\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithx","title":"fn options.series.withX","text":"<pre><code>withX(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieswithy","title":"fn options.series.withY","text":"<pre><code>withY(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsserieshidefrom","title":"obj options.series.hideFrom","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieshidefromwithlegend","title":"fn options.series.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieshidefromwithtooltip","title":"fn options.series.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieshidefromwithviz","title":"fn options.series.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsserieslabelvalue","title":"obj options.series.labelValue","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslabelvaluewithfield","title":"fn options.series.labelValue.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslabelvaluewithfixed","title":"fn options.series.labelValue.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslabelvaluewithfixedmixin","title":"fn options.series.labelValue.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslabelvaluewithmode","title":"fn options.series.labelValue.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"fixed\", \"field\", \"template\"</p>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsserieslinecolor","title":"obj options.series.lineColor","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslinecolorwithfield","title":"fn options.series.lineColor.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslinecolorwithfixed","title":"fn options.series.lineColor.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslinecolorwithfixedmixin","title":"fn options.series.lineColor.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsserieslinestyle","title":"obj options.series.lineStyle","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslinestylewithdash","title":"fn options.series.lineStyle.withDash","text":"<pre><code>withDash(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslinestylewithdashmixin","title":"fn options.series.lineStyle.withDashMixin","text":"<pre><code>withDashMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsserieslinestylewithfill","title":"fn options.series.lineStyle.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"solid\", \"dash\", \"dot\", \"square\"</p>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsseriespointcolor","title":"obj options.series.pointColor","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointcolorwithfield","title":"fn options.series.pointColor.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointcolorwithfixed","title":"fn options.series.pointColor.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointcolorwithfixedmixin","title":"fn options.series.pointColor.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsseriespointsize","title":"obj options.series.pointSize","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointsizewithfield","title":"fn options.series.pointSize.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointsizewithfixed","title":"fn options.series.pointSize.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointsizewithfixedmixin","title":"fn options.series.pointSize.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointsizewithmax","title":"fn options.series.pointSize.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriespointsizewithmin","title":"fn options.series.pointSize.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#obj-optionsseriesscaledistribution","title":"obj options.series.scaleDistribution","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriesscaledistributionwithlinearthreshold","title":"fn options.series.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriesscaledistributionwithlog","title":"fn options.series.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-optionsseriesscaledistributionwithtype","title":"fn options.series.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"linear\", \"log\", \"ordinal\", \"symlog\"</p>"},{"location":"grafonnet/panel/xyChart.html#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/xyChart.html#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"single\", \"multi\", \"none\"</p>"},{"location":"grafonnet/panel/xyChart.html#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are \"asc\", \"desc\", \"none\"</p>"},{"location":"grafonnet/panel/xyChart.html#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/xyChart.html#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/xyChart.html#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/xyChart.html#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/xyChart.html#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/xyChart.html#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value=\"\")\n</code></pre>"},{"location":"grafonnet/panel/xyChart.html#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/query/index.html","title":"grafonnet.query","text":"<ul> <li>azureMonitor</li> <li>cloudWatch</li> <li>elasticsearch</li> <li>loki</li> <li>parca</li> <li>phlare</li> <li>prometheus</li> <li>tempo</li> <li>testData</li> </ul>"},{"location":"grafonnet/query/azureMonitor.html","title":"azureMonitor","text":"<p>grafonnet.query.azureMonitor</p>"},{"location":"grafonnet/query/azureMonitor.html#index","title":"Index","text":"<ul> <li><code>fn withAzureLogAnalytics(value)</code></li> <li><code>fn withAzureLogAnalyticsMixin(value)</code></li> <li><code>fn withAzureMonitor(value)</code></li> <li><code>fn withAzureMonitorMixin(value)</code></li> <li><code>fn withAzureResourceGraph(value)</code></li> <li><code>fn withAzureResourceGraphMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withGrafanaTemplateVariableFn(value)</code></li> <li><code>fn withGrafanaTemplateVariableFnMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withNamespace(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withResource(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withSubscription(value)</code></li> <li><code>fn withSubscriptions(value)</code></li> <li><code>fn withSubscriptionsMixin(value)</code></li> <li><code>obj azureLogAnalytics</code><ul> <li><code>fn withQuery(value)</code></li> <li><code>fn withResource(value)</code></li> <li><code>fn withResources(value)</code></li> <li><code>fn withResourcesMixin(value)</code></li> <li><code>fn withResultFormat(value)</code></li> <li><code>fn withWorkspace(value)</code></li> </ul> </li> <li><code>obj azureMonitor</code><ul> <li><code>fn withAggregation(value)</code></li> <li><code>fn withAlias(value)</code></li> <li><code>fn withAllowedTimeGrainsMs(value)</code></li> <li><code>fn withAllowedTimeGrainsMsMixin(value)</code></li> <li><code>fn withCustomNamespace(value)</code></li> <li><code>fn withDimension(value)</code></li> <li><code>fn withDimensionFilter(value)</code></li> <li><code>fn withDimensionFilters(value)</code></li> <li><code>fn withDimensionFiltersMixin(value)</code></li> <li><code>fn withMetricDefinition(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withResourceUri(value)</code></li> <li><code>fn withResources(value)</code></li> <li><code>fn withResourcesMixin(value)</code></li> <li><code>fn withTimeGrain(value)</code></li> <li><code>fn withTimeGrainUnit(value)</code></li> <li><code>fn withTop(value)</code></li> <li><code>obj dimensionFilters</code><ul> <li><code>fn withDimension(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>fn withOperator(value)</code></li> </ul> </li> <li><code>obj resources</code><ul> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> </ul> </li> <li><code>obj azureResourceGraph</code><ul> <li><code>fn withQuery(value)</code></li> <li><code>fn withResultFormat(value)</code></li> </ul> </li> <li><code>obj grafanaTemplateVariableFn</code><ul> <li><code>fn withAppInsightsGroupByQuery(value)</code></li> <li><code>fn withAppInsightsGroupByQueryMixin(value)</code></li> <li><code>fn withAppInsightsMetricNameQuery(value)</code></li> <li><code>fn withAppInsightsMetricNameQueryMixin(value)</code></li> <li><code>fn withMetricDefinitionsQuery(value)</code></li> <li><code>fn withMetricDefinitionsQueryMixin(value)</code></li> <li><code>fn withMetricNamesQuery(value)</code></li> <li><code>fn withMetricNamesQueryMixin(value)</code></li> <li><code>fn withMetricNamespaceQuery(value)</code></li> <li><code>fn withMetricNamespaceQueryMixin(value)</code></li> <li><code>fn withResourceGroupsQuery(value)</code></li> <li><code>fn withResourceGroupsQueryMixin(value)</code></li> <li><code>fn withResourceNamesQuery(value)</code></li> <li><code>fn withResourceNamesQueryMixin(value)</code></li> <li><code>fn withSubscriptionsQuery(value)</code></li> <li><code>fn withSubscriptionsQueryMixin(value)</code></li> <li><code>fn withUnknownQuery(value)</code></li> <li><code>fn withUnknownQueryMixin(value)</code></li> <li><code>fn withWorkspacesQuery(value)</code></li> <li><code>fn withWorkspacesQueryMixin(value)</code></li> <li><code>obj AppInsightsGroupByQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj AppInsightsMetricNameQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj MetricDefinitionsQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj MetricNamesQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj MetricNamespaceQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withResourceName(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj ResourceGroupsQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj ResourceNamesQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withMetricNamespace(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withResourceGroup(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> <li><code>obj SubscriptionsQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj UnknownQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> </ul> </li> <li><code>obj WorkspacesQuery</code><ul> <li><code>fn withKind(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withSubscription(value)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/query/azureMonitor.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-withazureloganalytics","title":"fn withAzureLogAnalytics","text":"<pre><code>withAzureLogAnalytics(value)\n</code></pre> <p>Azure Monitor Logs sub-query properties</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withazureloganalyticsmixin","title":"fn withAzureLogAnalyticsMixin","text":"<pre><code>withAzureLogAnalyticsMixin(value)\n</code></pre> <p>Azure Monitor Logs sub-query properties</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withazuremonitor","title":"fn withAzureMonitor","text":"<pre><code>withAzureMonitor(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withazuremonitormixin","title":"fn withAzureMonitorMixin","text":"<pre><code>withAzureMonitorMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withazureresourcegraph","title":"fn withAzureResourceGraph","text":"<pre><code>withAzureResourceGraph(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withazureresourcegraphmixin","title":"fn withAzureResourceGraphMixin","text":"<pre><code>withAzureResourceGraphMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withgrafanatemplatevariablefn","title":"fn withGrafanaTemplateVariableFn","text":"<pre><code>withGrafanaTemplateVariableFn(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withgrafanatemplatevariablefnmixin","title":"fn withGrafanaTemplateVariableFnMixin","text":"<pre><code>withGrafanaTemplateVariableFnMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withnamespace","title":"fn withNamespace","text":"<pre><code>withNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withregion","title":"fn withRegion","text":"<pre><code>withRegion(value)\n</code></pre> <p>Azure Monitor query type. queryType: #AzureQueryType</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withresource","title":"fn withResource","text":"<pre><code>withResource(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-withresourcegroup","title":"fn withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre> <p>Template variables params. These exist for backwards compatiblity with legacy template variables.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withsubscription","title":"fn withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre> <p>Azure subscription containing the resource(s) to be queried.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withsubscriptions","title":"fn withSubscriptions","text":"<pre><code>withSubscriptions(value)\n</code></pre> <p>Subscriptions to be queried via Azure Resource Graph.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-withsubscriptionsmixin","title":"fn withSubscriptionsMixin","text":"<pre><code>withSubscriptionsMixin(value)\n</code></pre> <p>Subscriptions to be queried via Azure Resource Graph.</p>"},{"location":"grafonnet/query/azureMonitor.html#obj-azureloganalytics","title":"obj azureLogAnalytics","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-azureloganalyticswithquery","title":"fn azureLogAnalytics.withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>KQL query to be executed.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azureloganalyticswithresource","title":"fn azureLogAnalytics.withResource","text":"<pre><code>withResource(value)\n</code></pre> <p>@deprecated Use resources instead</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azureloganalyticswithresources","title":"fn azureLogAnalytics.withResources","text":"<pre><code>withResources(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azureloganalyticswithresourcesmixin","title":"fn azureLogAnalytics.withResourcesMixin","text":"<pre><code>withResourcesMixin(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azureloganalyticswithresultformat","title":"fn azureLogAnalytics.withResultFormat","text":"<pre><code>withResultFormat(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"table\", \"time_series\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azureloganalyticswithworkspace","title":"fn azureLogAnalytics.withWorkspace","text":"<pre><code>withWorkspace(value)\n</code></pre> <p>Workspace ID. This was removed in Grafana 8, but remains for backwards compat</p>"},{"location":"grafonnet/query/azureMonitor.html#obj-azuremonitor","title":"obj azureMonitor","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithaggregation","title":"fn azureMonitor.withAggregation","text":"<pre><code>withAggregation(value)\n</code></pre> <p>The aggregation to be used within the query. Defaults to the primaryAggregationType defined by the metric.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithalias","title":"fn azureMonitor.withAlias","text":"<pre><code>withAlias(value)\n</code></pre> <p>Aliases can be set to modify the legend labels. e.g. {{ resourceGroup }}. See docs for more detail.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithallowedtimegrainsms","title":"fn azureMonitor.withAllowedTimeGrainsMs","text":"<pre><code>withAllowedTimeGrainsMs(value)\n</code></pre> <p>Time grains that are supported by the metric.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithallowedtimegrainsmsmixin","title":"fn azureMonitor.withAllowedTimeGrainsMsMixin","text":"<pre><code>withAllowedTimeGrainsMsMixin(value)\n</code></pre> <p>Time grains that are supported by the metric.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithcustomnamespace","title":"fn azureMonitor.withCustomNamespace","text":"<pre><code>withCustomNamespace(value)\n</code></pre> <p>Used as the value for the metricNamespace property when it's different from the resource namespace.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithdimension","title":"fn azureMonitor.withDimension","text":"<pre><code>withDimension(value)\n</code></pre> <p>@deprecated This property was migrated to dimensionFilters and should only be accessed in the migration</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithdimensionfilter","title":"fn azureMonitor.withDimensionFilter","text":"<pre><code>withDimensionFilter(value)\n</code></pre> <p>@deprecated This property was migrated to dimensionFilters and should only be accessed in the migration</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithdimensionfilters","title":"fn azureMonitor.withDimensionFilters","text":"<pre><code>withDimensionFilters(value)\n</code></pre> <p>Filters to reduce the set of data returned. Dimensions that can be filtered on are defined by the metric.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithdimensionfiltersmixin","title":"fn azureMonitor.withDimensionFiltersMixin","text":"<pre><code>withDimensionFiltersMixin(value)\n</code></pre> <p>Filters to reduce the set of data returned. Dimensions that can be filtered on are defined by the metric.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithmetricdefinition","title":"fn azureMonitor.withMetricDefinition","text":"<pre><code>withMetricDefinition(value)\n</code></pre> <p>@deprecated Use metricNamespace instead</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithmetricname","title":"fn azureMonitor.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre> <p>The metric to query data for within the specified metricNamespace. e.g. UsedCapacity</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithmetricnamespace","title":"fn azureMonitor.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre> <p>metricNamespace is used as the resource type (or resource namespace). It's usually equal to the target metric namespace. e.g. microsoft.storage/storageaccounts Kept the name of the variable as metricNamespace to avoid backward incompatibility issues.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithregion","title":"fn azureMonitor.withRegion","text":"<pre><code>withRegion(value)\n</code></pre> <p>The Azure region containing the resource(s).</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithresourcegroup","title":"fn azureMonitor.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre> <p>@deprecated Use resources instead</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithresourcename","title":"fn azureMonitor.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre> <p>@deprecated Use resources instead</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithresourceuri","title":"fn azureMonitor.withResourceUri","text":"<pre><code>withResourceUri(value)\n</code></pre> <p>@deprecated Use resourceGroup, resourceName and metricNamespace instead</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithresources","title":"fn azureMonitor.withResources","text":"<pre><code>withResources(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithresourcesmixin","title":"fn azureMonitor.withResourcesMixin","text":"<pre><code>withResourcesMixin(value)\n</code></pre> <p>Array of resource URIs to be queried.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithtimegrain","title":"fn azureMonitor.withTimeGrain","text":"<pre><code>withTimeGrain(value)\n</code></pre> <p>The granularity of data points to be queried. Defaults to auto.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithtimegrainunit","title":"fn azureMonitor.withTimeGrainUnit","text":"<pre><code>withTimeGrainUnit(value)\n</code></pre> <p>@deprecated</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorwithtop","title":"fn azureMonitor.withTop","text":"<pre><code>withTop(value)\n</code></pre> <p>Maximum number of records to return. Defaults to 10.</p>"},{"location":"grafonnet/query/azureMonitor.html#obj-azuremonitordimensionfilters","title":"obj azureMonitor.dimensionFilters","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitordimensionfilterswithdimension","title":"fn azureMonitor.dimensionFilters.withDimension","text":"<pre><code>withDimension(value)\n</code></pre> <p>Name of Dimension to be filtered on.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitordimensionfilterswithfilter","title":"fn azureMonitor.dimensionFilters.withFilter","text":"<pre><code>withFilter(value)\n</code></pre> <p>@deprecated filter is deprecated in favour of filters to support multiselect.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitordimensionfilterswithfilters","title":"fn azureMonitor.dimensionFilters.withFilters","text":"<pre><code>withFilters(value)\n</code></pre> <p>Values to match with the filter.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitordimensionfilterswithfiltersmixin","title":"fn azureMonitor.dimensionFilters.withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre> <p>Values to match with the filter.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitordimensionfilterswithoperator","title":"fn azureMonitor.dimensionFilters.withOperator","text":"<pre><code>withOperator(value)\n</code></pre> <p>String denoting the filter operation. Supports 'eq' - equals,'ne' - not equals, 'sw' - starts with. Note that some dimensions may not support all operators.</p>"},{"location":"grafonnet/query/azureMonitor.html#obj-azuremonitorresources","title":"obj azureMonitor.resources","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorresourceswithmetricnamespace","title":"fn azureMonitor.resources.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorresourceswithregion","title":"fn azureMonitor.resources.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorresourceswithresourcegroup","title":"fn azureMonitor.resources.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorresourceswithresourcename","title":"fn azureMonitor.resources.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-azuremonitorresourceswithsubscription","title":"fn azureMonitor.resources.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-azureresourcegraph","title":"obj azureResourceGraph","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-azureresourcegraphwithquery","title":"fn azureResourceGraph.withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>Azure Resource Graph KQL query to be executed.</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-azureresourcegraphwithresultformat","title":"fn azureResourceGraph.withResultFormat","text":"<pre><code>withResultFormat(value)\n</code></pre> <p>Specifies the format results should be returned as. Defaults to table.</p>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefn","title":"obj grafanaTemplateVariableFn","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsgroupbyquery","title":"fn grafanaTemplateVariableFn.withAppInsightsGroupByQuery","text":"<pre><code>withAppInsightsGroupByQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsgroupbyquerymixin","title":"fn grafanaTemplateVariableFn.withAppInsightsGroupByQueryMixin","text":"<pre><code>withAppInsightsGroupByQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsmetricnamequery","title":"fn grafanaTemplateVariableFn.withAppInsightsMetricNameQuery","text":"<pre><code>withAppInsightsMetricNameQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithappinsightsmetricnamequerymixin","title":"fn grafanaTemplateVariableFn.withAppInsightsMetricNameQueryMixin","text":"<pre><code>withAppInsightsMetricNameQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricdefinitionsquery","title":"fn grafanaTemplateVariableFn.withMetricDefinitionsQuery","text":"<pre><code>withMetricDefinitionsQuery(value)\n</code></pre> <p>@deprecated Use MetricNamespaceQuery instead</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricdefinitionsquerymixin","title":"fn grafanaTemplateVariableFn.withMetricDefinitionsQueryMixin","text":"<pre><code>withMetricDefinitionsQueryMixin(value)\n</code></pre> <p>@deprecated Use MetricNamespaceQuery instead</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamesquery","title":"fn grafanaTemplateVariableFn.withMetricNamesQuery","text":"<pre><code>withMetricNamesQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamesquerymixin","title":"fn grafanaTemplateVariableFn.withMetricNamesQueryMixin","text":"<pre><code>withMetricNamesQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamespacequery","title":"fn grafanaTemplateVariableFn.withMetricNamespaceQuery","text":"<pre><code>withMetricNamespaceQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithmetricnamespacequerymixin","title":"fn grafanaTemplateVariableFn.withMetricNamespaceQueryMixin","text":"<pre><code>withMetricNamespaceQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcegroupsquery","title":"fn grafanaTemplateVariableFn.withResourceGroupsQuery","text":"<pre><code>withResourceGroupsQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcegroupsquerymixin","title":"fn grafanaTemplateVariableFn.withResourceGroupsQueryMixin","text":"<pre><code>withResourceGroupsQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcenamesquery","title":"fn grafanaTemplateVariableFn.withResourceNamesQuery","text":"<pre><code>withResourceNamesQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithresourcenamesquerymixin","title":"fn grafanaTemplateVariableFn.withResourceNamesQueryMixin","text":"<pre><code>withResourceNamesQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithsubscriptionsquery","title":"fn grafanaTemplateVariableFn.withSubscriptionsQuery","text":"<pre><code>withSubscriptionsQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithsubscriptionsquerymixin","title":"fn grafanaTemplateVariableFn.withSubscriptionsQueryMixin","text":"<pre><code>withSubscriptionsQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithunknownquery","title":"fn grafanaTemplateVariableFn.withUnknownQuery","text":"<pre><code>withUnknownQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithunknownquerymixin","title":"fn grafanaTemplateVariableFn.withUnknownQueryMixin","text":"<pre><code>withUnknownQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithworkspacesquery","title":"fn grafanaTemplateVariableFn.withWorkspacesQuery","text":"<pre><code>withWorkspacesQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnwithworkspacesquerymixin","title":"fn grafanaTemplateVariableFn.withWorkspacesQueryMixin","text":"<pre><code>withWorkspacesQueryMixin(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnappinsightsgroupbyquery","title":"obj grafanaTemplateVariableFn.AppInsightsGroupByQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsgroupbyquerywithkind","title":"fn grafanaTemplateVariableFn.AppInsightsGroupByQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"AppInsightsGroupByQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsgroupbyquerywithmetricname","title":"fn grafanaTemplateVariableFn.AppInsightsGroupByQuery.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsgroupbyquerywithrawquery","title":"fn grafanaTemplateVariableFn.AppInsightsGroupByQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnappinsightsmetricnamequery","title":"obj grafanaTemplateVariableFn.AppInsightsMetricNameQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsmetricnamequerywithkind","title":"fn grafanaTemplateVariableFn.AppInsightsMetricNameQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"AppInsightsMetricNameQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnappinsightsmetricnamequerywithrawquery","title":"fn grafanaTemplateVariableFn.AppInsightsMetricNameQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnmetricdefinitionsquery","title":"obj grafanaTemplateVariableFn.MetricDefinitionsQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithkind","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"MetricDefinitionsQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithrawquery","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithresourcegroup","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithresourcename","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricdefinitionsquerywithsubscription","title":"fn grafanaTemplateVariableFn.MetricDefinitionsQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnmetricnamesquery","title":"obj grafanaTemplateVariableFn.MetricNamesQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithkind","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"MetricNamesQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithrawquery","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithresourcegroup","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithresourcename","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamesquerywithsubscription","title":"fn grafanaTemplateVariableFn.MetricNamesQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnmetricnamespacequery","title":"obj grafanaTemplateVariableFn.MetricNamespaceQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithkind","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"MetricNamespaceQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithrawquery","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithresourcegroup","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithresourcename","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withResourceName","text":"<pre><code>withResourceName(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnmetricnamespacequerywithsubscription","title":"fn grafanaTemplateVariableFn.MetricNamespaceQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnresourcegroupsquery","title":"obj grafanaTemplateVariableFn.ResourceGroupsQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcegroupsquerywithkind","title":"fn grafanaTemplateVariableFn.ResourceGroupsQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"ResourceGroupsQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcegroupsquerywithrawquery","title":"fn grafanaTemplateVariableFn.ResourceGroupsQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcegroupsquerywithsubscription","title":"fn grafanaTemplateVariableFn.ResourceGroupsQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnresourcenamesquery","title":"obj grafanaTemplateVariableFn.ResourceNamesQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithkind","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"ResourceNamesQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithmetricnamespace","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withMetricNamespace","text":"<pre><code>withMetricNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithrawquery","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithresourcegroup","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withResourceGroup","text":"<pre><code>withResourceGroup(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnresourcenamesquerywithsubscription","title":"fn grafanaTemplateVariableFn.ResourceNamesQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnsubscriptionsquery","title":"obj grafanaTemplateVariableFn.SubscriptionsQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnsubscriptionsquerywithkind","title":"fn grafanaTemplateVariableFn.SubscriptionsQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"SubscriptionsQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnsubscriptionsquerywithrawquery","title":"fn grafanaTemplateVariableFn.SubscriptionsQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnunknownquery","title":"obj grafanaTemplateVariableFn.UnknownQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnunknownquerywithkind","title":"fn grafanaTemplateVariableFn.UnknownQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"UnknownQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnunknownquerywithrawquery","title":"fn grafanaTemplateVariableFn.UnknownQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#obj-grafanatemplatevariablefnworkspacesquery","title":"obj grafanaTemplateVariableFn.WorkspacesQuery","text":""},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnworkspacesquerywithkind","title":"fn grafanaTemplateVariableFn.WorkspacesQuery.withKind","text":"<pre><code>withKind(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"WorkspacesQuery\"</p>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnworkspacesquerywithrawquery","title":"fn grafanaTemplateVariableFn.WorkspacesQuery.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre>"},{"location":"grafonnet/query/azureMonitor.html#fn-grafanatemplatevariablefnworkspacesquerywithsubscription","title":"fn grafanaTemplateVariableFn.WorkspacesQuery.withSubscription","text":"<pre><code>withSubscription(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html","title":"cloudWatch","text":"<p>grafonnet.query.cloudWatch</p>"},{"location":"grafonnet/query/cloudWatch.html#index","title":"Index","text":"<ul> <li><code>obj CloudWatchAnnotationQuery</code><ul> <li><code>fn withAccountId(value)</code></li> <li><code>fn withActionPrefix(value)</code></li> <li><code>fn withAlarmNamePrefix(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDimensions(value)</code></li> <li><code>fn withDimensionsMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withMatchExact(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withNamespace(value)</code></li> <li><code>fn withPeriod(value)</code></li> <li><code>fn withPrefixMatching(value)</code></li> <li><code>fn withQueryMode(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withStatistic(value)</code></li> <li><code>fn withStatistics(value)</code></li> <li><code>fn withStatisticsMixin(value)</code></li> </ul> </li> <li><code>obj CloudWatchLogsQuery</code><ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withExpression(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withLogGroupNames(value)</code></li> <li><code>fn withLogGroupNamesMixin(value)</code></li> <li><code>fn withLogGroups(value)</code></li> <li><code>fn withLogGroupsMixin(value)</code></li> <li><code>fn withQueryMode(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withStatsGroups(value)</code></li> <li><code>fn withStatsGroupsMixin(value)</code></li> <li><code>obj logGroups</code><ul> <li><code>fn withAccountId(value)</code></li> <li><code>fn withAccountLabel(value)</code></li> <li><code>fn withArn(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> </ul> </li> <li><code>obj CloudWatchMetricsQuery</code><ul> <li><code>fn withAccountId(value)</code></li> <li><code>fn withAlias(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDimensions(value)</code></li> <li><code>fn withDimensionsMixin(value)</code></li> <li><code>fn withExpression(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withMatchExact(value)</code></li> <li><code>fn withMetricEditorMode(value)</code></li> <li><code>fn withMetricName(value)</code></li> <li><code>fn withMetricQueryType(value)</code></li> <li><code>fn withNamespace(value)</code></li> <li><code>fn withPeriod(value)</code></li> <li><code>fn withQueryMode(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withRegion(value)</code></li> <li><code>fn withSql(value)</code></li> <li><code>fn withSqlExpression(value)</code></li> <li><code>fn withSqlMixin(value)</code></li> <li><code>fn withStatistic(value)</code></li> <li><code>fn withStatistics(value)</code></li> <li><code>fn withStatisticsMixin(value)</code></li> <li><code>obj sql</code><ul> <li><code>fn withFrom(value)</code></li> <li><code>fn withFromMixin(value)</code></li> <li><code>fn withGroupBy(value)</code></li> <li><code>fn withGroupByMixin(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withOrderBy(value)</code></li> <li><code>fn withOrderByDirection(value)</code></li> <li><code>fn withOrderByMixin(value)</code></li> <li><code>fn withSelect(value)</code></li> <li><code>fn withSelectMixin(value)</code></li> <li><code>fn withWhere(value)</code></li> <li><code>fn withWhereMixin(value)</code></li> <li><code>obj from</code><ul> <li><code>fn withQueryEditorFunctionExpression(value)</code></li> <li><code>fn withQueryEditorFunctionExpressionMixin(value)</code></li> <li><code>fn withQueryEditorPropertyExpression(value)</code></li> <li><code>fn withQueryEditorPropertyExpressionMixin(value)</code></li> <li><code>obj QueryEditorFunctionExpression</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withParameters(value)</code></li> <li><code>fn withParametersMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj parameters</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj QueryEditorPropertyExpression</code><ul> <li><code>fn withProperty(value)</code></li> <li><code>fn withPropertyMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj property</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj groupBy</code><ul> <li><code>fn withExpressions(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj orderBy</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withParameters(value)</code></li> <li><code>fn withParametersMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj parameters</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj select</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withParameters(value)</code></li> <li><code>fn withParametersMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj parameters</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj where</code><ul> <li><code>fn withExpressions(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/query/cloudWatch.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchannotationquery","title":"obj CloudWatchAnnotationQuery","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithaccountid","title":"fn CloudWatchAnnotationQuery.withAccountId","text":"<pre><code>withAccountId(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithactionprefix","title":"fn CloudWatchAnnotationQuery.withActionPrefix","text":"<pre><code>withActionPrefix(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithalarmnameprefix","title":"fn CloudWatchAnnotationQuery.withAlarmNamePrefix","text":"<pre><code>withAlarmNamePrefix(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithdatasource","title":"fn CloudWatchAnnotationQuery.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithdimensions","title":"fn CloudWatchAnnotationQuery.withDimensions","text":"<pre><code>withDimensions(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithdimensionsmixin","title":"fn CloudWatchAnnotationQuery.withDimensionsMixin","text":"<pre><code>withDimensionsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithhide","title":"fn CloudWatchAnnotationQuery.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithmatchexact","title":"fn CloudWatchAnnotationQuery.withMatchExact","text":"<pre><code>withMatchExact(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithmetricname","title":"fn CloudWatchAnnotationQuery.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithnamespace","title":"fn CloudWatchAnnotationQuery.withNamespace","text":"<pre><code>withNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithperiod","title":"fn CloudWatchAnnotationQuery.withPeriod","text":"<pre><code>withPeriod(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithprefixmatching","title":"fn CloudWatchAnnotationQuery.withPrefixMatching","text":"<pre><code>withPrefixMatching(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithquerymode","title":"fn CloudWatchAnnotationQuery.withQueryMode","text":"<pre><code>withQueryMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Metrics\", \"Logs\", \"Annotations\"</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithquerytype","title":"fn CloudWatchAnnotationQuery.withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithrefid","title":"fn CloudWatchAnnotationQuery.withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithregion","title":"fn CloudWatchAnnotationQuery.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithstatistic","title":"fn CloudWatchAnnotationQuery.withStatistic","text":"<pre><code>withStatistic(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithstatistics","title":"fn CloudWatchAnnotationQuery.withStatistics","text":"<pre><code>withStatistics(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchannotationquerywithstatisticsmixin","title":"fn CloudWatchAnnotationQuery.withStatisticsMixin","text":"<pre><code>withStatisticsMixin(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchlogsquery","title":"obj CloudWatchLogsQuery","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithdatasource","title":"fn CloudWatchLogsQuery.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithexpression","title":"fn CloudWatchLogsQuery.withExpression","text":"<pre><code>withExpression(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithhide","title":"fn CloudWatchLogsQuery.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithid","title":"fn CloudWatchLogsQuery.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroupnames","title":"fn CloudWatchLogsQuery.withLogGroupNames","text":"<pre><code>withLogGroupNames(value)\n</code></pre> <p>deprecated, use logGroups instead</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroupnamesmixin","title":"fn CloudWatchLogsQuery.withLogGroupNamesMixin","text":"<pre><code>withLogGroupNamesMixin(value)\n</code></pre> <p>deprecated, use logGroups instead</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroups","title":"fn CloudWatchLogsQuery.withLogGroups","text":"<pre><code>withLogGroups(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithloggroupsmixin","title":"fn CloudWatchLogsQuery.withLogGroupsMixin","text":"<pre><code>withLogGroupsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithquerymode","title":"fn CloudWatchLogsQuery.withQueryMode","text":"<pre><code>withQueryMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Metrics\", \"Logs\", \"Annotations\"</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithquerytype","title":"fn CloudWatchLogsQuery.withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithrefid","title":"fn CloudWatchLogsQuery.withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithregion","title":"fn CloudWatchLogsQuery.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithstatsgroups","title":"fn CloudWatchLogsQuery.withStatsGroups","text":"<pre><code>withStatsGroups(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsquerywithstatsgroupsmixin","title":"fn CloudWatchLogsQuery.withStatsGroupsMixin","text":"<pre><code>withStatsGroupsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchlogsqueryloggroups","title":"obj CloudWatchLogsQuery.logGroups","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswithaccountid","title":"fn CloudWatchLogsQuery.logGroups.withAccountId","text":"<pre><code>withAccountId(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswithaccountlabel","title":"fn CloudWatchLogsQuery.logGroups.withAccountLabel","text":"<pre><code>withAccountLabel(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswitharn","title":"fn CloudWatchLogsQuery.logGroups.withArn","text":"<pre><code>withArn(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchlogsqueryloggroupswithname","title":"fn CloudWatchLogsQuery.logGroups.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquery","title":"obj CloudWatchMetricsQuery","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithaccountid","title":"fn CloudWatchMetricsQuery.withAccountId","text":"<pre><code>withAccountId(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithalias","title":"fn CloudWatchMetricsQuery.withAlias","text":"<pre><code>withAlias(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithdatasource","title":"fn CloudWatchMetricsQuery.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithdimensions","title":"fn CloudWatchMetricsQuery.withDimensions","text":"<pre><code>withDimensions(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithdimensionsmixin","title":"fn CloudWatchMetricsQuery.withDimensionsMixin","text":"<pre><code>withDimensionsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithexpression","title":"fn CloudWatchMetricsQuery.withExpression","text":"<pre><code>withExpression(value)\n</code></pre> <p>Math expression query</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithhide","title":"fn CloudWatchMetricsQuery.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithid","title":"fn CloudWatchMetricsQuery.withId","text":"<pre><code>withId(value)\n</code></pre> <p>common props</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithlabel","title":"fn CloudWatchMetricsQuery.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmatchexact","title":"fn CloudWatchMetricsQuery.withMatchExact","text":"<pre><code>withMatchExact(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmetriceditormode","title":"fn CloudWatchMetricsQuery.withMetricEditorMode","text":"<pre><code>withMetricEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmetricname","title":"fn CloudWatchMetricsQuery.withMetricName","text":"<pre><code>withMetricName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithmetricquerytype","title":"fn CloudWatchMetricsQuery.withMetricQueryType","text":"<pre><code>withMetricQueryType(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithnamespace","title":"fn CloudWatchMetricsQuery.withNamespace","text":"<pre><code>withNamespace(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithperiod","title":"fn CloudWatchMetricsQuery.withPeriod","text":"<pre><code>withPeriod(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithquerymode","title":"fn CloudWatchMetricsQuery.withQueryMode","text":"<pre><code>withQueryMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"Metrics\", \"Logs\", \"Annotations\"</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithquerytype","title":"fn CloudWatchMetricsQuery.withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithrefid","title":"fn CloudWatchMetricsQuery.withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithregion","title":"fn CloudWatchMetricsQuery.withRegion","text":"<pre><code>withRegion(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithsql","title":"fn CloudWatchMetricsQuery.withSql","text":"<pre><code>withSql(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithsqlexpression","title":"fn CloudWatchMetricsQuery.withSqlExpression","text":"<pre><code>withSqlExpression(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithsqlmixin","title":"fn CloudWatchMetricsQuery.withSqlMixin","text":"<pre><code>withSqlMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithstatistic","title":"fn CloudWatchMetricsQuery.withStatistic","text":"<pre><code>withStatistic(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithstatistics","title":"fn CloudWatchMetricsQuery.withStatistics","text":"<pre><code>withStatistics(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerywithstatisticsmixin","title":"fn CloudWatchMetricsQuery.withStatisticsMixin","text":"<pre><code>withStatisticsMixin(value)\n</code></pre> <p>@deprecated use statistic</p>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysql","title":"obj CloudWatchMetricsQuery.sql","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithfrom","title":"fn CloudWatchMetricsQuery.sql.withFrom","text":"<pre><code>withFrom(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithfrommixin","title":"fn CloudWatchMetricsQuery.sql.withFromMixin","text":"<pre><code>withFromMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithgroupby","title":"fn CloudWatchMetricsQuery.sql.withGroupBy","text":"<pre><code>withGroupBy(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithgroupbymixin","title":"fn CloudWatchMetricsQuery.sql.withGroupByMixin","text":"<pre><code>withGroupByMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithlimit","title":"fn CloudWatchMetricsQuery.sql.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithorderby","title":"fn CloudWatchMetricsQuery.sql.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithorderbydirection","title":"fn CloudWatchMetricsQuery.sql.withOrderByDirection","text":"<pre><code>withOrderByDirection(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithorderbymixin","title":"fn CloudWatchMetricsQuery.sql.withOrderByMixin","text":"<pre><code>withOrderByMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithselect","title":"fn CloudWatchMetricsQuery.sql.withSelect","text":"<pre><code>withSelect(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithselectmixin","title":"fn CloudWatchMetricsQuery.sql.withSelectMixin","text":"<pre><code>withSelectMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithwhere","title":"fn CloudWatchMetricsQuery.sql.withWhere","text":"<pre><code>withWhere(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwithwheremixin","title":"fn CloudWatchMetricsQuery.sql.withWhereMixin","text":"<pre><code>withWhereMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfrom","title":"obj CloudWatchMetricsQuery.sql.from","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorfunctionexpression","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorFunctionExpression","text":"<pre><code>withQueryEditorFunctionExpression(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorfunctionexpressionmixin","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorFunctionExpressionMixin","text":"<pre><code>withQueryEditorFunctionExpressionMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorpropertyexpression","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorPropertyExpression","text":"<pre><code>withQueryEditorPropertyExpression(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromwithqueryeditorpropertyexpressionmixin","title":"fn CloudWatchMetricsQuery.sql.from.withQueryEditorPropertyExpressionMixin","text":"<pre><code>withQueryEditorPropertyExpressionMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpression","title":"obj CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithname","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithparameters","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withParameters","text":"<pre><code>withParameters(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithparametersmixin","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withParametersMixin","text":"<pre><code>withParametersMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionwithtype","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionparameters","title":"# obj CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.parameters","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionparameterswithname","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.parameters.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorfunctionexpressionparameterswithtype","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorFunctionExpression.parameters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpression","title":"obj CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionwithproperty","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.withProperty","text":"<pre><code>withProperty(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionwithpropertymixin","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.withPropertyMixin","text":"<pre><code>withPropertyMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionwithtype","title":"# fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionproperty","title":"# obj CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.property","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionpropertywithname","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.property.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlfromqueryeditorpropertyexpressionpropertywithtype","title":"## fn CloudWatchMetricsQuery.sql.from.QueryEditorPropertyExpression.property.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"string\"</p>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlgroupby","title":"obj CloudWatchMetricsQuery.sql.groupBy","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlgroupbywithexpressions","title":"fn CloudWatchMetricsQuery.sql.groupBy.withExpressions","text":"<pre><code>withExpressions(value)\n</code></pre> <p>TS type expressions: QueryEditorExpression[] | QueryEditorArrayExpression[], extended in veneer</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlgroupbywithtype","title":"fn CloudWatchMetricsQuery.sql.groupBy.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO this doesn't work; temporarily extended in veneer</p> <p>Accepted values for <code>value</code> are \"and\", \"or\"</p>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlorderby","title":"obj CloudWatchMetricsQuery.sql.orderBy","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithname","title":"fn CloudWatchMetricsQuery.sql.orderBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithparameters","title":"fn CloudWatchMetricsQuery.sql.orderBy.withParameters","text":"<pre><code>withParameters(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithparametersmixin","title":"fn CloudWatchMetricsQuery.sql.orderBy.withParametersMixin","text":"<pre><code>withParametersMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbywithtype","title":"fn CloudWatchMetricsQuery.sql.orderBy.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlorderbyparameters","title":"obj CloudWatchMetricsQuery.sql.orderBy.parameters","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbyparameterswithname","title":"# fn CloudWatchMetricsQuery.sql.orderBy.parameters.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlorderbyparameterswithtype","title":"# fn CloudWatchMetricsQuery.sql.orderBy.parameters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlselect","title":"obj CloudWatchMetricsQuery.sql.select","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithname","title":"fn CloudWatchMetricsQuery.sql.select.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithparameters","title":"fn CloudWatchMetricsQuery.sql.select.withParameters","text":"<pre><code>withParameters(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithparametersmixin","title":"fn CloudWatchMetricsQuery.sql.select.withParametersMixin","text":"<pre><code>withParametersMixin(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectwithtype","title":"fn CloudWatchMetricsQuery.sql.select.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlselectparameters","title":"obj CloudWatchMetricsQuery.sql.select.parameters","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectparameterswithname","title":"# fn CloudWatchMetricsQuery.sql.select.parameters.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlselectparameterswithtype","title":"# fn CloudWatchMetricsQuery.sql.select.parameters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/cloudWatch.html#obj-cloudwatchmetricsquerysqlwhere","title":"obj CloudWatchMetricsQuery.sql.where","text":""},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwherewithexpressions","title":"fn CloudWatchMetricsQuery.sql.where.withExpressions","text":"<pre><code>withExpressions(value)\n</code></pre> <p>TS type expressions: QueryEditorExpression[] | QueryEditorArrayExpression[], extended in veneer</p>"},{"location":"grafonnet/query/cloudWatch.html#fn-cloudwatchmetricsquerysqlwherewithtype","title":"fn CloudWatchMetricsQuery.sql.where.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO this doesn't work; temporarily extended in veneer</p> <p>Accepted values for <code>value</code> are \"and\", \"or\"</p>"},{"location":"grafonnet/query/elasticsearch.html","title":"elasticsearch","text":"<p>grafonnet.query.elasticsearch</p>"},{"location":"grafonnet/query/elasticsearch.html#index","title":"Index","text":"<ul> <li><code>fn withAlias(value)</code></li> <li><code>fn withBucketAggs(value)</code></li> <li><code>fn withBucketAggsMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withMetrics(value)</code></li> <li><code>fn withMetricsMixin(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withTimeField(value)</code></li> <li><code>obj bucketAggs</code><ul> <li><code>obj DateHistogram</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withInterval(value)</code></li> <li><code>fn withMinDocCount(value)</code></li> <li><code>fn withOffset(value)</code></li> <li><code>fn withTimeZone(value)</code></li> <li><code>fn withTrimEdges(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Filters</code><ul> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>obj filters</code><ul> <li><code>fn withLabel(value)</code></li> <li><code>fn withQuery(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj GeoHashGrid</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withPrecision(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Histogram</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withInterval(value)</code></li> <li><code>fn withMinDocCount(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Nested</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj Terms</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMinDocCount(value)</code></li> <li><code>fn withMissing(value)</code></li> <li><code>fn withOrder(value)</code></li> <li><code>fn withOrderBy(value)</code></li> <li><code>fn withSize(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj metrics</code><ul> <li><code>obj Count</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj MetricAggregationWithSettings</code><ul> <li><code>obj Average</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj BucketScript</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineVariables(value)</code></li> <li><code>fn withPipelineVariablesMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj pipelineVariables</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> </ul> </li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj CumulativeSum</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFormat(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Derivative</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ExtendedStats</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withMeta(value)</code></li> <li><code>fn withMetaMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>fn withSigma(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Logs</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withLimit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Max</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Min</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj MovingAverage</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj MovingFunction</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>fn withShift(value)</code></li> <li><code>fn withWindow(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Percentiles</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withPercents(value)</code></li> <li><code>fn withPercentsMixin(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj Rate</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RawData</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RawDocument</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withSize(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SerialDiff</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withLag(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Sum</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj TopMetrics</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMetrics(value)</code></li> <li><code>fn withMetricsMixin(value)</code></li> <li><code>fn withOrder(value)</code></li> <li><code>fn withOrderBy(value)</code></li> </ul> </li> </ul> </li> <li><code>obj UniqueCount</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withPrecisionThreshold(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj PipelineMetricAggregation</code><ul> <li><code>obj BucketScript</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineVariables(value)</code></li> <li><code>fn withPipelineVariablesMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj pipelineVariables</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> </ul> </li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code><ul> <li><code>fn withInline(value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj CumulativeSum</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFormat(value)</code></li> </ul> </li> </ul> </li> <li><code>obj Derivative</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withUnit(value)</code></li> </ul> </li> </ul> </li> <li><code>obj MovingAverage</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"grafonnet/query/elasticsearch.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-withalias","title":"fn withAlias","text":"<pre><code>withAlias(value)\n</code></pre> <p>Alias pattern</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withbucketaggs","title":"fn withBucketAggs","text":"<pre><code>withBucketAggs(value)\n</code></pre> <p>List of bucket aggregations</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withbucketaggsmixin","title":"fn withBucketAggsMixin","text":"<pre><code>withBucketAggsMixin(value)\n</code></pre> <p>List of bucket aggregations</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withmetrics","title":"fn withMetrics","text":"<pre><code>withMetrics(value)\n</code></pre> <p>List of metric aggregations</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withmetricsmixin","title":"fn withMetricsMixin","text":"<pre><code>withMetricsMixin(value)\n</code></pre> <p>List of metric aggregations</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withquery","title":"fn withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>Lucene query</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-withtimefield","title":"fn withTimeField","text":"<pre><code>withTimeField(value)\n</code></pre> <p>Name of time field</p>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggs","title":"obj bucketAggs","text":""},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsdatehistogram","title":"obj bucketAggs.DateHistogram","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramwithfield","title":"fn bucketAggs.DateHistogram.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramwithid","title":"fn bucketAggs.DateHistogram.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramwithsettings","title":"fn bucketAggs.DateHistogram.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramwithsettingsmixin","title":"fn bucketAggs.DateHistogram.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramwithtype","title":"fn bucketAggs.DateHistogram.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsdatehistogramsettings","title":"obj bucketAggs.DateHistogram.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithinterval","title":"fn bucketAggs.DateHistogram.settings.withInterval","text":"<pre><code>withInterval(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithmindoccount","title":"fn bucketAggs.DateHistogram.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithoffset","title":"fn bucketAggs.DateHistogram.settings.withOffset","text":"<pre><code>withOffset(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithtimezone","title":"fn bucketAggs.DateHistogram.settings.withTimeZone","text":"<pre><code>withTimeZone(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsdatehistogramsettingswithtrimedges","title":"fn bucketAggs.DateHistogram.settings.withTrimEdges","text":"<pre><code>withTrimEdges(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsfilters","title":"obj bucketAggs.Filters","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterswithid","title":"fn bucketAggs.Filters.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterswithsettings","title":"fn bucketAggs.Filters.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterswithsettingsmixin","title":"fn bucketAggs.Filters.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterswithtype","title":"fn bucketAggs.Filters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsfilterssettings","title":"obj bucketAggs.Filters.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterssettingswithfilters","title":"fn bucketAggs.Filters.settings.withFilters","text":"<pre><code>withFilters(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterssettingswithfiltersmixin","title":"fn bucketAggs.Filters.settings.withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsfilterssettingsfilters","title":"obj bucketAggs.Filters.settings.filters","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterssettingsfilterswithlabel","title":"# fn bucketAggs.Filters.settings.filters.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsfilterssettingsfilterswithquery","title":"# fn bucketAggs.Filters.settings.filters.withQuery","text":"<pre><code>withQuery(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsgeohashgrid","title":"obj bucketAggs.GeoHashGrid","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsgeohashgridwithfield","title":"fn bucketAggs.GeoHashGrid.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsgeohashgridwithid","title":"fn bucketAggs.GeoHashGrid.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsgeohashgridwithsettings","title":"fn bucketAggs.GeoHashGrid.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsgeohashgridwithsettingsmixin","title":"fn bucketAggs.GeoHashGrid.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsgeohashgridwithtype","title":"fn bucketAggs.GeoHashGrid.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsgeohashgridsettings","title":"obj bucketAggs.GeoHashGrid.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsgeohashgridsettingswithprecision","title":"fn bucketAggs.GeoHashGrid.settings.withPrecision","text":"<pre><code>withPrecision(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggshistogram","title":"obj bucketAggs.Histogram","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggshistogramwithfield","title":"fn bucketAggs.Histogram.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggshistogramwithid","title":"fn bucketAggs.Histogram.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggshistogramwithsettings","title":"fn bucketAggs.Histogram.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggshistogramwithsettingsmixin","title":"fn bucketAggs.Histogram.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggshistogramwithtype","title":"fn bucketAggs.Histogram.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggshistogramsettings","title":"obj bucketAggs.Histogram.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggshistogramsettingswithinterval","title":"fn bucketAggs.Histogram.settings.withInterval","text":"<pre><code>withInterval(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggshistogramsettingswithmindoccount","title":"fn bucketAggs.Histogram.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsnested","title":"obj bucketAggs.Nested","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsnestedwithfield","title":"fn bucketAggs.Nested.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsnestedwithid","title":"fn bucketAggs.Nested.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsnestedwithsettings","title":"fn bucketAggs.Nested.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsnestedwithsettingsmixin","title":"fn bucketAggs.Nested.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggsnestedwithtype","title":"fn bucketAggs.Nested.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggsterms","title":"obj bucketAggs.Terms","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermswithfield","title":"fn bucketAggs.Terms.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermswithid","title":"fn bucketAggs.Terms.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermswithsettings","title":"fn bucketAggs.Terms.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermswithsettingsmixin","title":"fn bucketAggs.Terms.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermswithtype","title":"fn bucketAggs.Terms.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-bucketaggstermssettings","title":"obj bucketAggs.Terms.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermssettingswithmindoccount","title":"fn bucketAggs.Terms.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermssettingswithmissing","title":"fn bucketAggs.Terms.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermssettingswithorder","title":"fn bucketAggs.Terms.settings.withOrder","text":"<pre><code>withOrder(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"desc\", \"asc\"</p>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermssettingswithorderby","title":"fn bucketAggs.Terms.settings.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-bucketaggstermssettingswithsize","title":"fn bucketAggs.Terms.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metrics","title":"obj metrics","text":""},{"location":"grafonnet/query/elasticsearch.html#obj-metricscount","title":"obj metrics.Count","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricscountwithhide","title":"fn metrics.Count.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricscountwithid","title":"fn metrics.Count.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricscountwithtype","title":"fn metrics.Count.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettings","title":"obj metrics.MetricAggregationWithSettings","text":""},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsaverage","title":"obj metrics.MetricAggregationWithSettings.Average","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithfield","title":"fn metrics.MetricAggregationWithSettings.Average.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithhide","title":"fn metrics.MetricAggregationWithSettings.Average.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithid","title":"fn metrics.MetricAggregationWithSettings.Average.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithsettings","title":"fn metrics.MetricAggregationWithSettings.Average.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Average.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragewithtype","title":"fn metrics.MetricAggregationWithSettings.Average.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsaveragesettings","title":"obj metrics.MetricAggregationWithSettings.Average.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsaveragesettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Average.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsaveragesettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Average.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscript","title":"obj metrics.MetricAggregationWithSettings.BucketScript","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithhide","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithid","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithpipelinevariables","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withPipelineVariables","text":"<pre><code>withPipelineVariables(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithpipelinevariablesmixin","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withPipelineVariablesMixin","text":"<pre><code>withPipelineVariablesMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithsettings","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptwithtype","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscriptpipelinevariables","title":"obj metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptpipelinevariableswithname","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptpipelinevariableswithpipelineagg","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscriptsettings","title":"obj metrics.MetricAggregationWithSettings.BucketScript.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsbucketscriptsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.BucketScript.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsbucketscriptsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.BucketScript.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingscumulativesum","title":"obj metrics.MetricAggregationWithSettings.CumulativeSum","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithfield","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithhide","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithid","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithsettings","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumwithtype","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingscumulativesumsettings","title":"obj metrics.MetricAggregationWithSettings.CumulativeSum.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingscumulativesumsettingswithformat","title":"# fn metrics.MetricAggregationWithSettings.CumulativeSum.settings.withFormat","text":"<pre><code>withFormat(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsderivative","title":"obj metrics.MetricAggregationWithSettings.Derivative","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithfield","title":"fn metrics.MetricAggregationWithSettings.Derivative.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithhide","title":"fn metrics.MetricAggregationWithSettings.Derivative.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithid","title":"fn metrics.MetricAggregationWithSettings.Derivative.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.Derivative.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithsettings","title":"fn metrics.MetricAggregationWithSettings.Derivative.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Derivative.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativewithtype","title":"fn metrics.MetricAggregationWithSettings.Derivative.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsderivativesettings","title":"obj metrics.MetricAggregationWithSettings.Derivative.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsderivativesettingswithunit","title":"# fn metrics.MetricAggregationWithSettings.Derivative.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsextendedstats","title":"obj metrics.MetricAggregationWithSettings.ExtendedStats","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithfield","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithhide","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithid","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithmeta","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withMeta","text":"<pre><code>withMeta(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithmetamixin","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withMetaMixin","text":"<pre><code>withMetaMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithsettings","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatswithtype","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsextendedstatssettings","title":"obj metrics.MetricAggregationWithSettings.ExtendedStats.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithsigma","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withSigma","text":"<pre><code>withSigma(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsextendedstatssettingsscript","title":"# obj metrics.MetricAggregationWithSettings.ExtendedStats.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsextendedstatssettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingslogs","title":"obj metrics.MetricAggregationWithSettings.Logs","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithhide","title":"fn metrics.MetricAggregationWithSettings.Logs.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithid","title":"fn metrics.MetricAggregationWithSettings.Logs.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithsettings","title":"fn metrics.MetricAggregationWithSettings.Logs.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Logs.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogswithtype","title":"fn metrics.MetricAggregationWithSettings.Logs.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingslogssettings","title":"obj metrics.MetricAggregationWithSettings.Logs.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingslogssettingswithlimit","title":"# fn metrics.MetricAggregationWithSettings.Logs.settings.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmax","title":"obj metrics.MetricAggregationWithSettings.Max","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithfield","title":"fn metrics.MetricAggregationWithSettings.Max.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithhide","title":"fn metrics.MetricAggregationWithSettings.Max.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithid","title":"fn metrics.MetricAggregationWithSettings.Max.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithsettings","title":"fn metrics.MetricAggregationWithSettings.Max.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Max.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxwithtype","title":"fn metrics.MetricAggregationWithSettings.Max.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmaxsettings","title":"obj metrics.MetricAggregationWithSettings.Max.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmaxsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Max.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmaxsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Max.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmin","title":"obj metrics.MetricAggregationWithSettings.Min","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithfield","title":"fn metrics.MetricAggregationWithSettings.Min.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithhide","title":"fn metrics.MetricAggregationWithSettings.Min.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithid","title":"fn metrics.MetricAggregationWithSettings.Min.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithsettings","title":"fn metrics.MetricAggregationWithSettings.Min.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Min.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminwithtype","title":"fn metrics.MetricAggregationWithSettings.Min.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsminsettings","title":"obj metrics.MetricAggregationWithSettings.Min.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsminsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Min.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsminsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Min.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingaverage","title":"obj metrics.MetricAggregationWithSettings.MovingAverage","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithfield","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithhide","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithid","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithsettings","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingaveragewithtype","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingfunction","title":"obj metrics.MetricAggregationWithSettings.MovingFunction","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithfield","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithhide","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithid","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithsettings","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionwithtype","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingfunctionsettings","title":"obj metrics.MetricAggregationWithSettings.MovingFunction.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithshift","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withShift","text":"<pre><code>withShift(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithwindow","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withWindow","text":"<pre><code>withWindow(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsmovingfunctionsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.MovingFunction.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.MovingFunction.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingspercentiles","title":"obj metrics.MetricAggregationWithSettings.Percentiles","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithfield","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithhide","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithid","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithsettings","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentileswithtype","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingspercentilessettings","title":"obj metrics.MetricAggregationWithSettings.Percentiles.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithpercents","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withPercents","text":"<pre><code>withPercents(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithpercentsmixin","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withPercentsMixin","text":"<pre><code>withPercentsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingspercentilessettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Percentiles.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingspercentilessettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Percentiles.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrate","title":"obj metrics.MetricAggregationWithSettings.Rate","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithfield","title":"fn metrics.MetricAggregationWithSettings.Rate.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithhide","title":"fn metrics.MetricAggregationWithSettings.Rate.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithid","title":"fn metrics.MetricAggregationWithSettings.Rate.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithsettings","title":"fn metrics.MetricAggregationWithSettings.Rate.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Rate.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratewithtype","title":"fn metrics.MetricAggregationWithSettings.Rate.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsratesettings","title":"obj metrics.MetricAggregationWithSettings.Rate.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratesettingswithmode","title":"# fn metrics.MetricAggregationWithSettings.Rate.settings.withMode","text":"<pre><code>withMode(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsratesettingswithunit","title":"# fn metrics.MetricAggregationWithSettings.Rate.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdata","title":"obj metrics.MetricAggregationWithSettings.RawData","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithhide","title":"fn metrics.MetricAggregationWithSettings.RawData.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithid","title":"fn metrics.MetricAggregationWithSettings.RawData.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithsettings","title":"fn metrics.MetricAggregationWithSettings.RawData.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.RawData.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatawithtype","title":"fn metrics.MetricAggregationWithSettings.RawData.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdatasettings","title":"obj metrics.MetricAggregationWithSettings.RawData.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdatasettingswithsize","title":"# fn metrics.MetricAggregationWithSettings.RawData.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdocument","title":"obj metrics.MetricAggregationWithSettings.RawDocument","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithhide","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithid","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithsettings","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentwithtype","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsrawdocumentsettings","title":"obj metrics.MetricAggregationWithSettings.RawDocument.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsrawdocumentsettingswithsize","title":"# fn metrics.MetricAggregationWithSettings.RawDocument.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsserialdiff","title":"obj metrics.MetricAggregationWithSettings.SerialDiff","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithfield","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithhide","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithid","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithsettings","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffwithtype","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsserialdiffsettings","title":"obj metrics.MetricAggregationWithSettings.SerialDiff.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsserialdiffsettingswithlag","title":"# fn metrics.MetricAggregationWithSettings.SerialDiff.settings.withLag","text":"<pre><code>withLag(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingssum","title":"obj metrics.MetricAggregationWithSettings.Sum","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithfield","title":"fn metrics.MetricAggregationWithSettings.Sum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithhide","title":"fn metrics.MetricAggregationWithSettings.Sum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithid","title":"fn metrics.MetricAggregationWithSettings.Sum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithsettings","title":"fn metrics.MetricAggregationWithSettings.Sum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Sum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumwithtype","title":"fn metrics.MetricAggregationWithSettings.Sum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingssumsettings","title":"obj metrics.MetricAggregationWithSettings.Sum.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingssumsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Sum.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingssumsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Sum.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingstopmetrics","title":"obj metrics.MetricAggregationWithSettings.TopMetrics","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithhide","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithid","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithsettings","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricswithtype","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingstopmetricssettings","title":"obj metrics.MetricAggregationWithSettings.TopMetrics.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithmetrics","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withMetrics","text":"<pre><code>withMetrics(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithmetricsmixin","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withMetricsMixin","text":"<pre><code>withMetricsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithorder","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withOrder","text":"<pre><code>withOrder(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingstopmetricssettingswithorderby","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsuniquecount","title":"obj metrics.MetricAggregationWithSettings.UniqueCount","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithfield","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithhide","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithid","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithsettings","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountwithtype","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricsmetricaggregationwithsettingsuniquecountsettings","title":"obj metrics.MetricAggregationWithSettings.UniqueCount.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.UniqueCount.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricsmetricaggregationwithsettingsuniquecountsettingswithprecisionthreshold","title":"# fn metrics.MetricAggregationWithSettings.UniqueCount.settings.withPrecisionThreshold","text":"<pre><code>withPrecisionThreshold(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregation","title":"obj metrics.PipelineMetricAggregation","text":""},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscript","title":"obj metrics.PipelineMetricAggregation.BucketScript","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithhide","title":"fn metrics.PipelineMetricAggregation.BucketScript.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithid","title":"fn metrics.PipelineMetricAggregation.BucketScript.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithpipelinevariables","title":"fn metrics.PipelineMetricAggregation.BucketScript.withPipelineVariables","text":"<pre><code>withPipelineVariables(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithpipelinevariablesmixin","title":"fn metrics.PipelineMetricAggregation.BucketScript.withPipelineVariablesMixin","text":"<pre><code>withPipelineVariablesMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithsettings","title":"fn metrics.PipelineMetricAggregation.BucketScript.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.BucketScript.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptwithtype","title":"fn metrics.PipelineMetricAggregation.BucketScript.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscriptpipelinevariables","title":"obj metrics.PipelineMetricAggregation.BucketScript.pipelineVariables","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptpipelinevariableswithname","title":"# fn metrics.PipelineMetricAggregation.BucketScript.pipelineVariables.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptpipelinevariableswithpipelineagg","title":"# fn metrics.PipelineMetricAggregation.BucketScript.pipelineVariables.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscriptsettings","title":"obj metrics.PipelineMetricAggregation.BucketScript.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptsettingswithscript","title":"# fn metrics.PipelineMetricAggregation.BucketScript.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptsettingswithscriptmixin","title":"# fn metrics.PipelineMetricAggregation.BucketScript.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationbucketscriptsettingsscript","title":"# obj metrics.PipelineMetricAggregation.BucketScript.settings.script","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationbucketscriptsettingsscriptwithinline","title":"## fn metrics.PipelineMetricAggregation.BucketScript.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationcumulativesum","title":"obj metrics.PipelineMetricAggregation.CumulativeSum","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithfield","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithhide","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithid","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithpipelineagg","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithsettings","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumwithtype","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationcumulativesumsettings","title":"obj metrics.PipelineMetricAggregation.CumulativeSum.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationcumulativesumsettingswithformat","title":"# fn metrics.PipelineMetricAggregation.CumulativeSum.settings.withFormat","text":"<pre><code>withFormat(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationderivative","title":"obj metrics.PipelineMetricAggregation.Derivative","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithfield","title":"fn metrics.PipelineMetricAggregation.Derivative.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithhide","title":"fn metrics.PipelineMetricAggregation.Derivative.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithid","title":"fn metrics.PipelineMetricAggregation.Derivative.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithpipelineagg","title":"fn metrics.PipelineMetricAggregation.Derivative.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithsettings","title":"fn metrics.PipelineMetricAggregation.Derivative.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.Derivative.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativewithtype","title":"fn metrics.PipelineMetricAggregation.Derivative.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationderivativesettings","title":"obj metrics.PipelineMetricAggregation.Derivative.settings","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationderivativesettingswithunit","title":"# fn metrics.PipelineMetricAggregation.Derivative.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#obj-metricspipelinemetricaggregationmovingaverage","title":"obj metrics.PipelineMetricAggregation.MovingAverage","text":""},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithfield","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithhide","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithid","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithpipelineagg","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithsettings","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch.html#fn-metricspipelinemetricaggregationmovingaveragewithtype","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/loki.html","title":"loki","text":"<p>grafonnet.query.loki</p>"},{"location":"grafonnet/query/loki.html#index","title":"Index","text":"<ul> <li><code>fn new(datasource, expr)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withEditorMode(value)</code></li> <li><code>fn withExpr(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withInstant(value)</code></li> <li><code>fn withLegendFormat(value)</code></li> <li><code>fn withMaxLines(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRange(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withResolution(value)</code></li> </ul>"},{"location":"grafonnet/query/loki.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/loki.html#fn-new","title":"fn new","text":"<pre><code>new(datasource, expr)\n</code></pre> <p>Creates a new loki query target for panels.</p>"},{"location":"grafonnet/query/loki.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Set the datasource for this query.</p>"},{"location":"grafonnet/query/loki.html#fn-witheditormode","title":"fn withEditorMode","text":"<pre><code>withEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"code\", \"builder\"</p>"},{"location":"grafonnet/query/loki.html#fn-withexpr","title":"fn withExpr","text":"<pre><code>withExpr(value)\n</code></pre> <p>The LogQL query.</p>"},{"location":"grafonnet/query/loki.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/loki.html#fn-withinstant","title":"fn withInstant","text":"<pre><code>withInstant(value)\n</code></pre> <p>@deprecated, now use queryType.</p>"},{"location":"grafonnet/query/loki.html#fn-withlegendformat","title":"fn withLegendFormat","text":"<pre><code>withLegendFormat(value)\n</code></pre> <p>Used to override the name of the series.</p>"},{"location":"grafonnet/query/loki.html#fn-withmaxlines","title":"fn withMaxLines","text":"<pre><code>withMaxLines(value)\n</code></pre> <p>Used to limit the number of log rows returned.</p>"},{"location":"grafonnet/query/loki.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/loki.html#fn-withrange","title":"fn withRange","text":"<pre><code>withRange(value)\n</code></pre> <p>@deprecated, now use queryType.</p>"},{"location":"grafonnet/query/loki.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/loki.html#fn-withresolution","title":"fn withResolution","text":"<pre><code>withResolution(value)\n</code></pre> <p>Used to scale the interval value.</p>"},{"location":"grafonnet/query/parca.html","title":"parca","text":"<p>grafonnet.query.parca</p>"},{"location":"grafonnet/query/parca.html#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabelSelector(value=\"{}\")</code></li> <li><code>fn withProfileTypeId(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"grafonnet/query/parca.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/parca.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/parca.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/parca.html#fn-withlabelselector","title":"fn withLabelSelector","text":"<pre><code>withLabelSelector(value=\"{}\")\n</code></pre> <p>Specifies the query label selectors.</p>"},{"location":"grafonnet/query/parca.html#fn-withprofiletypeid","title":"fn withProfileTypeId","text":"<pre><code>withProfileTypeId(value)\n</code></pre> <p>Specifies the type of profile to query.</p>"},{"location":"grafonnet/query/parca.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/parca.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/phlare.html","title":"phlare","text":"<p>grafonnet.query.phlare</p>"},{"location":"grafonnet/query/phlare.html#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withGroupBy(value)</code></li> <li><code>fn withGroupByMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabelSelector(value=\"{}\")</code></li> <li><code>fn withProfileTypeId(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"grafonnet/query/phlare.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/phlare.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/phlare.html#fn-withgroupby","title":"fn withGroupBy","text":"<pre><code>withGroupBy(value)\n</code></pre> <p>Allows to group the results.</p>"},{"location":"grafonnet/query/phlare.html#fn-withgroupbymixin","title":"fn withGroupByMixin","text":"<pre><code>withGroupByMixin(value)\n</code></pre> <p>Allows to group the results.</p>"},{"location":"grafonnet/query/phlare.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/phlare.html#fn-withlabelselector","title":"fn withLabelSelector","text":"<pre><code>withLabelSelector(value=\"{}\")\n</code></pre> <p>Specifies the query label selectors.</p>"},{"location":"grafonnet/query/phlare.html#fn-withprofiletypeid","title":"fn withProfileTypeId","text":"<pre><code>withProfileTypeId(value)\n</code></pre> <p>Specifies the type of profile to query.</p>"},{"location":"grafonnet/query/phlare.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/phlare.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/prometheus.html","title":"prometheus","text":"<p>grafonnet.query.prometheus</p>"},{"location":"grafonnet/query/prometheus.html#index","title":"Index","text":"<ul> <li><code>fn new(datasource, expr)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withEditorMode(value)</code></li> <li><code>fn withExemplar(value)</code></li> <li><code>fn withExpr(value)</code></li> <li><code>fn withFormat(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withInstant(value)</code></li> <li><code>fn withIntervalFactor(value)</code></li> <li><code>fn withLegendFormat(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRange(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"grafonnet/query/prometheus.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/prometheus.html#fn-new","title":"fn new","text":"<pre><code>new(datasource, expr)\n</code></pre> <p>Creates a new prometheus query target for panels.</p>"},{"location":"grafonnet/query/prometheus.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Set the datasource for this query.</p>"},{"location":"grafonnet/query/prometheus.html#fn-witheditormode","title":"fn withEditorMode","text":"<pre><code>withEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"code\", \"builder\"</p>"},{"location":"grafonnet/query/prometheus.html#fn-withexemplar","title":"fn withExemplar","text":"<pre><code>withExemplar(value)\n</code></pre> <p>Execute an additional query to identify interesting raw samples relevant for the given expr</p>"},{"location":"grafonnet/query/prometheus.html#fn-withexpr","title":"fn withExpr","text":"<pre><code>withExpr(value)\n</code></pre> <p>The actual expression/query that will be evaluated by Prometheus</p>"},{"location":"grafonnet/query/prometheus.html#fn-withformat","title":"fn withFormat","text":"<pre><code>withFormat(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"time_series\", \"table\", \"heatmap\"</p>"},{"location":"grafonnet/query/prometheus.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/prometheus.html#fn-withinstant","title":"fn withInstant","text":"<pre><code>withInstant(value)\n</code></pre> <p>Returns only the latest value that Prometheus has scraped for the requested time series</p>"},{"location":"grafonnet/query/prometheus.html#fn-withintervalfactor","title":"fn withIntervalFactor","text":"<pre><code>withIntervalFactor(value)\n</code></pre> <p>Set the interval factor for this query.</p>"},{"location":"grafonnet/query/prometheus.html#fn-withlegendformat","title":"fn withLegendFormat","text":"<pre><code>withLegendFormat(value)\n</code></pre> <p>Set the legend format for this query.</p>"},{"location":"grafonnet/query/prometheus.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/prometheus.html#fn-withrange","title":"fn withRange","text":"<pre><code>withRange(value)\n</code></pre> <p>Returns a Range vector, comprised of a set of time series containing a range of data points over time for each time series</p>"},{"location":"grafonnet/query/prometheus.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/tempo.html","title":"tempo","text":"<p>grafonnet.query.tempo</p>"},{"location":"grafonnet/query/tempo.html#index","title":"Index","text":"<ul> <li><code>fn new(datasource, query, filters)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withMaxDuration(value)</code></li> <li><code>fn withMinDuration(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withSearch(value)</code></li> <li><code>fn withServiceMapQuery(value)</code></li> <li><code>fn withServiceName(value)</code></li> <li><code>fn withSpanName(value)</code></li> <li><code>obj filters</code><ul> <li><code>fn withId(value)</code></li> <li><code>fn withOperator(value)</code></li> <li><code>fn withScope(value)</code></li> <li><code>fn withTag(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>fn withValueMixin(value)</code></li> <li><code>fn withValueType(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/query/tempo.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/tempo.html#fn-new","title":"fn new","text":"<pre><code>new(datasource, query, filters)\n</code></pre> <p>Creates a new tempo query target for panels.</p>"},{"location":"grafonnet/query/tempo.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Set the datasource for this query.</p>"},{"location":"grafonnet/query/tempo.html#fn-withfilters","title":"fn withFilters","text":"<pre><code>withFilters(value)\n</code></pre>"},{"location":"grafonnet/query/tempo.html#fn-withfiltersmixin","title":"fn withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre>"},{"location":"grafonnet/query/tempo.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/tempo.html#fn-withlimit","title":"fn withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>Defines the maximum number of traces that are returned from Tempo</p>"},{"location":"grafonnet/query/tempo.html#fn-withmaxduration","title":"fn withMaxDuration","text":"<pre><code>withMaxDuration(value)\n</code></pre> <p>Define the maximum duration to select traces. Use duration format, for example: 1.2s, 100ms</p>"},{"location":"grafonnet/query/tempo.html#fn-withminduration","title":"fn withMinDuration","text":"<pre><code>withMinDuration(value)\n</code></pre> <p>Define the minimum duration to select traces. Use duration format, for example: 1.2s, 100ms</p>"},{"location":"grafonnet/query/tempo.html#fn-withquery","title":"fn withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>TraceQL query or trace ID</p>"},{"location":"grafonnet/query/tempo.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/tempo.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/tempo.html#fn-withsearch","title":"fn withSearch","text":"<pre><code>withSearch(value)\n</code></pre> <p>Logfmt query to filter traces by their tags. Example: http.status_code=200 error=true</p>"},{"location":"grafonnet/query/tempo.html#fn-withservicemapquery","title":"fn withServiceMapQuery","text":"<pre><code>withServiceMapQuery(value)\n</code></pre> <p>Filters to be included in a PromQL query to select data for the service graph. Example: {client=\"app\",service=\"app\"}</p>"},{"location":"grafonnet/query/tempo.html#fn-withservicename","title":"fn withServiceName","text":"<pre><code>withServiceName(value)\n</code></pre> <p>Query traces by service name</p>"},{"location":"grafonnet/query/tempo.html#fn-withspanname","title":"fn withSpanName","text":"<pre><code>withSpanName(value)\n</code></pre> <p>Query traces by span name</p>"},{"location":"grafonnet/query/tempo.html#obj-filters","title":"obj filters","text":""},{"location":"grafonnet/query/tempo.html#fn-filterswithid","title":"fn filters.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Uniquely identify the filter, will not be used in the query generation</p>"},{"location":"grafonnet/query/tempo.html#fn-filterswithoperator","title":"fn filters.withOperator","text":"<pre><code>withOperator(value)\n</code></pre> <p>The operator that connects the tag to the value, for example: =, &gt;, !=, =~</p>"},{"location":"grafonnet/query/tempo.html#fn-filterswithscope","title":"fn filters.withScope","text":"<pre><code>withScope(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"unscoped\", \"resource\", \"span\"</p>"},{"location":"grafonnet/query/tempo.html#fn-filterswithtag","title":"fn filters.withTag","text":"<pre><code>withTag(value)\n</code></pre> <p>The tag for the search filter, for example: .http.status_code, .service.name, status</p>"},{"location":"grafonnet/query/tempo.html#fn-filterswithtype","title":"fn filters.withType","text":"<pre><code>withType(value)\n</code></pre> <p>static fields are pre-set in the UI, dynamic fields are added by the user</p> <p>Accepted values for <code>value</code> are \"static\", \"dynamic\"</p>"},{"location":"grafonnet/query/tempo.html#fn-filterswithvalue","title":"fn filters.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The value for the search filter</p>"},{"location":"grafonnet/query/tempo.html#fn-filterswithvaluemixin","title":"fn filters.withValueMixin","text":"<pre><code>withValueMixin(value)\n</code></pre> <p>The value for the search filter</p>"},{"location":"grafonnet/query/tempo.html#fn-filterswithvaluetype","title":"fn filters.withValueType","text":"<pre><code>withValueType(value)\n</code></pre> <p>The type of the value, used for example to check whether we need to wrap the value in quotes when generating the query</p>"},{"location":"grafonnet/query/testData.html","title":"testData","text":"<p>grafonnet.query.testData</p>"},{"location":"grafonnet/query/testData.html#index","title":"Index","text":"<ul> <li><code>fn withAlias(value)</code></li> <li><code>fn withChannel(value)</code></li> <li><code>fn withCsvContent(value)</code></li> <li><code>fn withCsvFileName(value)</code></li> <li><code>fn withCsvWave(value)</code></li> <li><code>fn withCsvWaveMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withErrorType(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabels(value)</code></li> <li><code>fn withLevelColumn(value)</code></li> <li><code>fn withLines(value)</code></li> <li><code>fn withNodes(value)</code></li> <li><code>fn withNodesMixin(value)</code></li> <li><code>fn withPoints(value)</code></li> <li><code>fn withPointsMixin(value)</code></li> <li><code>fn withPulseWave(value)</code></li> <li><code>fn withPulseWaveMixin(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRawFrameContent(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withScenarioId(value)</code></li> <li><code>fn withSeriesCount(value)</code></li> <li><code>fn withSim(value)</code></li> <li><code>fn withSimMixin(value)</code></li> <li><code>fn withSpanCount(value)</code></li> <li><code>fn withStream(value)</code></li> <li><code>fn withStreamMixin(value)</code></li> <li><code>fn withStringInput(value)</code></li> <li><code>fn withUsa(value)</code></li> <li><code>fn withUsaMixin(value)</code></li> <li><code>obj csvWave</code><ul> <li><code>fn withLabels(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withTimeStep(value)</code></li> <li><code>fn withValuesCSV(value)</code></li> </ul> </li> <li><code>obj nodes</code><ul> <li><code>fn withCount(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj pulseWave</code><ul> <li><code>fn withOffCount(value)</code></li> <li><code>fn withOffValue(value)</code></li> <li><code>fn withOnCount(value)</code></li> <li><code>fn withOnValue(value)</code></li> <li><code>fn withTimeStep(value)</code></li> </ul> </li> <li><code>obj sim</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withConfigMixin(value)</code></li> <li><code>fn withKey(value)</code></li> <li><code>fn withKeyMixin(value)</code></li> <li><code>fn withLast(value)</code></li> <li><code>fn withStream(value)</code></li> <li><code>obj key</code><ul> <li><code>fn withTick(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> </ul> </li> <li><code>obj stream</code><ul> <li><code>fn withBands(value)</code></li> <li><code>fn withNoise(value)</code></li> <li><code>fn withSpeed(value)</code></li> <li><code>fn withSpread(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> </ul> </li> <li><code>obj usa</code><ul> <li><code>fn withFields(value)</code></li> <li><code>fn withFieldsMixin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withPeriod(value)</code></li> <li><code>fn withStates(value)</code></li> <li><code>fn withStatesMixin(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/query/testData.html#fields","title":"Fields","text":""},{"location":"grafonnet/query/testData.html#fn-withalias","title":"fn withAlias","text":"<pre><code>withAlias(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withchannel","title":"fn withChannel","text":"<pre><code>withChannel(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withcsvcontent","title":"fn withCsvContent","text":"<pre><code>withCsvContent(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withcsvfilename","title":"fn withCsvFileName","text":"<pre><code>withCsvFileName(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withcsvwave","title":"fn withCsvWave","text":"<pre><code>withCsvWave(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withcsvwavemixin","title":"fn withCsvWaveMixin","text":"<pre><code>withCsvWaveMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/testData.html#fn-witherrortype","title":"fn withErrorType","text":"<pre><code>withErrorType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"server_panic\", \"frontend_exception\", \"frontend_observable\"</p>"},{"location":"grafonnet/query/testData.html#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/testData.html#fn-withlabels","title":"fn withLabels","text":"<pre><code>withLabels(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withlevelcolumn","title":"fn withLevelColumn","text":"<pre><code>withLevelColumn(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withlines","title":"fn withLines","text":"<pre><code>withLines(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withnodes","title":"fn withNodes","text":"<pre><code>withNodes(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withnodesmixin","title":"fn withNodesMixin","text":"<pre><code>withNodesMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withpoints","title":"fn withPoints","text":"<pre><code>withPoints(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withpointsmixin","title":"fn withPointsMixin","text":"<pre><code>withPointsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withpulsewave","title":"fn withPulseWave","text":"<pre><code>withPulseWave(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withpulsewavemixin","title":"fn withPulseWaveMixin","text":"<pre><code>withPulseWaveMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/testData.html#fn-withrawframecontent","title":"fn withRawFrameContent","text":"<pre><code>withRawFrameContent(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/testData.html#fn-withscenarioid","title":"fn withScenarioId","text":"<pre><code>withScenarioId(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"random_walk\", \"slow_query\", \"random_walk_with_error\", \"random_walk_table\", \"exponential_heatmap_bucket_data\", \"linear_heatmap_bucket_data\", \"no_data_points\", \"datapoints_outside_range\", \"csv_metric_values\", \"predictable_pulse\", \"predictable_csv_wave\", \"streaming_client\", \"simulation\", \"usa\", \"live\", \"grafana_api\", \"arrow\", \"annotations\", \"table_static\", \"server_error_500\", \"logs\", \"node_graph\", \"flame_graph\", \"raw_frame\", \"csv_file\", \"csv_content\", \"trace\", \"manual_entry\", \"variables-query\"</p>"},{"location":"grafonnet/query/testData.html#fn-withseriescount","title":"fn withSeriesCount","text":"<pre><code>withSeriesCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withsim","title":"fn withSim","text":"<pre><code>withSim(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withsimmixin","title":"fn withSimMixin","text":"<pre><code>withSimMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withspancount","title":"fn withSpanCount","text":"<pre><code>withSpanCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withstream","title":"fn withStream","text":"<pre><code>withStream(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withstreammixin","title":"fn withStreamMixin","text":"<pre><code>withStreamMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withstringinput","title":"fn withStringInput","text":"<pre><code>withStringInput(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withusa","title":"fn withUsa","text":"<pre><code>withUsa(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-withusamixin","title":"fn withUsaMixin","text":"<pre><code>withUsaMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#obj-csvwave","title":"obj csvWave","text":""},{"location":"grafonnet/query/testData.html#fn-csvwavewithlabels","title":"fn csvWave.withLabels","text":"<pre><code>withLabels(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-csvwavewithname","title":"fn csvWave.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-csvwavewithtimestep","title":"fn csvWave.withTimeStep","text":"<pre><code>withTimeStep(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-csvwavewithvaluescsv","title":"fn csvWave.withValuesCSV","text":"<pre><code>withValuesCSV(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#obj-nodes","title":"obj nodes","text":""},{"location":"grafonnet/query/testData.html#fn-nodeswithcount","title":"fn nodes.withCount","text":"<pre><code>withCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-nodeswithtype","title":"fn nodes.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"random\", \"response\", \"random edges\"</p>"},{"location":"grafonnet/query/testData.html#obj-pulsewave","title":"obj pulseWave","text":""},{"location":"grafonnet/query/testData.html#fn-pulsewavewithoffcount","title":"fn pulseWave.withOffCount","text":"<pre><code>withOffCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-pulsewavewithoffvalue","title":"fn pulseWave.withOffValue","text":"<pre><code>withOffValue(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-pulsewavewithoncount","title":"fn pulseWave.withOnCount","text":"<pre><code>withOnCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-pulsewavewithonvalue","title":"fn pulseWave.withOnValue","text":"<pre><code>withOnValue(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-pulsewavewithtimestep","title":"fn pulseWave.withTimeStep","text":"<pre><code>withTimeStep(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#obj-sim","title":"obj sim","text":""},{"location":"grafonnet/query/testData.html#fn-simwithconfig","title":"fn sim.withConfig","text":"<pre><code>withConfig(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-simwithconfigmixin","title":"fn sim.withConfigMixin","text":"<pre><code>withConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-simwithkey","title":"fn sim.withKey","text":"<pre><code>withKey(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-simwithkeymixin","title":"fn sim.withKeyMixin","text":"<pre><code>withKeyMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-simwithlast","title":"fn sim.withLast","text":"<pre><code>withLast(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-simwithstream","title":"fn sim.withStream","text":"<pre><code>withStream(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#obj-simkey","title":"obj sim.key","text":""},{"location":"grafonnet/query/testData.html#fn-simkeywithtick","title":"fn sim.key.withTick","text":"<pre><code>withTick(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-simkeywithtype","title":"fn sim.key.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-simkeywithuid","title":"fn sim.key.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#obj-stream","title":"obj stream","text":""},{"location":"grafonnet/query/testData.html#fn-streamwithbands","title":"fn stream.withBands","text":"<pre><code>withBands(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-streamwithnoise","title":"fn stream.withNoise","text":"<pre><code>withNoise(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-streamwithspeed","title":"fn stream.withSpeed","text":"<pre><code>withSpeed(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-streamwithspread","title":"fn stream.withSpread","text":"<pre><code>withSpread(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-streamwithtype","title":"fn stream.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are \"signal\", \"logs\", \"fetch\"</p>"},{"location":"grafonnet/query/testData.html#fn-streamwithurl","title":"fn stream.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#obj-usa","title":"obj usa","text":""},{"location":"grafonnet/query/testData.html#fn-usawithfields","title":"fn usa.withFields","text":"<pre><code>withFields(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-usawithfieldsmixin","title":"fn usa.withFieldsMixin","text":"<pre><code>withFieldsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-usawithmode","title":"fn usa.withMode","text":"<pre><code>withMode(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-usawithperiod","title":"fn usa.withPeriod","text":"<pre><code>withPeriod(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-usawithstates","title":"fn usa.withStates","text":"<pre><code>withStates(value)\n</code></pre>"},{"location":"grafonnet/query/testData.html#fn-usawithstatesmixin","title":"fn usa.withStatesMixin","text":"<pre><code>withStatesMixin(value)\n</code></pre>"}]}