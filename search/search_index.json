{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"grafonnet","text":"<p>Jsonnet library for generating Grafana dashboards.</p>"},{"location":"#maturity","title":"Maturity","text":"<p>The code in this repository should be considered experimental. Documentation is only available alongside the code. It comes with no support, but we are keen to receive feedback on the product and suggestions on how to improve it, though we cannot commit to resolution of any particular issue. No SLAs are available. It is not meant to be used in production environments, and the risks are unknown/high.</p> <p>Grafana Labs defines experimental features as follows:</p> <p>Projects and features in the Experimental stage are supported only by the Engineering teams; on-call support is not available. Documentation is either limited or not provided outside of code comments. No SLA is provided.</p> <p>Experimental projects or features are primarily intended for open source engineers who want to participate in ensuring systems stability, and to gain consensus and approval for open source governance projects.</p> <p>Projects and features in the Experimental phase are not meant to be used in production environments, and the risks are unknown/high.</p> <p>Additional information can be found in Release life cycle for Grafana Labs.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>This library depends on JSON Schemas generated by Grok, these schemas are generated directly from the Grafana repository to ensure Grafonnet can keep up with Grafana development.</p> <p>Grafonnet is the spiritual successor of grafonnet-lib. As grafonnet-lib was manually written, it had a hard time to keep up with Grafana development, this resulted in it being under-maintained. Besides that, it also came with a performance penalty in jsonnet as it used the builder pattern, although visually appealing it becomes very slow for environments that need to manage many dashboards.</p>"},{"location":"#requirements","title":"Requirements","text":"<p>Grafonnet uses the Jsonnet programming language.</p> <p>The library can be installed with jsonnet-bundler.</p>"},{"location":"#install","title":"Install","text":"<pre><code>jb install github.com/grafana/grafonnet/gen/grafonnet-latest@main\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<pre><code>// dashboard.jsonnet\nlocal grafonnet = import 'github.com/grafana/grafonnet/gen/grafonnet-latest/main.libsonnet';\n\ngrafonnet.dashboard.new('My Dashboard')\n</code></pre> <pre><code>jsonnet -J vendor dashboard.jsonnet\n</code></pre>"},{"location":"#subpackages","title":"Subpackages","text":"<ul> <li>dashboard</li> <li>librarypanel</li> <li>panel</li> <li>playlist</li> <li>preferences</li> <li>publicdashboard</li> <li>query</li> <li>serviceaccount</li> <li>team</li> <li>util</li> </ul>"},{"location":"grafonnet/","title":"grafonnet","text":"<ul> <li>dashboard</li> <li>librarypanel</li> <li>panel</li> <li>playlist</li> <li>preferences</li> <li>publicdashboard</li> <li>query</li> <li>serviceaccount</li> <li>team</li> <li>util</li> </ul>"},{"location":"grafonnet/dashboard/","title":"dashboard","text":"<p>grafonnet.dashboard</p>"},{"location":"grafonnet/dashboard/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withAnnotations(value)</code></li> <li><code>fn withAnnotationsMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withEditable(value=true)</code></li> <li><code>fn withFiscalYearStartMonth(value=0)</code></li> <li><code>fn withGnetId(value)</code></li> <li><code>fn withGraphTooltip(value=0)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withLiveNow(value)</code></li> <li><code>fn withPanels(value)</code></li> <li><code>fn withPanelsMixin(value)</code></li> <li><code>fn withRefresh(value)</code></li> <li><code>fn withRefreshMixin(value)</code></li> <li><code>fn withRevision(value)</code></li> <li><code>fn withSchemaVersion(value=36)</code></li> <li><code>fn withSnapshot(value)</code></li> <li><code>fn withSnapshotMixin(value)</code></li> <li><code>fn withStyle(value='dark')</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTemplating(value)</code></li> <li><code>fn withTemplatingMixin(value)</code></li> <li><code>fn withTime(value)</code></li> <li><code>fn withTimeMixin(value)</code></li> <li><code>fn withTimepicker(value)</code></li> <li><code>fn withTimepickerMixin(value)</code></li> <li><code>fn withTimezone(value='browser')</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>fn withVersion(value)</code></li> <li><code>fn withWeekStart(value)</code></li> <li><code>obj annotations</code></li> <li><code>fn withList(value)</code></li> <li><code>fn withListMixin(value)</code></li> <li><code>obj list</code><ul> <li><code>fn withBuiltIn(value=0)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withEnable(value=true)</code></li> <li><code>fn withHide(value=false)</code></li> <li><code>fn withIconColor(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withRawQuery(value)</code></li> <li><code>fn withShowIn(value=0)</code></li> <li><code>fn withTarget(value)</code></li> <li><code>fn withTargetMixin(value)</code></li> <li><code>fn withType(value='dashboard')</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj target</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withMatchAny(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj graphTooltip</code></li> <li><code>fn withSharedCrosshair()</code></li> <li><code>fn withSharedTooltip()</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj snapshot</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withExpires(value)</code></li> <li><code>fn withExternal(value)</code></li> <li><code>fn withExternalUrl(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withKey(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOrgId(value)</code></li> <li><code>fn withUpdated(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>fn withUserId(value)</code></li> <li><code>obj templateVariable</code></li> <li><code>fn new(name, type='query')</code></li> <li><code>fn withAllValue(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withError(value)</code></li> <li><code>fn withErrorMixin(value)</code></li> <li><code>fn withGlobal(value=false)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value='00000000-0000-0000-0000-000000000000')</code></li> <li><code>fn withIncludeAll(value=true)</code></li> <li><code>fn withIndex(value=-1)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withMulti(value=true)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryMixin(value)</code></li> <li><code>fn withRegex(value)</code></li> <li><code>fn withRootStateKey(value)</code></li> <li><code>fn withSkipUrlSync(value=false)</code></li> <li><code>fn withSort(i=0, type='alphabetical', asc=true, caseInsensitive=false)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj datasource</code><ul> <li><code>fn fromVariable(variable)</code></li> <li><code>fn new(type, uid)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj query</code><ul> <li><code>fn withLabelValues(label, metric)</code></li> </ul> </li> <li><code>obj refresh</code><ul> <li><code>fn onLoad()</code></li> <li><code>fn onTime()</code></li> </ul> </li> <li><code>obj templating</code></li> <li><code>fn withList(value)</code></li> <li><code>fn withListMixin(value)</code></li> <li><code>obj list</code><ul> <li><code>fn new(name, type='query')</code></li> <li><code>fn withAllValue(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withError(value)</code></li> <li><code>fn withErrorMixin(value)</code></li> <li><code>fn withGlobal(value=false)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value='00000000-0000-0000-0000-000000000000')</code></li> <li><code>fn withIncludeAll(value=true)</code></li> <li><code>fn withIndex(value=-1)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withMulti(value=true)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryMixin(value)</code></li> <li><code>fn withRegex(value)</code></li> <li><code>fn withRootStateKey(value)</code></li> <li><code>fn withSkipUrlSync(value=false)</code></li> <li><code>fn withSort(i=0, type='alphabetical', asc=true, caseInsensitive=false)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj datasource</code></li> <li><code>fn fromVariable(variable)</code></li> <li><code>fn new(type, uid)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj query</code></li> <li><code>fn withLabelValues(label, metric)</code></li> <li><code>obj refresh</code></li> <li><code>fn onLoad()</code></li> <li><code>fn onTime()</code></li> </ul> </li> <li><code>obj time</code></li> <li><code>fn withFrom(value='now-6h')</code></li> <li><code>fn withTo(value='now')</code></li> <li><code>obj timepicker</code></li> <li><code>fn withCollapse(value=false)</code></li> <li><code>fn withEnable(value=true)</code></li> <li><code>fn withHidden(value=false)</code></li> <li><code>fn withRefreshIntervals(value=[\"5s\", \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\"])</code></li> <li><code>fn withRefreshIntervalsMixin(value=[\"5s\", \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\"])</code></li> <li><code>fn withTimeOptions(value=[\"5m\", \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\"])</code></li> <li><code>fn withTimeOptionsMixin(value=[\"5m\", \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\"])</code></li> </ul>"},{"location":"grafonnet/dashboard/#fields","title":"Fields","text":""},{"location":"grafonnet/dashboard/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new dashboard with a title.</p>"},{"location":"grafonnet/dashboard/#fn-withannotations","title":"fn withAnnotations","text":"<pre><code>withAnnotations(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withannotationsmixin","title":"fn withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description of dashboard.</p>"},{"location":"grafonnet/dashboard/#fn-witheditable","title":"fn withEditable","text":"<pre><code>withEditable(value=true)\n</code></pre> <p>Whether a dashboard is editable or not.</p>"},{"location":"grafonnet/dashboard/#fn-withfiscalyearstartmonth","title":"fn withFiscalYearStartMonth","text":"<pre><code>withFiscalYearStartMonth(value=0)\n</code></pre> <p>The month that the fiscal year starts on.  0 = January, 11 = December</p>"},{"location":"grafonnet/dashboard/#fn-withgnetid","title":"fn withGnetId","text":"<pre><code>withGnetId(value)\n</code></pre> <p>For dashboards imported from the https://grafana.com/grafana/dashboards/ portal</p>"},{"location":"grafonnet/dashboard/#fn-withgraphtooltip","title":"fn withGraphTooltip","text":"<pre><code>withGraphTooltip(value=0)\n</code></pre> <p>0 for no shared crosshair or tooltip (default). 1 for shared crosshair. 2 for shared crosshair AND shared tooltip.</p> <p>Accepted values for <code>value</code> are 0, 1, 2</p>"},{"location":"grafonnet/dashboard/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique numeric identifier for the dashboard. TODO must isolate or remove identifiers local to a Grafana instance...?</p>"},{"location":"grafonnet/dashboard/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withlivenow","title":"fn withLiveNow","text":"<pre><code>withLiveNow(value)\n</code></pre> <p>When set to true, the dashboard will redraw panels at an interval matching the pixel width. This will keep data \"moving left\" regardless of the query refresh rate.  This setting helps avoid dashboards presenting stale live data</p>"},{"location":"grafonnet/dashboard/#fn-withpanels","title":"fn withPanels","text":"<pre><code>withPanels(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-withpanelsmixin","title":"fn withPanelsMixin","text":"<pre><code>withPanelsMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-withrefresh","title":"fn withRefresh","text":"<pre><code>withRefresh(value)\n</code></pre> <p>Refresh rate of dashboard. Represented via interval string, e.g. \"5s\", \"1m\", \"1h\", \"1d\".</p>"},{"location":"grafonnet/dashboard/#fn-withrefreshmixin","title":"fn withRefreshMixin","text":"<pre><code>withRefreshMixin(value)\n</code></pre> <p>Refresh rate of dashboard. Represented via interval string, e.g. \"5s\", \"1m\", \"1h\", \"1d\".</p>"},{"location":"grafonnet/dashboard/#fn-withrevision","title":"fn withRevision","text":"<pre><code>withRevision(value)\n</code></pre> <p>This property should only be used in dashboards defined by plugins.  It is a quick check to see if the version has changed since the last time.  Unclear why using the version property is insufficient.</p>"},{"location":"grafonnet/dashboard/#fn-withschemaversion","title":"fn withSchemaVersion","text":"<pre><code>withSchemaVersion(value=36)\n</code></pre> <p>Version of the JSON schema, incremented each time a Grafana update brings changes to said schema. TODO this is the existing schema numbering system. It will be replaced by Thema's themaVersion</p>"},{"location":"grafonnet/dashboard/#fn-withsnapshot","title":"fn withSnapshot","text":"<pre><code>withSnapshot(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withsnapshotmixin","title":"fn withSnapshotMixin","text":"<pre><code>withSnapshotMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withstyle","title":"fn withStyle","text":"<pre><code>withStyle(value='dark')\n</code></pre> <p>Theme of dashboard.</p> <p>Accepted values for <code>value</code> are dark, light</p>"},{"location":"grafonnet/dashboard/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>Tags associated with dashboard.</p>"},{"location":"grafonnet/dashboard/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>Tags associated with dashboard.</p>"},{"location":"grafonnet/dashboard/#fn-withtemplating","title":"fn withTemplating","text":"<pre><code>withTemplating(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withtemplatingmixin","title":"fn withTemplatingMixin","text":"<pre><code>withTemplatingMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-withtime","title":"fn withTime","text":"<pre><code>withTime(value)\n</code></pre> <p>Time range for dashboard, e.g. last 6 hours, last 7 days, etc</p>"},{"location":"grafonnet/dashboard/#fn-withtimemixin","title":"fn withTimeMixin","text":"<pre><code>withTimeMixin(value)\n</code></pre> <p>Time range for dashboard, e.g. last 6 hours, last 7 days, etc</p>"},{"location":"grafonnet/dashboard/#fn-withtimepicker","title":"fn withTimepicker","text":"<pre><code>withTimepicker(value)\n</code></pre> <p>TODO docs TODO this appears to be spread all over in the frontend. Concepts will likely need tidying in tandem with schema changes</p>"},{"location":"grafonnet/dashboard/#fn-withtimepickermixin","title":"fn withTimepickerMixin","text":"<pre><code>withTimepickerMixin(value)\n</code></pre> <p>TODO docs TODO this appears to be spread all over in the frontend. Concepts will likely need tidying in tandem with schema changes</p>"},{"location":"grafonnet/dashboard/#fn-withtimezone","title":"fn withTimezone","text":"<pre><code>withTimezone(value='browser')\n</code></pre> <p>Timezone of dashboard. Accepts IANA TZDB zone ID or \"browser\" or \"utc\".</p>"},{"location":"grafonnet/dashboard/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Title of dashboard.</p>"},{"location":"grafonnet/dashboard/#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique dashboard identifier that can be generated by anyone. string (8-40)</p>"},{"location":"grafonnet/dashboard/#fn-withversion","title":"fn withVersion","text":"<pre><code>withVersion(value)\n</code></pre> <p>Version of the dashboard, incremented each time the dashboard is updated.</p>"},{"location":"grafonnet/dashboard/#fn-withweekstart","title":"fn withWeekStart","text":"<pre><code>withWeekStart(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#obj-annotations","title":"obj annotations","text":""},{"location":"grafonnet/dashboard/#fn-annotationswithlist","title":"fn annotations.withList","text":"<pre><code>withList(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationswithlistmixin","title":"fn annotations.withListMixin","text":"<pre><code>withListMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#obj-annotationslist","title":"obj annotations.list","text":""},{"location":"grafonnet/dashboard/#fn-annotationslistwithbuiltin","title":"fn annotations.list.withBuiltIn","text":"<pre><code>withBuiltIn(value=0)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithdatasource","title":"fn annotations.list.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Datasource to use for annotation.</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithdatasourcemixin","title":"fn annotations.list.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Datasource to use for annotation.</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithenable","title":"fn annotations.list.withEnable","text":"<pre><code>withEnable(value=true)\n</code></pre> <p>Whether annotation is enabled.</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithhide","title":"fn annotations.list.withHide","text":"<pre><code>withHide(value=false)\n</code></pre> <p>Whether to hide annotation.</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithiconcolor","title":"fn annotations.list.withIconColor","text":"<pre><code>withIconColor(value)\n</code></pre> <p>Annotation icon color.</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithname","title":"fn annotations.list.withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of annotation.</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithrawquery","title":"fn annotations.list.withRawQuery","text":"<pre><code>withRawQuery(value)\n</code></pre> <p>Query for annotation data.</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithshowin","title":"fn annotations.list.withShowIn","text":"<pre><code>withShowIn(value=0)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithtarget","title":"fn annotations.list.withTarget","text":"<pre><code>withTarget(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithtargetmixin","title":"fn annotations.list.withTargetMixin","text":"<pre><code>withTargetMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-annotationslistwithtype","title":"fn annotations.list.withType","text":"<pre><code>withType(value='dashboard')\n</code></pre>"},{"location":"grafonnet/dashboard/#obj-annotationslistdatasource","title":"obj annotations.list.datasource","text":""},{"location":"grafonnet/dashboard/#fn-annotationslistdatasourcewithtype","title":"fn annotations.list.datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationslistdatasourcewithuid","title":"fn annotations.list.datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#obj-annotationslisttarget","title":"obj annotations.list.target","text":""},{"location":"grafonnet/dashboard/#fn-annotationslisttargetwithlimit","title":"fn annotations.list.target.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationslisttargetwithmatchany","title":"fn annotations.list.target.withMatchAny","text":"<pre><code>withMatchAny(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationslisttargetwithtags","title":"fn annotations.list.target.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationslisttargetwithtagsmixin","title":"fn annotations.list.target.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-annotationslisttargetwithtype","title":"fn annotations.list.target.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#obj-graphtooltip","title":"obj graphTooltip","text":""},{"location":"grafonnet/dashboard/#fn-graphtooltipwithsharedcrosshair","title":"fn graphTooltip.withSharedCrosshair","text":"<pre><code>withSharedCrosshair()\n</code></pre> <p>Share crosshair on all panels.</p>"},{"location":"grafonnet/dashboard/#fn-graphtooltipwithsharedtooltip","title":"fn graphTooltip.withSharedTooltip","text":"<pre><code>withSharedTooltip()\n</code></pre> <p>Share crosshair and tooltip on all panels.</p>"},{"location":"grafonnet/dashboard/#obj-links","title":"obj links","text":""},{"location":"grafonnet/dashboard/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/dashboard/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#obj-snapshot","title":"obj snapshot","text":""},{"location":"grafonnet/dashboard/#fn-snapshotwithcreated","title":"fn snapshot.withCreated","text":"<pre><code>withCreated(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithexpires","title":"fn snapshot.withExpires","text":"<pre><code>withExpires(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithexternal","title":"fn snapshot.withExternal","text":"<pre><code>withExternal(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithexternalurl","title":"fn snapshot.withExternalUrl","text":"<pre><code>withExternalUrl(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithid","title":"fn snapshot.withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithkey","title":"fn snapshot.withKey","text":"<pre><code>withKey(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithname","title":"fn snapshot.withName","text":"<pre><code>withName(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithorgid","title":"fn snapshot.withOrgId","text":"<pre><code>withOrgId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithupdated","title":"fn snapshot.withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithurl","title":"fn snapshot.withUrl","text":"<pre><code>withUrl(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-snapshotwithuserid","title":"fn snapshot.withUserId","text":"<pre><code>withUserId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#obj-templatevariable","title":"obj templateVariable","text":""},{"location":"grafonnet/dashboard/#fn-templatevariablenew","title":"fn templateVariable.new","text":"<pre><code>new(name, type='query')\n</code></pre> <p>Create a template variable.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithallvalue","title":"fn templateVariable.withAllValue","text":"<pre><code>withAllValue(value)\n</code></pre> <p>Provide value to use with the <code>withIncludeAll</code>, this will also enable includeAll by default.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithdatasource","title":"fn templateVariable.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Ref to a DataSource instance</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithdatasourcemixin","title":"fn templateVariable.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Ref to a DataSource instance</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithdescription","title":"fn templateVariable.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewitherror","title":"fn templateVariable.withError","text":"<pre><code>withError(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewitherrormixin","title":"fn templateVariable.withErrorMixin","text":"<pre><code>withErrorMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithglobal","title":"fn templateVariable.withGlobal","text":"<pre><code>withGlobal(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithhide","title":"fn templateVariable.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1, 2</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithid","title":"fn templateVariable.withId","text":"<pre><code>withId(value='00000000-0000-0000-0000-000000000000')\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithincludeall","title":"fn templateVariable.withIncludeAll","text":"<pre><code>withIncludeAll(value=true)\n</code></pre> <p>Provide option to select \"All\" values.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithindex","title":"fn templateVariable.withIndex","text":"<pre><code>withIndex(value=-1)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithlabel","title":"fn templateVariable.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithmulti","title":"fn templateVariable.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithname","title":"fn templateVariable.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithquery","title":"fn templateVariable.withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>TODO: Move this into a separated QueryVariableModel type</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithquerymixin","title":"fn templateVariable.withQueryMixin","text":"<pre><code>withQueryMixin(value)\n</code></pre> <p>TODO: Move this into a separated QueryVariableModel type</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithregex","title":"fn templateVariable.withRegex","text":"<pre><code>withRegex(value)\n</code></pre> <p>Filter the values with a regex.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithrootstatekey","title":"fn templateVariable.withRootStateKey","text":"<pre><code>withRootStateKey(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithskipurlsync","title":"fn templateVariable.withSkipUrlSync","text":"<pre><code>withSkipUrlSync(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithsort","title":"fn templateVariable.withSort","text":"<pre><code>withSort(i=0, type='alphabetical', asc=true, caseInsensitive=false)\n</code></pre> <p>Choose how to sort the values in the dropdown.</p> <p>This can be called as <code>withSort(&lt;number&gt;) to use the integer values for each option. If</code>i==0` then it will be ignored and the other arguments will take precedence.</p> <p>The numerical values are:</p> <ul> <li>1 - Alphabetical (asc)</li> <li>2 - Alphabetical (desc)</li> <li>3 - Numerical (asc)</li> <li>4 - Numerical (desc)</li> <li>5 - Alphabetical (case-insensitive, asc)</li> <li>6 - Alphabetical (case-insensitive, desc)</li> </ul>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithstate","title":"fn templateVariable.withState","text":"<pre><code>withState(value)\n</code></pre> <p>Accepted values for <code>value</code> are NotStarted, Loading, Streaming, Done, Error</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablewithtype","title":"fn templateVariable.withType","text":"<pre><code>withType(value)\n</code></pre> <p>FROM: packages/grafana-data/src/types/templateVars.ts TODO docs TODO this implies some wider pattern/discriminated union, probably?</p> <p>Accepted values for <code>value</code> are query, adhoc, constant, datasource, interval, textbox, custom, system</p>"},{"location":"grafonnet/dashboard/#obj-templatevariabledatasource","title":"obj templateVariable.datasource","text":""},{"location":"grafonnet/dashboard/#fn-templatevariabledatasourcefromvariable","title":"fn templateVariable.datasource.fromVariable","text":"<pre><code>fromVariable(variable)\n</code></pre> <p>Select the datasource from another template variable.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariabledatasourcenew","title":"fn templateVariable.datasource.new","text":"<pre><code>new(type, uid)\n</code></pre> <p>Select a datasource for the variable template query.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariabledatasourcewithtype","title":"fn templateVariable.datasource.withType","text":"<pre><code>withType(value)\n</code></pre> <p>The plugin type-id</p>"},{"location":"grafonnet/dashboard/#fn-templatevariabledatasourcewithuid","title":"fn templateVariable.datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Specific datasource instance</p>"},{"location":"grafonnet/dashboard/#obj-templatevariablequery","title":"obj templateVariable.query","text":""},{"location":"grafonnet/dashboard/#fn-templatevariablequerywithlabelvalues","title":"fn templateVariable.query.withLabelValues","text":"<pre><code>withLabelValues(label, metric)\n</code></pre> <p>Construct a Prometheus template variable using <code>label_values()</code>.</p>"},{"location":"grafonnet/dashboard/#obj-templatevariablerefresh","title":"obj templateVariable.refresh","text":""},{"location":"grafonnet/dashboard/#fn-templatevariablerefreshonload","title":"fn templateVariable.refresh.onLoad","text":"<pre><code>onLoad()\n</code></pre> <p>Refresh label values on dashboard load.</p>"},{"location":"grafonnet/dashboard/#fn-templatevariablerefreshontime","title":"fn templateVariable.refresh.onTime","text":"<pre><code>onTime()\n</code></pre> <p>Refresh label values on time range change.</p>"},{"location":"grafonnet/dashboard/#obj-templating","title":"obj templating","text":""},{"location":"grafonnet/dashboard/#fn-templatingwithlist","title":"fn templating.withList","text":"<pre><code>withList(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatingwithlistmixin","title":"fn templating.withListMixin","text":"<pre><code>withListMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#obj-templatinglist","title":"obj templating.list","text":""},{"location":"grafonnet/dashboard/#fn-templatinglistnew","title":"fn templating.list.new","text":"<pre><code>new(name, type='query')\n</code></pre> <p>Create a template variable.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithallvalue","title":"fn templating.list.withAllValue","text":"<pre><code>withAllValue(value)\n</code></pre> <p>Provide value to use with the <code>withIncludeAll</code>, this will also enable includeAll by default.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithdatasource","title":"fn templating.list.withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Ref to a DataSource instance</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithdatasourcemixin","title":"fn templating.list.withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Ref to a DataSource instance</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithdescription","title":"fn templating.list.withDescription","text":"<pre><code>withDescription(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwitherror","title":"fn templating.list.withError","text":"<pre><code>withError(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwitherrormixin","title":"fn templating.list.withErrorMixin","text":"<pre><code>withErrorMixin(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithglobal","title":"fn templating.list.withGlobal","text":"<pre><code>withGlobal(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithhide","title":"fn templating.list.withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1, 2</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithid","title":"fn templating.list.withId","text":"<pre><code>withId(value='00000000-0000-0000-0000-000000000000')\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithincludeall","title":"fn templating.list.withIncludeAll","text":"<pre><code>withIncludeAll(value=true)\n</code></pre> <p>Provide option to select \"All\" values.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithindex","title":"fn templating.list.withIndex","text":"<pre><code>withIndex(value=-1)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithlabel","title":"fn templating.list.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithmulti","title":"fn templating.list.withMulti","text":"<pre><code>withMulti(value=true)\n</code></pre> <p>Enable selecting multiple values.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithname","title":"fn templating.list.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithquery","title":"fn templating.list.withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>TODO: Move this into a separated QueryVariableModel type</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithquerymixin","title":"fn templating.list.withQueryMixin","text":"<pre><code>withQueryMixin(value)\n</code></pre> <p>TODO: Move this into a separated QueryVariableModel type</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithregex","title":"fn templating.list.withRegex","text":"<pre><code>withRegex(value)\n</code></pre> <p>Filter the values with a regex.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithrootstatekey","title":"fn templating.list.withRootStateKey","text":"<pre><code>withRootStateKey(value)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithskipurlsync","title":"fn templating.list.withSkipUrlSync","text":"<pre><code>withSkipUrlSync(value=false)\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithsort","title":"fn templating.list.withSort","text":"<pre><code>withSort(i=0, type='alphabetical', asc=true, caseInsensitive=false)\n</code></pre> <p>Choose how to sort the values in the dropdown.</p> <p>This can be called as <code>withSort(&lt;number&gt;) to use the integer values for each option. If</code>i==0` then it will be ignored and the other arguments will take precedence.</p> <p>The numerical values are:</p> <ul> <li>1 - Alphabetical (asc)</li> <li>2 - Alphabetical (desc)</li> <li>3 - Numerical (asc)</li> <li>4 - Numerical (desc)</li> <li>5 - Alphabetical (case-insensitive, asc)</li> <li>6 - Alphabetical (case-insensitive, desc)</li> </ul>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithstate","title":"fn templating.list.withState","text":"<pre><code>withState(value)\n</code></pre> <p>Accepted values for <code>value</code> are NotStarted, Loading, Streaming, Done, Error</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistwithtype","title":"fn templating.list.withType","text":"<pre><code>withType(value)\n</code></pre> <p>FROM: packages/grafana-data/src/types/templateVars.ts TODO docs TODO this implies some wider pattern/discriminated union, probably?</p> <p>Accepted values for <code>value</code> are query, adhoc, constant, datasource, interval, textbox, custom, system</p>"},{"location":"grafonnet/dashboard/#obj-templatinglistdatasource","title":"obj templating.list.datasource","text":""},{"location":"grafonnet/dashboard/#fn-templatinglistdatasourcefromvariable","title":"fn templating.list.datasource.fromVariable","text":"<pre><code>fromVariable(variable)\n</code></pre> <p>Select the datasource from another template variable.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistdatasourcenew","title":"fn templating.list.datasource.new","text":"<pre><code>new(type, uid)\n</code></pre> <p>Select a datasource for the variable template query.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistdatasourcewithtype","title":"fn templating.list.datasource.withType","text":"<pre><code>withType(value)\n</code></pre> <p>The plugin type-id</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistdatasourcewithuid","title":"fn templating.list.datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Specific datasource instance</p>"},{"location":"grafonnet/dashboard/#obj-templatinglistquery","title":"obj templating.list.query","text":""},{"location":"grafonnet/dashboard/#fn-templatinglistquerywithlabelvalues","title":"fn templating.list.query.withLabelValues","text":"<pre><code>withLabelValues(label, metric)\n</code></pre> <p>Construct a Prometheus template variable using <code>label_values()</code>.</p>"},{"location":"grafonnet/dashboard/#obj-templatinglistrefresh","title":"obj templating.list.refresh","text":""},{"location":"grafonnet/dashboard/#fn-templatinglistrefreshonload","title":"fn templating.list.refresh.onLoad","text":"<pre><code>onLoad()\n</code></pre> <p>Refresh label values on dashboard load.</p>"},{"location":"grafonnet/dashboard/#fn-templatinglistrefreshontime","title":"fn templating.list.refresh.onTime","text":"<pre><code>onTime()\n</code></pre> <p>Refresh label values on time range change.</p>"},{"location":"grafonnet/dashboard/#obj-time","title":"obj time","text":""},{"location":"grafonnet/dashboard/#fn-timewithfrom","title":"fn time.withFrom","text":"<pre><code>withFrom(value='now-6h')\n</code></pre>"},{"location":"grafonnet/dashboard/#fn-timewithto","title":"fn time.withTo","text":"<pre><code>withTo(value='now')\n</code></pre>"},{"location":"grafonnet/dashboard/#obj-timepicker","title":"obj timepicker","text":""},{"location":"grafonnet/dashboard/#fn-timepickerwithcollapse","title":"fn timepicker.withCollapse","text":"<pre><code>withCollapse(value=false)\n</code></pre> <p>Whether timepicker is collapsed or not.</p>"},{"location":"grafonnet/dashboard/#fn-timepickerwithenable","title":"fn timepicker.withEnable","text":"<pre><code>withEnable(value=true)\n</code></pre> <p>Whether timepicker is enabled or not.</p>"},{"location":"grafonnet/dashboard/#fn-timepickerwithhidden","title":"fn timepicker.withHidden","text":"<pre><code>withHidden(value=false)\n</code></pre> <p>Whether timepicker is visible or not.</p>"},{"location":"grafonnet/dashboard/#fn-timepickerwithrefreshintervals","title":"fn timepicker.withRefreshIntervals","text":"<pre><code>withRefreshIntervals(value=[\"5s\", \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\"])\n</code></pre> <p>Selectable intervals for auto-refresh.</p>"},{"location":"grafonnet/dashboard/#fn-timepickerwithrefreshintervalsmixin","title":"fn timepicker.withRefreshIntervalsMixin","text":"<pre><code>withRefreshIntervalsMixin(value=[\"5s\", \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\"])\n</code></pre> <p>Selectable intervals for auto-refresh.</p>"},{"location":"grafonnet/dashboard/#fn-timepickerwithtimeoptions","title":"fn timepicker.withTimeOptions","text":"<pre><code>withTimeOptions(value=[\"5m\", \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\"])\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/dashboard/#fn-timepickerwithtimeoptionsmixin","title":"fn timepicker.withTimeOptionsMixin","text":"<pre><code>withTimeOptionsMixin(value=[\"5m\", \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\"])\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/librarypanel/","title":"librarypanel","text":"<p>grafonnet.librarypanel</p>"},{"location":"grafonnet/librarypanel/#index","title":"Index","text":"<ul> <li><code>fn withDescription(value)</code></li> <li><code>fn withFolderUid(value)</code></li> <li><code>fn withMeta(value)</code></li> <li><code>fn withMetaMixin(value)</code></li> <li><code>fn withModel(value)</code></li> <li><code>fn withModelMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withSchemaVersion(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>fn withVersion(value)</code></li> <li><code>obj meta</code></li> <li><code>fn withConnectedDashboards(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withCreatedBy(value)</code></li> <li><code>fn withCreatedByMixin(value)</code></li> <li><code>fn withFolderName(value)</code></li> <li><code>fn withFolderUid(value)</code></li> <li><code>fn withUpdated(value)</code></li> <li><code>fn withUpdatedBy(value)</code></li> <li><code>fn withUpdatedByMixin(value)</code></li> <li><code>obj createdBy</code><ul> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> <li><code>obj updatedBy</code><ul> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withName(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/librarypanel/#fields","title":"Fields","text":""},{"location":"grafonnet/librarypanel/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Panel description</p>"},{"location":"grafonnet/librarypanel/#fn-withfolderuid","title":"fn withFolderUid","text":"<pre><code>withFolderUid(value)\n</code></pre> <p>Folder UID</p>"},{"location":"grafonnet/librarypanel/#fn-withmeta","title":"fn withMeta","text":"<pre><code>withMeta(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-withmetamixin","title":"fn withMetaMixin","text":"<pre><code>withMetaMixin(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-withmodel","title":"fn withModel","text":"<pre><code>withModel(value)\n</code></pre> <p>TODO: should be the same panel schema defined in dashboard Typescript: Omit;"},{"location":"grafonnet/librarypanel/#fn-withmodelmixin","title":"fn withModelMixin","text":"<pre><code>withModelMixin(value)\n</code></pre> <p>TODO: should be the same panel schema defined in dashboard Typescript: Omit;"},{"location":"grafonnet/librarypanel/#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Panel name (also saved in the model)</p>"},{"location":"grafonnet/librarypanel/#fn-withschemaversion","title":"fn withSchemaVersion","text":"<pre><code>withSchemaVersion(value)\n</code></pre> <p>Dashboard version when this was saved (zero if unknown)</p>"},{"location":"grafonnet/librarypanel/#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>The panel type (from inside the model)</p>"},{"location":"grafonnet/librarypanel/#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Library element UID</p>"},{"location":"grafonnet/librarypanel/#fn-withversion","title":"fn withVersion","text":"<pre><code>withVersion(value)\n</code></pre> <p>panel version, incremented each time the dashboard is updated.</p>"},{"location":"grafonnet/librarypanel/#obj-meta","title":"obj meta","text":""},{"location":"grafonnet/librarypanel/#fn-metawithconnecteddashboards","title":"fn meta.withConnectedDashboards","text":"<pre><code>withConnectedDashboards(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithcreated","title":"fn meta.withCreated","text":"<pre><code>withCreated(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithcreatedby","title":"fn meta.withCreatedBy","text":"<pre><code>withCreatedBy(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithcreatedbymixin","title":"fn meta.withCreatedByMixin","text":"<pre><code>withCreatedByMixin(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithfoldername","title":"fn meta.withFolderName","text":"<pre><code>withFolderName(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithfolderuid","title":"fn meta.withFolderUid","text":"<pre><code>withFolderUid(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithupdated","title":"fn meta.withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithupdatedby","title":"fn meta.withUpdatedBy","text":"<pre><code>withUpdatedBy(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metawithupdatedbymixin","title":"fn meta.withUpdatedByMixin","text":"<pre><code>withUpdatedByMixin(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#obj-metacreatedby","title":"obj meta.createdBy","text":""},{"location":"grafonnet/librarypanel/#fn-metacreatedbywithavatarurl","title":"fn meta.createdBy.withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metacreatedbywithid","title":"fn meta.createdBy.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metacreatedbywithname","title":"fn meta.createdBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#obj-metaupdatedby","title":"obj meta.updatedBy","text":""},{"location":"grafonnet/librarypanel/#fn-metaupdatedbywithavatarurl","title":"fn meta.updatedBy.withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metaupdatedbywithid","title":"fn meta.updatedBy.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/librarypanel/#fn-metaupdatedbywithname","title":"fn meta.updatedBy.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/","title":"panel","text":"<p>grafonnet.panel</p>"},{"location":"grafonnet/panel/#subpackages","title":"Subpackages","text":"<ul> <li>alertGroups</li> <li>annotationsList</li> <li>barChart</li> <li>barGauge</li> <li>candlestick</li> <li>canvas</li> <li>dashboardList</li> <li>debug</li> <li>gauge</li> <li>geomap</li> <li>heatmap</li> <li>histogram</li> <li>logs</li> <li>news</li> <li>nodeGraph</li> <li>pieChart</li> <li>row</li> <li>stat</li> <li>stateTimeline</li> <li>statusHistory</li> <li>table</li> <li>text</li> <li>timeSeries</li> <li>xyChart</li> </ul>"},{"location":"grafonnet/playlist/","title":"playlist","text":"<p>grafonnet.playlist</p>"},{"location":"grafonnet/playlist/#index","title":"Index","text":"<ul> <li><code>fn withInterval(value='5m')</code></li> <li><code>fn withItems(value)</code></li> <li><code>fn withItemsMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj items</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withValue(value)</code></li> </ul>"},{"location":"grafonnet/playlist/#fields","title":"Fields","text":""},{"location":"grafonnet/playlist/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value='5m')\n</code></pre> <p>Interval sets the time between switching views in a playlist. FIXME: Is this based on a standardized format or what options are available? Can datemath be used?</p>"},{"location":"grafonnet/playlist/#fn-withitems","title":"fn withItems","text":"<pre><code>withItems(value)\n</code></pre> <p>The ordered list of items that the playlist will iterate over. FIXME! This should not be optional, but changing it makes the godegen awkward</p>"},{"location":"grafonnet/playlist/#fn-withitemsmixin","title":"fn withItemsMixin","text":"<pre><code>withItemsMixin(value)\n</code></pre> <p>The ordered list of items that the playlist will iterate over. FIXME! This should not be optional, but changing it makes the godegen awkward</p>"},{"location":"grafonnet/playlist/#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the playlist.</p>"},{"location":"grafonnet/playlist/#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique playlist identifier. Generated on creation, either by the creator of the playlist of by the application.</p>"},{"location":"grafonnet/playlist/#obj-items","title":"obj items","text":""},{"location":"grafonnet/playlist/#fn-itemswithtitle","title":"fn items.withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Title is an unused property -- it will be removed in the future</p>"},{"location":"grafonnet/playlist/#fn-itemswithtype","title":"fn items.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Type of the item.</p> <p>Accepted values for <code>value</code> are dashboard_by_uid, dashboard_by_id, dashboard_by_tag</p>"},{"location":"grafonnet/playlist/#fn-itemswithvalue","title":"fn items.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>Value depends on type and describes the playlist item.</p> <ul> <li>dashboard_by_id: The value is an internal numerical identifier set by Grafana. This  is not portable as the numerical identifier is non-deterministic between different instances.  Will be replaced by dashboard_by_uid in the future. (deprecated)</li> <li>dashboard_by_tag: The value is a tag which is set on any number of dashboards. All  dashboards behind the tag will be added to the playlist.</li> <li>dashboard_by_uid: The value is the dashboard UID</li> </ul>"},{"location":"grafonnet/preferences/","title":"preferences","text":"<p>grafonnet.preferences</p>"},{"location":"grafonnet/preferences/#index","title":"Index","text":"<ul> <li><code>fn withHomeDashboardUID(value)</code></li> <li><code>fn withLanguage(value)</code></li> <li><code>fn withQueryHistory(value)</code></li> <li><code>fn withQueryHistoryMixin(value)</code></li> <li><code>fn withTheme(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withWeekStart(value)</code></li> <li><code>obj queryHistory</code></li> <li><code>fn withHomeTab(value)</code></li> </ul>"},{"location":"grafonnet/preferences/#fields","title":"Fields","text":""},{"location":"grafonnet/preferences/#fn-withhomedashboarduid","title":"fn withHomeDashboardUID","text":"<pre><code>withHomeDashboardUID(value)\n</code></pre> <p>UID for the home dashboard</p>"},{"location":"grafonnet/preferences/#fn-withlanguage","title":"fn withLanguage","text":"<pre><code>withLanguage(value)\n</code></pre> <p>Selected language (beta)</p>"},{"location":"grafonnet/preferences/#fn-withqueryhistory","title":"fn withQueryHistory","text":"<pre><code>withQueryHistory(value)\n</code></pre>"},{"location":"grafonnet/preferences/#fn-withqueryhistorymixin","title":"fn withQueryHistoryMixin","text":"<pre><code>withQueryHistoryMixin(value)\n</code></pre>"},{"location":"grafonnet/preferences/#fn-withtheme","title":"fn withTheme","text":"<pre><code>withTheme(value)\n</code></pre> <p>light, dark, empty is default</p>"},{"location":"grafonnet/preferences/#fn-withtimezone","title":"fn withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre> <p>The timezone selection TODO: this should use the timezone defined in common</p>"},{"location":"grafonnet/preferences/#fn-withweekstart","title":"fn withWeekStart","text":"<pre><code>withWeekStart(value)\n</code></pre> <p>day of the week (sunday, monday, etc)</p>"},{"location":"grafonnet/preferences/#obj-queryhistory","title":"obj queryHistory","text":""},{"location":"grafonnet/preferences/#fn-queryhistorywithhometab","title":"fn queryHistory.withHomeTab","text":"<pre><code>withHomeTab(value)\n</code></pre> <p>one of: '' | 'query' | 'starred';</p>"},{"location":"grafonnet/publicdashboard/","title":"publicdashboard","text":"<p>grafonnet.publicdashboard</p>"},{"location":"grafonnet/publicdashboard/#index","title":"Index","text":"<ul> <li><code>fn withAccessToken(value)</code></li> <li><code>fn withAnnotationsEnabled(value)</code></li> <li><code>fn withDashboardUid(value)</code></li> <li><code>fn withIsEnabled(value)</code></li> <li><code>fn withTimeSelectionEnabled(value)</code></li> <li><code>fn withUid(value)</code></li> </ul>"},{"location":"grafonnet/publicdashboard/#fields","title":"Fields","text":""},{"location":"grafonnet/publicdashboard/#fn-withaccesstoken","title":"fn withAccessToken","text":"<pre><code>withAccessToken(value)\n</code></pre> <p>Unique public access token</p>"},{"location":"grafonnet/publicdashboard/#fn-withannotationsenabled","title":"fn withAnnotationsEnabled","text":"<pre><code>withAnnotationsEnabled(value)\n</code></pre> <p>Flag that indicates if annotations are enabled</p>"},{"location":"grafonnet/publicdashboard/#fn-withdashboarduid","title":"fn withDashboardUid","text":"<pre><code>withDashboardUid(value)\n</code></pre> <p>Dashboard unique identifier referenced by this public dashboard</p>"},{"location":"grafonnet/publicdashboard/#fn-withisenabled","title":"fn withIsEnabled","text":"<pre><code>withIsEnabled(value)\n</code></pre> <p>Flag that indicates if the public dashboard is enabled</p>"},{"location":"grafonnet/publicdashboard/#fn-withtimeselectionenabled","title":"fn withTimeSelectionEnabled","text":"<pre><code>withTimeSelectionEnabled(value)\n</code></pre> <p>Flag that indicates if the time range picker is enabled</p>"},{"location":"grafonnet/publicdashboard/#fn-withuid","title":"fn withUid","text":"<pre><code>withUid(value)\n</code></pre> <p>Unique public dashboard identifier</p>"},{"location":"grafonnet/query/","title":"query","text":"<p>grafonnet.query</p>"},{"location":"grafonnet/query/#subpackages","title":"Subpackages","text":"<ul> <li>azureMonitor</li> <li>cloudWatch</li> <li>elasticsearch</li> <li>loki</li> <li>parca</li> <li>phlare</li> <li>prometheus</li> <li>tempo</li> <li>testData</li> </ul>"},{"location":"grafonnet/serviceaccount/","title":"serviceaccount","text":"<p>grafonnet.serviceaccount</p>"},{"location":"grafonnet/serviceaccount/#index","title":"Index","text":"<ul> <li><code>fn withAccessControl(value)</code></li> <li><code>fn withAccessControlMixin(value)</code></li> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withIsDisabled(value)</code></li> <li><code>fn withLogin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOrgId(value)</code></li> <li><code>fn withRole(value)</code></li> <li><code>fn withTeams(value)</code></li> <li><code>fn withTeamsMixin(value)</code></li> <li><code>fn withTokens(value)</code></li> <li><code>fn withUpdated(value)</code></li> </ul>"},{"location":"grafonnet/serviceaccount/#fields","title":"Fields","text":""},{"location":"grafonnet/serviceaccount/#fn-withaccesscontrol","title":"fn withAccessControl","text":"<pre><code>withAccessControl(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/serviceaccount/#fn-withaccesscontrolmixin","title":"fn withAccessControlMixin","text":"<pre><code>withAccessControlMixin(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/serviceaccount/#fn-withavatarurl","title":"fn withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre> <p>AvatarUrl is the service account's avatar URL. It allows the frontend to display a picture in front of the service account.</p>"},{"location":"grafonnet/serviceaccount/#fn-withcreated","title":"fn withCreated","text":"<pre><code>withCreated(value)\n</code></pre> <p>Created indicates when the service account was created.</p>"},{"location":"grafonnet/serviceaccount/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>ID is the unique identifier of the service account in the database.</p>"},{"location":"grafonnet/serviceaccount/#fn-withisdisabled","title":"fn withIsDisabled","text":"<pre><code>withIsDisabled(value)\n</code></pre> <p>IsDisabled indicates if the service account is disabled.</p>"},{"location":"grafonnet/serviceaccount/#fn-withlogin","title":"fn withLogin","text":"<pre><code>withLogin(value)\n</code></pre> <p>Login of the service account.</p>"},{"location":"grafonnet/serviceaccount/#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the service account.</p>"},{"location":"grafonnet/serviceaccount/#fn-withorgid","title":"fn withOrgId","text":"<pre><code>withOrgId(value)\n</code></pre> <p>OrgId is the ID of an organisation the service account belongs to.</p>"},{"location":"grafonnet/serviceaccount/#fn-withrole","title":"fn withRole","text":"<pre><code>withRole(value)\n</code></pre> <p>OrgRole is a Grafana Organization Role which can be 'Viewer', 'Editor', 'Admin'.</p> <p>Accepted values for <code>value</code> are Admin, Editor, Viewer</p>"},{"location":"grafonnet/serviceaccount/#fn-withteams","title":"fn withTeams","text":"<pre><code>withTeams(value)\n</code></pre> <p>Teams is a list of teams the service account belongs to.</p>"},{"location":"grafonnet/serviceaccount/#fn-withteamsmixin","title":"fn withTeamsMixin","text":"<pre><code>withTeamsMixin(value)\n</code></pre> <p>Teams is a list of teams the service account belongs to.</p>"},{"location":"grafonnet/serviceaccount/#fn-withtokens","title":"fn withTokens","text":"<pre><code>withTokens(value)\n</code></pre> <p>Tokens is the number of active tokens for the service account. Tokens are used to authenticate the service account against Grafana.</p>"},{"location":"grafonnet/serviceaccount/#fn-withupdated","title":"fn withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre> <p>Updated indicates when the service account was updated.</p>"},{"location":"grafonnet/team/","title":"team","text":"<p>grafonnet.team</p>"},{"location":"grafonnet/team/#index","title":"Index","text":"<ul> <li><code>fn withAccessControl(value)</code></li> <li><code>fn withAccessControlMixin(value)</code></li> <li><code>fn withAvatarUrl(value)</code></li> <li><code>fn withCreated(value)</code></li> <li><code>fn withEmail(value)</code></li> <li><code>fn withMemberCount(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOrgId(value)</code></li> <li><code>fn withPermission(value)</code></li> <li><code>fn withUpdated(value)</code></li> </ul>"},{"location":"grafonnet/team/#fields","title":"Fields","text":""},{"location":"grafonnet/team/#fn-withaccesscontrol","title":"fn withAccessControl","text":"<pre><code>withAccessControl(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/team/#fn-withaccesscontrolmixin","title":"fn withAccessControlMixin","text":"<pre><code>withAccessControlMixin(value)\n</code></pre> <p>AccessControl metadata associated with a given resource.</p>"},{"location":"grafonnet/team/#fn-withavatarurl","title":"fn withAvatarUrl","text":"<pre><code>withAvatarUrl(value)\n</code></pre> <p>AvatarUrl is the team's avatar URL.</p>"},{"location":"grafonnet/team/#fn-withcreated","title":"fn withCreated","text":"<pre><code>withCreated(value)\n</code></pre> <p>Created indicates when the team was created.</p>"},{"location":"grafonnet/team/#fn-withemail","title":"fn withEmail","text":"<pre><code>withEmail(value)\n</code></pre> <p>Email of the team.</p>"},{"location":"grafonnet/team/#fn-withmembercount","title":"fn withMemberCount","text":"<pre><code>withMemberCount(value)\n</code></pre> <p>MemberCount is the number of the team members.</p>"},{"location":"grafonnet/team/#fn-withname","title":"fn withName","text":"<pre><code>withName(value)\n</code></pre> <p>Name of the team.</p>"},{"location":"grafonnet/team/#fn-withorgid","title":"fn withOrgId","text":"<pre><code>withOrgId(value)\n</code></pre> <p>OrgId is the ID of an organisation the team belongs to.</p>"},{"location":"grafonnet/team/#fn-withpermission","title":"fn withPermission","text":"<pre><code>withPermission(value)\n</code></pre> <p>Accepted values for <code>value</code> are 0, 1, 2, 4</p>"},{"location":"grafonnet/team/#fn-withupdated","title":"fn withUpdated","text":"<pre><code>withUpdated(value)\n</code></pre> <p>Updated indicates when the team was updated.</p>"},{"location":"grafonnet/util/","title":"util","text":"<p>Helper functions that work well with Grafonnet.</p>"},{"location":"grafonnet/util/#index","title":"Index","text":"<ul> <li><code>obj dashboard</code></li> <li><code>fn getOptionsForCustomQuery(query)</code></li> <li><code>obj grid</code></li> <li><code>fn makeGrid(panels, panelWidth, panelHeight)</code></li> <li><code>obj panel</code></li> <li><code>fn setPanelIDs(panels)</code></li> <li><code>obj string</code></li> <li><code>fn slugify(string)</code></li> </ul>"},{"location":"grafonnet/util/#fields","title":"Fields","text":""},{"location":"grafonnet/util/#obj-dashboard","title":"obj dashboard","text":""},{"location":"grafonnet/util/#fn-dashboardgetoptionsforcustomquery","title":"fn dashboard.getOptionsForCustomQuery","text":"<pre><code>getOptionsForCustomQuery(query)\n</code></pre> <p><code>getOptionsForCustomQuery</code> provides values for the <code>options</code> and <code>current</code> fields. These are required for template variables of type 'custom'but do not automatically get populated by Grafana when importing a dashboard from JSON.</p> <p>This is a bit of a hack and should always be called on functions that set <code>type</code> on a template variable (see the dashboard.templating.list veneer). Ideally Grafana populates these fields from the <code>query</code> value but this provides a backwards compatible solution.</p>"},{"location":"grafonnet/util/#obj-grid","title":"obj grid","text":""},{"location":"grafonnet/util/#fn-gridmakegrid","title":"fn grid.makeGrid","text":"<pre><code>makeGrid(panels, panelWidth, panelHeight)\n</code></pre> <p><code>makeGrid</code> returns an array of <code>panels</code> organized in a grid with equal <code>panelWidth</code> and <code>panelHeight</code>. Row panels are used as \"linebreaks\", if a Row panel is collapsed, then all panels below it will be folded into the row.</p> <p>This function will use the full grid of 24 columns, setting <code>panelWidth</code> to a value that can divide 24 into equal parts will fill up the page nicely. (1, 2, 3, 4, 6, 8, 12) Other value for <code>panelWidth</code> will leave a gap on the far right.</p>"},{"location":"grafonnet/util/#obj-panel","title":"obj panel","text":""},{"location":"grafonnet/util/#fn-panelsetpanelids","title":"fn panel.setPanelIDs","text":"<pre><code>setPanelIDs(panels)\n</code></pre> <p><code>setPanelIDs</code> ensures that all <code>panels</code> have a unique ID, this functions is used in <code>dashboard.withPanels</code> and <code>dashboard.withPanelsMixin</code> to provide a consistent experience.</p> <p>used in ../veneer/dashboard.libsonnet</p>"},{"location":"grafonnet/util/#obj-string","title":"obj string","text":""},{"location":"grafonnet/util/#fn-stringslugify","title":"fn string.slugify","text":"<pre><code>slugify(string)\n</code></pre> <p><code>slugify</code> will create a simple slug from <code>string</code>, keeping only alphanumeric characters and replacing spaces with dashes.</p>"},{"location":"grafonnet/panel/","title":"grafonnet.panel","text":"<ul> <li>alertGroups</li> <li>annotationsList</li> <li>barChart</li> <li>barGauge</li> <li>candlestick</li> <li>canvas</li> <li>dashboardList</li> <li>debug</li> <li>gauge</li> <li>geomap</li> <li>heatmap</li> <li>histogram</li> <li>logs</li> <li>news</li> <li>nodeGraph</li> <li>pieChart</li> <li>row</li> <li>stat</li> <li>stateTimeline</li> <li>statusHistory</li> <li>table</li> <li>text</li> <li>timeSeries</li> <li>xyChart</li> </ul>"},{"location":"grafonnet/panel/alertGroups/","title":"alertGroups","text":"<p>grafonnet.panel.alertGroups</p>"},{"location":"grafonnet/panel/alertGroups/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withAlertmanager(value)</code></li> <li><code>fn withExpandAll(value)</code></li> <li><code>fn withLabels(value)</code></li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/alertGroups/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/alertGroups/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new alertGroups panel with a title.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/alertGroups/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/alertGroups/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/alertGroups/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/alertGroups/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/alertGroups/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/alertGroups/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/alertGroups/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/alertGroups/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/alertGroups/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/alertGroups/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/alertGroups/#fn-optionswithalertmanager","title":"fn options.withAlertmanager","text":"<pre><code>withAlertmanager(value)\n</code></pre> <p>Name of the alertmanager used as a source for alerts</p>"},{"location":"grafonnet/panel/alertGroups/#fn-optionswithexpandall","title":"fn options.withExpandAll","text":"<pre><code>withExpandAll(value)\n</code></pre> <p>Expand all alert groups by default</p>"},{"location":"grafonnet/panel/alertGroups/#fn-optionswithlabels","title":"fn options.withLabels","text":"<pre><code>withLabels(value)\n</code></pre> <p>Comma-separated list of values used to filter alert results</p>"},{"location":"grafonnet/panel/alertGroups/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/alertGroups/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/alertGroups/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/alertGroups/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/alertGroups/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/alertGroups/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/alertGroups/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/","title":"annotationsList","text":"<p>grafonnet.panel.annotationsList</p>"},{"location":"grafonnet/panel/annotationsList/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withLimit(value=10)</code></li> <li><code>fn withNavigateAfter(value='10m')</code></li> <li><code>fn withNavigateBefore(value='10m')</code></li> <li><code>fn withNavigateToPanel(value=true)</code></li> <li><code>fn withOnlyFromThisDashboard(value=false)</code></li> <li><code>fn withOnlyInTimeRange(value=false)</code></li> <li><code>fn withShowTags(value=true)</code></li> <li><code>fn withShowTime(value=true)</code></li> <li><code>fn withShowUser(value=true)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/annotationsList/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/annotationsList/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new annotationsList panel with a title.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/annotationsList/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/annotationsList/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/annotationsList/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/annotationsList/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/annotationsList/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/annotationsList/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/annotationsList/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/annotationsList/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/annotationsList/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/annotationsList/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/annotationsList/#fn-optionswithlimit","title":"fn options.withLimit","text":"<pre><code>withLimit(value=10)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithnavigateafter","title":"fn options.withNavigateAfter","text":"<pre><code>withNavigateAfter(value='10m')\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithnavigatebefore","title":"fn options.withNavigateBefore","text":"<pre><code>withNavigateBefore(value='10m')\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithnavigatetopanel","title":"fn options.withNavigateToPanel","text":"<pre><code>withNavigateToPanel(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithonlyfromthisdashboard","title":"fn options.withOnlyFromThisDashboard","text":"<pre><code>withOnlyFromThisDashboard(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithonlyintimerange","title":"fn options.withOnlyInTimeRange","text":"<pre><code>withOnlyInTimeRange(value=false)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithshowtags","title":"fn options.withShowTags","text":"<pre><code>withShowTags(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithshowtime","title":"fn options.withShowTime","text":"<pre><code>withShowTime(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithshowuser","title":"fn options.withShowUser","text":"<pre><code>withShowUser(value=true)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithtags","title":"fn options.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-optionswithtagsmixin","title":"fn options.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/annotationsList/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/annotationsList/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/annotationsList/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/annotationsList/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/annotationsList/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/annotationsList/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/","title":"barChart","text":"<p>grafonnet.panel.barChart</p>"},{"location":"grafonnet/panel/barChart/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj custom</code></li> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withFillOpacity(value=80)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withThresholdsStyle(value)</code></li> <li><code>fn withThresholdsStyleMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholdsStyle</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withBarRadius(value=0)</code></li> <li><code>fn withBarWidth(value=0.96999999999999997)</code></li> <li><code>fn withColorByField(value)</code></li> <li><code>fn withFullHighlight(value=false)</code></li> <li><code>fn withGroupWidth(value=0.69999999999999996)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withStacking(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withXField(value)</code></li> <li><code>fn withXTickLabelMaxLength(value)</code></li> <li><code>fn withXTickLabelRotation(value=0)</code></li> <li><code>fn withXTickLabelSpacing(value=0)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/barChart/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/barChart/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new barChart panel with a title.</p>"},{"location":"grafonnet/panel/barChart/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barChart/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barChart/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/barChart/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barChart/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barChart/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barChart/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/barChart/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/barChart/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/barChart/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/barChart/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barChart/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barChart/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barChart/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barChart/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/barChart/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/barChart/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/barChart/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are text, series</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, top, right, bottom, left, hidden</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=80)\n</code></pre> <p>Controls the fill opacity of the bars.</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are none, opacity, hue, scheme</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre> <p>Controls line width of the bars.</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwiththresholdsstyle","title":"fn fieldConfig.defaults.custom.withThresholdsStyle","text":"<pre><code>withThresholdsStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomwiththresholdsstylemixin","title":"fn fieldConfig.defaults.custom.withThresholdsStyleMixin","text":"<pre><code>withThresholdsStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultscustomthresholdsstyle","title":"obj fieldConfig.defaults.custom.thresholdsStyle","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultscustomthresholdsstylewithmode","title":"# fn fieldConfig.defaults.custom.thresholdsStyle.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are off, line, dashed, area, line+area, dashed+area, series</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/barChart/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barChart/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/barChart/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barChart/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/barChart/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/barChart/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/barChart/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/barChart/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/barChart/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/barChart/#fn-optionswithbarradius","title":"fn options.withBarRadius","text":"<pre><code>withBarRadius(value=0)\n</code></pre> <p>Controls the radius of each bar.</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithbarwidth","title":"fn options.withBarWidth","text":"<pre><code>withBarWidth(value=0.96999999999999997)\n</code></pre> <p>Controls the width of bars. 1 = Max width, 0 = Min width.</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithcolorbyfield","title":"fn options.withColorByField","text":"<pre><code>withColorByField(value)\n</code></pre> <p>Use the color value for a sibling field to color each bar value.</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithfullhighlight","title":"fn options.withFullHighlight","text":"<pre><code>withFullHighlight(value=false)\n</code></pre> <p>Enables mode which highlights the entire bar area and shows tooltip when cursor hovers over highlighted area</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithgroupwidth","title":"fn options.withGroupWidth","text":"<pre><code>withGroupWidth(value=0.69999999999999996)\n</code></pre> <p>Controls the width of groups. 1 = max with, 0 = min width.</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, vertical, horizontal</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, never, always</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithstacking","title":"fn options.withStacking","text":"<pre><code>withStacking(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are none, normal, percent</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithxfield","title":"fn options.withXField","text":"<pre><code>withXField(value)\n</code></pre> <p>Manually select which field from the dataset to represent the x field.</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithxticklabelmaxlength","title":"fn options.withXTickLabelMaxLength","text":"<pre><code>withXTickLabelMaxLength(value)\n</code></pre> <p>Sets the max length that a label can have before it is truncated.</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithxticklabelrotation","title":"fn options.withXTickLabelRotation","text":"<pre><code>withXTickLabelRotation(value=0)\n</code></pre> <p>Controls the rotation of the x axis labels.</p>"},{"location":"grafonnet/panel/barChart/#fn-optionswithxticklabelspacing","title":"fn options.withXTickLabelSpacing","text":"<pre><code>withXTickLabelSpacing(value=0)\n</code></pre> <p>Controls the spacing between x axis labels. negative values indicate backwards skipping behavior</p>"},{"location":"grafonnet/panel/barChart/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are list, table, hidden</p>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are bottom, right</p>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/barChart/#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/barChart/#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/barChart/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/barChart/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are single, multi, none</p>"},{"location":"grafonnet/panel/barChart/#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are asc, desc, none</p>"},{"location":"grafonnet/panel/barChart/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/barChart/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/barChart/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/barChart/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/barChart/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/barChart/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/barChart/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/","title":"barGauge","text":"<p>grafonnet.panel.barGauge</p>"},{"location":"grafonnet/panel/barGauge/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withMinVizHeight(value=10)</code></li> <li><code>fn withMinVizWidth(value=0)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withShowUnfilled(value=true)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withValueMode(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/barGauge/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/barGauge/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new barGauge panel with a title.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barGauge/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barGauge/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/barGauge/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/barGauge/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/barGauge/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barGauge/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/barGauge/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/barGauge/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/barGauge/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barGauge/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/barGauge/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/barGauge/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/barGauge/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/barGauge/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/barGauge/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/barGauge/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/barGauge/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/barGauge/#fn-optionswithdisplaymode","title":"fn options.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>Enum expressing the possible display modes for the bar gauge component of Grafana UI</p> <p>Accepted values for <code>value</code> are basic, lcd, gradient</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithminvizheight","title":"fn options.withMinVizHeight","text":"<pre><code>withMinVizHeight(value=10)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithminvizwidth","title":"fn options.withMinVizWidth","text":"<pre><code>withMinVizWidth(value=0)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, vertical, horizontal</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithshowunfilled","title":"fn options.withShowUnfilled","text":"<pre><code>withShowUnfilled(value=true)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionswithvaluemode","title":"fn options.withValueMode","text":"<pre><code>withValueMode(value)\n</code></pre> <p>Allows for the table cell gauge display type to set the gauge mode.</p> <p>Accepted values for <code>value</code> are color, text, hidden</p>"},{"location":"grafonnet/panel/barGauge/#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/barGauge/#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/barGauge/#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/barGauge/#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/barGauge/#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/barGauge/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/barGauge/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/barGauge/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/barGauge/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/barGauge/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/barGauge/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/barGauge/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/","title":"candlestick","text":"<p>grafonnet.panel.candlestick</p>"},{"location":"grafonnet/panel/candlestick/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/candlestick/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/candlestick/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new candlestick panel with a title.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/candlestick/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/candlestick/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/candlestick/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/candlestick/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/candlestick/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/candlestick/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/candlestick/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/candlestick/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/candlestick/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/candlestick/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/candlestick/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/candlestick/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/candlestick/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/candlestick/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/candlestick/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/candlestick/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/candlestick/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/candlestick/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/candlestick/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/candlestick/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/candlestick/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/candlestick/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/candlestick/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/","title":"canvas","text":"<p>grafonnet.panel.canvas</p>"},{"location":"grafonnet/panel/canvas/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/canvas/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/canvas/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new canvas panel with a title.</p>"},{"location":"grafonnet/panel/canvas/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/canvas/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/canvas/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/canvas/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/canvas/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/canvas/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/canvas/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/canvas/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/canvas/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/canvas/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/canvas/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/canvas/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/canvas/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/canvas/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/canvas/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/canvas/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/canvas/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/canvas/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/canvas/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/canvas/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/canvas/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/canvas/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/canvas/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/canvas/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/canvas/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/canvas/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/canvas/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/canvas/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/canvas/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/canvas/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/canvas/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/canvas/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/canvas/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/","title":"dashboardList","text":"<p>grafonnet.panel.dashboardList</p>"},{"location":"grafonnet/panel/dashboardList/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFolderId(value)</code></li> <li><code>fn withLayout(value)</code></li> <li><code>fn withMaxItems(value=10)</code></li> <li><code>fn withQuery(value='')</code></li> <li><code>fn withShowHeadings(value=true)</code></li> <li><code>fn withShowRecentlyViewed(value=false)</code></li> <li><code>fn withShowSearch(value=false)</code></li> <li><code>fn withShowStarred(value=true)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/dashboardList/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/dashboardList/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new dashboardList panel with a title.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/dashboardList/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/dashboardList/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/dashboardList/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/dashboardList/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/dashboardList/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/dashboardList/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/dashboardList/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/dashboardList/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/dashboardList/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/dashboardList/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/dashboardList/#fn-optionswithfolderid","title":"fn options.withFolderId","text":"<pre><code>withFolderId(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithlayout","title":"fn options.withLayout","text":"<pre><code>withLayout(value)\n</code></pre> <p>Accepted values for <code>value</code> are list, previews</p>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithmaxitems","title":"fn options.withMaxItems","text":"<pre><code>withMaxItems(value=10)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithquery","title":"fn options.withQuery","text":"<pre><code>withQuery(value='')\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithshowheadings","title":"fn options.withShowHeadings","text":"<pre><code>withShowHeadings(value=true)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithshowrecentlyviewed","title":"fn options.withShowRecentlyViewed","text":"<pre><code>withShowRecentlyViewed(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithshowsearch","title":"fn options.withShowSearch","text":"<pre><code>withShowSearch(value=false)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithshowstarred","title":"fn options.withShowStarred","text":"<pre><code>withShowStarred(value=true)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithtags","title":"fn options.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-optionswithtagsmixin","title":"fn options.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/dashboardList/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/dashboardList/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/dashboardList/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/dashboardList/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/dashboardList/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/dashboardList/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/","title":"debug","text":"<p>grafonnet.panel.debug</p>"},{"location":"grafonnet/panel/debug/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withCounters(value)</code></li> <li><code>fn withCountersMixin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>obj counters</code><ul> <li><code>fn withDataChanged(value)</code></li> <li><code>fn withRender(value)</code></li> <li><code>fn withSchemaChanged(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/debug/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/debug/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new debug panel with a title.</p>"},{"location":"grafonnet/panel/debug/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/debug/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/debug/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/debug/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/debug/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/debug/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/debug/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/debug/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/debug/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/debug/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/debug/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/debug/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/debug/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/debug/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/debug/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/debug/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/debug/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/debug/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/debug/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/debug/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/debug/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/debug/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/debug/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/debug/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/debug/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/debug/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/debug/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/debug/#fn-optionswithcounters","title":"fn options.withCounters","text":"<pre><code>withCounters(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-optionswithcountersmixin","title":"fn options.withCountersMixin","text":"<pre><code>withCountersMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-optionswithmode","title":"fn options.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are render, events, cursor, State, ThrowError</p>"},{"location":"grafonnet/panel/debug/#obj-optionscounters","title":"obj options.counters","text":""},{"location":"grafonnet/panel/debug/#fn-optionscounterswithdatachanged","title":"fn options.counters.withDataChanged","text":"<pre><code>withDataChanged(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-optionscounterswithrender","title":"fn options.counters.withRender","text":"<pre><code>withRender(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-optionscounterswithschemachanged","title":"fn options.counters.withSchemaChanged","text":"<pre><code>withSchemaChanged(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/debug/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/debug/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/debug/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/debug/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/debug/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/debug/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/","title":"gauge","text":"<p>grafonnet.panel.gauge</p>"},{"location":"grafonnet/panel/gauge/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withShowThresholdLabels(value=false)</code></li> <li><code>fn withShowThresholdMarkers(value=true)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/gauge/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/gauge/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new gauge panel with a title.</p>"},{"location":"grafonnet/panel/gauge/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/gauge/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/gauge/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/gauge/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/gauge/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/gauge/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/gauge/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/gauge/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/gauge/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/gauge/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/gauge/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/gauge/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/gauge/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/gauge/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/gauge/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/gauge/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/gauge/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/gauge/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/gauge/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/gauge/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/gauge/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/gauge/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/gauge/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/gauge/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/gauge/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/gauge/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/gauge/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/gauge/#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, vertical, horizontal</p>"},{"location":"grafonnet/panel/gauge/#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-optionswithshowthresholdlabels","title":"fn options.withShowThresholdLabels","text":"<pre><code>withShowThresholdLabels(value=false)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-optionswithshowthresholdmarkers","title":"fn options.withShowThresholdMarkers","text":"<pre><code>withShowThresholdMarkers(value=true)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/gauge/#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/gauge/#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/gauge/#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/gauge/#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/gauge/#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/gauge/#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/gauge/#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/gauge/#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/gauge/#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/gauge/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/gauge/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/gauge/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/gauge/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/gauge/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/gauge/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/gauge/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/","title":"geomap","text":"<p>grafonnet.panel.geomap</p>"},{"location":"grafonnet/panel/geomap/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withBasemap(value)</code></li> <li><code>fn withBasemapMixin(value)</code></li> <li><code>fn withControls(value)</code></li> <li><code>fn withControlsMixin(value)</code></li> <li><code>fn withLayers(value)</code></li> <li><code>fn withLayersMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withView(value)</code></li> <li><code>fn withViewMixin(value)</code></li> <li><code>obj basemap</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withFilterData(value)</code></li> <li><code>fn withLocation(value)</code></li> <li><code>fn withLocationMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOpacity(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj location</code></li> <li><code>fn withGazetteer(value)</code></li> <li><code>fn withGeohash(value)</code></li> <li><code>fn withLatitude(value)</code></li> <li><code>fn withLongitude(value)</code></li> <li><code>fn withLookup(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withWkt(value)</code></li> </ul> </li> <li><code>obj controls</code><ul> <li><code>fn withMouseWheelZoom(value)</code></li> <li><code>fn withShowAttribution(value)</code></li> <li><code>fn withShowDebug(value)</code></li> <li><code>fn withShowMeasure(value)</code></li> <li><code>fn withShowScale(value)</code></li> <li><code>fn withShowZoom(value)</code></li> </ul> </li> <li><code>obj layers</code><ul> <li><code>fn withConfig(value)</code></li> <li><code>fn withFilterData(value)</code></li> <li><code>fn withLocation(value)</code></li> <li><code>fn withLocationMixin(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withOpacity(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj location</code></li> <li><code>fn withGazetteer(value)</code></li> <li><code>fn withGeohash(value)</code></li> <li><code>fn withLatitude(value)</code></li> <li><code>fn withLongitude(value)</code></li> <li><code>fn withLookup(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withWkt(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj view</code><ul> <li><code>fn withAllLayers(value=true)</code></li> <li><code>fn withId(value='zero')</code></li> <li><code>fn withLastOnly(value)</code></li> <li><code>fn withLat(value=0)</code></li> <li><code>fn withLayer(value)</code></li> <li><code>fn withLon(value=0)</code></li> <li><code>fn withMaxZoom(value)</code></li> <li><code>fn withMinZoom(value)</code></li> <li><code>fn withPadding(value)</code></li> <li><code>fn withShared(value)</code></li> <li><code>fn withZoom(value=1)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/geomap/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/geomap/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new geomap panel with a title.</p>"},{"location":"grafonnet/panel/geomap/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/geomap/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/geomap/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/geomap/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/geomap/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/geomap/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/geomap/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/geomap/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/geomap/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/geomap/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/geomap/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/geomap/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/geomap/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/geomap/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/geomap/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/geomap/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/geomap/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/geomap/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/geomap/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/geomap/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/geomap/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/geomap/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/geomap/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/geomap/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/geomap/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/geomap/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/geomap/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/geomap/#fn-optionswithbasemap","title":"fn options.withBasemap","text":"<pre><code>withBasemap(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithbasemapmixin","title":"fn options.withBasemapMixin","text":"<pre><code>withBasemapMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithcontrols","title":"fn options.withControls","text":"<pre><code>withControls(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithcontrolsmixin","title":"fn options.withControlsMixin","text":"<pre><code>withControlsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithlayers","title":"fn options.withLayers","text":"<pre><code>withLayers(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithlayersmixin","title":"fn options.withLayersMixin","text":"<pre><code>withLayersMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithview","title":"fn options.withView","text":"<pre><code>withView(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionswithviewmixin","title":"fn options.withViewMixin","text":"<pre><code>withViewMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-optionsbasemap","title":"obj options.basemap","text":""},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithconfig","title":"fn options.basemap.withConfig","text":"<pre><code>withConfig(value)\n</code></pre> <p>Custom options depending on the type</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithfilterdata","title":"fn options.basemap.withFilterData","text":"<pre><code>withFilterData(value)\n</code></pre> <p>Defines a frame MatcherConfig that may filter data for the given layer</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithlocation","title":"fn options.basemap.withLocation","text":"<pre><code>withLocation(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithlocationmixin","title":"fn options.basemap.withLocationMixin","text":"<pre><code>withLocationMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithname","title":"fn options.basemap.withName","text":"<pre><code>withName(value)\n</code></pre> <p>configured unique display name</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithopacity","title":"fn options.basemap.withOpacity","text":"<pre><code>withOpacity(value)\n</code></pre> <p>Common properties: https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html Layer opacity (0-1)</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithtooltip","title":"fn options.basemap.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Check tooltip (defaults to true)</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemapwithtype","title":"fn options.basemap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-optionsbasemaplocation","title":"obj options.basemap.location","text":""},{"location":"grafonnet/panel/geomap/#fn-optionsbasemaplocationwithgazetteer","title":"fn options.basemap.location.withGazetteer","text":"<pre><code>withGazetteer(value)\n</code></pre> <p>Path to Gazetteer</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemaplocationwithgeohash","title":"fn options.basemap.location.withGeohash","text":"<pre><code>withGeohash(value)\n</code></pre> <p>Field mappings</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemaplocationwithlatitude","title":"fn options.basemap.location.withLatitude","text":"<pre><code>withLatitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemaplocationwithlongitude","title":"fn options.basemap.location.withLongitude","text":"<pre><code>withLongitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemaplocationwithlookup","title":"fn options.basemap.location.withLookup","text":"<pre><code>withLookup(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemaplocationwithmode","title":"fn options.basemap.location.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are auto, geohash, coords, lookup</p>"},{"location":"grafonnet/panel/geomap/#fn-optionsbasemaplocationwithwkt","title":"fn options.basemap.location.withWkt","text":"<pre><code>withWkt(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-optionscontrols","title":"obj options.controls","text":""},{"location":"grafonnet/panel/geomap/#fn-optionscontrolswithmousewheelzoom","title":"fn options.controls.withMouseWheelZoom","text":"<pre><code>withMouseWheelZoom(value)\n</code></pre> <p>let the mouse wheel zoom</p>"},{"location":"grafonnet/panel/geomap/#fn-optionscontrolswithshowattribution","title":"fn options.controls.withShowAttribution","text":"<pre><code>withShowAttribution(value)\n</code></pre> <p>Lower right</p>"},{"location":"grafonnet/panel/geomap/#fn-optionscontrolswithshowdebug","title":"fn options.controls.withShowDebug","text":"<pre><code>withShowDebug(value)\n</code></pre> <p>Show debug</p>"},{"location":"grafonnet/panel/geomap/#fn-optionscontrolswithshowmeasure","title":"fn options.controls.withShowMeasure","text":"<pre><code>withShowMeasure(value)\n</code></pre> <p>Show measure</p>"},{"location":"grafonnet/panel/geomap/#fn-optionscontrolswithshowscale","title":"fn options.controls.withShowScale","text":"<pre><code>withShowScale(value)\n</code></pre> <p>Scale options</p>"},{"location":"grafonnet/panel/geomap/#fn-optionscontrolswithshowzoom","title":"fn options.controls.withShowZoom","text":"<pre><code>withShowZoom(value)\n</code></pre> <p>Zoom (upper left)</p>"},{"location":"grafonnet/panel/geomap/#obj-optionslayers","title":"obj options.layers","text":""},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithconfig","title":"fn options.layers.withConfig","text":"<pre><code>withConfig(value)\n</code></pre> <p>Custom options depending on the type</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithfilterdata","title":"fn options.layers.withFilterData","text":"<pre><code>withFilterData(value)\n</code></pre> <p>Defines a frame MatcherConfig that may filter data for the given layer</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithlocation","title":"fn options.layers.withLocation","text":"<pre><code>withLocation(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithlocationmixin","title":"fn options.layers.withLocationMixin","text":"<pre><code>withLocationMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithname","title":"fn options.layers.withName","text":"<pre><code>withName(value)\n</code></pre> <p>configured unique display name</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithopacity","title":"fn options.layers.withOpacity","text":"<pre><code>withOpacity(value)\n</code></pre> <p>Common properties: https://openlayers.org/en/latest/apidoc/module-ol_layer_Base-BaseLayer.html Layer opacity (0-1)</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithtooltip","title":"fn options.layers.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Check tooltip (defaults to true)</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerswithtype","title":"fn options.layers.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-optionslayerslocation","title":"obj options.layers.location","text":""},{"location":"grafonnet/panel/geomap/#fn-optionslayerslocationwithgazetteer","title":"fn options.layers.location.withGazetteer","text":"<pre><code>withGazetteer(value)\n</code></pre> <p>Path to Gazetteer</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerslocationwithgeohash","title":"fn options.layers.location.withGeohash","text":"<pre><code>withGeohash(value)\n</code></pre> <p>Field mappings</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerslocationwithlatitude","title":"fn options.layers.location.withLatitude","text":"<pre><code>withLatitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerslocationwithlongitude","title":"fn options.layers.location.withLongitude","text":"<pre><code>withLongitude(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerslocationwithlookup","title":"fn options.layers.location.withLookup","text":"<pre><code>withLookup(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerslocationwithmode","title":"fn options.layers.location.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are auto, geohash, coords, lookup</p>"},{"location":"grafonnet/panel/geomap/#fn-optionslayerslocationwithwkt","title":"fn options.layers.location.withWkt","text":"<pre><code>withWkt(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/geomap/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are none, details</p>"},{"location":"grafonnet/panel/geomap/#obj-optionsview","title":"obj options.view","text":""},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithalllayers","title":"fn options.view.withAllLayers","text":"<pre><code>withAllLayers(value=true)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithid","title":"fn options.view.withId","text":"<pre><code>withId(value='zero')\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithlastonly","title":"fn options.view.withLastOnly","text":"<pre><code>withLastOnly(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithlat","title":"fn options.view.withLat","text":"<pre><code>withLat(value=0)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithlayer","title":"fn options.view.withLayer","text":"<pre><code>withLayer(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithlon","title":"fn options.view.withLon","text":"<pre><code>withLon(value=0)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithmaxzoom","title":"fn options.view.withMaxZoom","text":"<pre><code>withMaxZoom(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithminzoom","title":"fn options.view.withMinZoom","text":"<pre><code>withMinZoom(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithpadding","title":"fn options.view.withPadding","text":"<pre><code>withPadding(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithshared","title":"fn options.view.withShared","text":"<pre><code>withShared(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-optionsviewwithzoom","title":"fn options.view.withZoom","text":"<pre><code>withZoom(value=1)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/geomap/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/geomap/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/geomap/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/geomap/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/geomap/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/geomap/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/","title":"heatmap","text":"<p>grafonnet.panel.heatmap</p>"},{"location":"grafonnet/panel/heatmap/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj custom</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withCalculate(value=false)</code></li> <li><code>fn withCalculation(value)</code></li> <li><code>fn withCalculationMixin(value)</code></li> <li><code>fn withCellGap(value=1)</code></li> <li><code>fn withCellRadius(value)</code></li> <li><code>fn withCellValues(value={ })</code></li> <li><code>fn withCellValuesMixin(value={ })</code></li> <li><code>fn withColor(value={\"exponent\": 0.5, \"fill\": \"dark-orange\", \"reverse\": false, \"scheme\": \"Oranges\", \"steps\": 64})</code></li> <li><code>fn withColorMixin(value={\"exponent\": 0.5, \"fill\": \"dark-orange\", \"reverse\": false, \"scheme\": \"Oranges\", \"steps\": 64})</code></li> <li><code>fn withExemplars(value)</code></li> <li><code>fn withExemplarsMixin(value)</code></li> <li><code>fn withFilterValues(value={\"le\": 1.0000000000000001e-09})</code></li> <li><code>fn withFilterValuesMixin(value={\"le\": 1.0000000000000001e-09})</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withRowsFrame(value)</code></li> <li><code>fn withRowsFrameMixin(value)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>fn withYAxis(value)</code></li> <li><code>fn withYAxisMixin(value)</code></li> <li><code>obj calculation</code><ul> <li><code>fn withXBuckets(value)</code></li> <li><code>fn withXBucketsMixin(value)</code></li> <li><code>fn withYBuckets(value)</code></li> <li><code>fn withYBucketsMixin(value)</code></li> <li><code>obj xBuckets</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScaleMixin(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj scale</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj yBuckets</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScaleMixin(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj scale</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul> </li> <li><code>obj cellValues</code><ul> <li><code>fn withCellValues(value)</code></li> <li><code>fn withCellValuesMixin(value)</code></li> <li><code>obj CellValues</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withUnit(value)</code></li> </ul> </li> <li><code>obj color</code><ul> <li><code>fn withHeatmapColorOptions(value)</code></li> <li><code>fn withHeatmapColorOptionsMixin(value)</code></li> <li><code>obj HeatmapColorOptions</code></li> <li><code>fn withExponent(value)</code></li> <li><code>fn withFill(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withReverse(value)</code></li> <li><code>fn withScale(value)</code></li> <li><code>fn withScheme(value)</code></li> <li><code>fn withSteps(value)</code></li> </ul> </li> <li><code>obj exemplars</code><ul> <li><code>fn withColor(value)</code></li> </ul> </li> <li><code>obj filterValues</code><ul> <li><code>fn withFilterValueRange(value)</code></li> <li><code>fn withFilterValueRangeMixin(value)</code></li> <li><code>obj FilterValueRange</code></li> <li><code>fn withGe(value)</code></li> <li><code>fn withLe(value)</code></li> </ul> </li> <li><code>obj legend</code><ul> <li><code>fn withShow(value)</code></li> </ul> </li> <li><code>obj rowsFrame</code><ul> <li><code>fn withLayout(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withShow(value)</code></li> <li><code>fn withYHistogram(value)</code></li> </ul> </li> <li><code>obj yAxis</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withReverse(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>obj scaleDistribution</code></li> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/heatmap/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/heatmap/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new heatmap panel with a title.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/heatmap/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/heatmap/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/heatmap/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/heatmap/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/heatmap/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/heatmap/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/heatmap/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/heatmap/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/heatmap/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/heatmap/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/heatmap/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/heatmap/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/heatmap/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/heatmap/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/heatmap/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/heatmap/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/heatmap/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionswithcalculate","title":"fn options.withCalculate","text":"<pre><code>withCalculate(value=false)\n</code></pre> <p>Controls if the heatmap should be calculated from data</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcalculation","title":"fn options.withCalculation","text":"<pre><code>withCalculation(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcalculationmixin","title":"fn options.withCalculationMixin","text":"<pre><code>withCalculationMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcellgap","title":"fn options.withCellGap","text":"<pre><code>withCellGap(value=1)\n</code></pre> <p>Controls gap between cells</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcellradius","title":"fn options.withCellRadius","text":"<pre><code>withCellRadius(value)\n</code></pre> <p>Controls cell radius</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcellvalues","title":"fn options.withCellValues","text":"<pre><code>withCellValues(value={ })\n</code></pre> <p>Controls cell value unit</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcellvaluesmixin","title":"fn options.withCellValuesMixin","text":"<pre><code>withCellValuesMixin(value={ })\n</code></pre> <p>Controls cell value unit</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcolor","title":"fn options.withColor","text":"<pre><code>withColor(value={\"exponent\": 0.5, \"fill\": \"dark-orange\", \"reverse\": false, \"scheme\": \"Oranges\", \"steps\": 64})\n</code></pre> <p>Controls the color options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithcolormixin","title":"fn options.withColorMixin","text":"<pre><code>withColorMixin(value={\"exponent\": 0.5, \"fill\": \"dark-orange\", \"reverse\": false, \"scheme\": \"Oranges\", \"steps\": 64})\n</code></pre> <p>Controls the color options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithexemplars","title":"fn options.withExemplars","text":"<pre><code>withExemplars(value)\n</code></pre> <p>Controls exemplar options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithexemplarsmixin","title":"fn options.withExemplarsMixin","text":"<pre><code>withExemplarsMixin(value)\n</code></pre> <p>Controls exemplar options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithfiltervalues","title":"fn options.withFilterValues","text":"<pre><code>withFilterValues(value={\"le\": 1.0000000000000001e-09})\n</code></pre> <p>Filters values between a given range</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithfiltervaluesmixin","title":"fn options.withFilterValuesMixin","text":"<pre><code>withFilterValuesMixin(value={\"le\": 1.0000000000000001e-09})\n</code></pre> <p>Filters values between a given range</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>Controls legend options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>Controls legend options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithrowsframe","title":"fn options.withRowsFrame","text":"<pre><code>withRowsFrame(value)\n</code></pre> <p>Controls frame rows options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithrowsframemixin","title":"fn options.withRowsFrameMixin","text":"<pre><code>withRowsFrameMixin(value)\n</code></pre> <p>Controls frame rows options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, never, always</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>Controls tooltip options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>Controls tooltip options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithyaxis","title":"fn options.withYAxis","text":"<pre><code>withYAxis(value)\n</code></pre> <p>Configuration options for the yAxis</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionswithyaxismixin","title":"fn options.withYAxisMixin","text":"<pre><code>withYAxisMixin(value)\n</code></pre> <p>Configuration options for the yAxis</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscalculation","title":"obj options.calculation","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationwithxbuckets","title":"fn options.calculation.withXBuckets","text":"<pre><code>withXBuckets(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationwithxbucketsmixin","title":"fn options.calculation.withXBucketsMixin","text":"<pre><code>withXBucketsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationwithybuckets","title":"fn options.calculation.withYBuckets","text":"<pre><code>withYBuckets(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationwithybucketsmixin","title":"fn options.calculation.withYBucketsMixin","text":"<pre><code>withYBucketsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#obj-optionscalculationxbuckets","title":"obj options.calculation.xBuckets","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationxbucketswithmode","title":"fn options.calculation.xBuckets.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are size, count</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationxbucketswithscale","title":"fn options.calculation.xBuckets.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationxbucketswithscalemixin","title":"fn options.calculation.xBuckets.withScaleMixin","text":"<pre><code>withScaleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationxbucketswithvalue","title":"fn options.calculation.xBuckets.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The number of buckets to use for the axis in the heatmap</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscalculationxbucketsscale","title":"obj options.calculation.xBuckets.scale","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationxbucketsscalewithlinearthreshold","title":"# fn options.calculation.xBuckets.scale.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationxbucketsscalewithlog","title":"# fn options.calculation.xBuckets.scale.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationxbucketsscalewithtype","title":"# fn options.calculation.xBuckets.scale.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscalculationybuckets","title":"obj options.calculation.yBuckets","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationybucketswithmode","title":"fn options.calculation.yBuckets.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are size, count</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationybucketswithscale","title":"fn options.calculation.yBuckets.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationybucketswithscalemixin","title":"fn options.calculation.yBuckets.withScaleMixin","text":"<pre><code>withScaleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationybucketswithvalue","title":"fn options.calculation.yBuckets.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The number of buckets to use for the axis in the heatmap</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscalculationybucketsscale","title":"obj options.calculation.yBuckets.scale","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationybucketsscalewithlinearthreshold","title":"# fn options.calculation.yBuckets.scale.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationybucketsscalewithlog","title":"# fn options.calculation.yBuckets.scale.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionscalculationybucketsscalewithtype","title":"# fn options.calculation.yBuckets.scale.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscellvalues","title":"obj options.cellValues","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscellvalueswithcellvalues","title":"fn options.cellValues.withCellValues","text":"<pre><code>withCellValues(value)\n</code></pre> <p>Controls cell value options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscellvalueswithcellvaluesmixin","title":"fn options.cellValues.withCellValuesMixin","text":"<pre><code>withCellValuesMixin(value)\n</code></pre> <p>Controls cell value options</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscellvaluescellvalues","title":"obj options.cellValues.CellValues","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscellvaluescellvalueswithdecimals","title":"fn options.cellValues.CellValues.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Controls the number of decimals for cell values</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscellvaluescellvalueswithunit","title":"fn options.cellValues.CellValues.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Controls the cell value unit</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscolor","title":"obj options.color","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscolorwithheatmapcoloroptions","title":"fn options.color.withHeatmapColorOptions","text":"<pre><code>withHeatmapColorOptions(value)\n</code></pre> <p>Controls various color options</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorwithheatmapcoloroptionsmixin","title":"fn options.color.withHeatmapColorOptionsMixin","text":"<pre><code>withHeatmapColorOptionsMixin(value)\n</code></pre> <p>Controls various color options</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionscolorheatmapcoloroptions","title":"obj options.color.HeatmapColorOptions","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithexponent","title":"fn options.color.HeatmapColorOptions.withExponent","text":"<pre><code>withExponent(value)\n</code></pre> <p>Controls the exponent when scale is set to exponential</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithfill","title":"fn options.color.HeatmapColorOptions.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Controls the color fill when in opacity mode</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithmax","title":"fn options.color.HeatmapColorOptions.withMax","text":"<pre><code>withMax(value)\n</code></pre> <p>Sets the maximum value for the color scale</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithmin","title":"fn options.color.HeatmapColorOptions.withMin","text":"<pre><code>withMin(value)\n</code></pre> <p>Sets the minimum value for the color scale</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithmode","title":"fn options.color.HeatmapColorOptions.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Controls the color mode of the heatmap</p> <p>Accepted values for <code>value</code> are opacity, scheme</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithreverse","title":"fn options.color.HeatmapColorOptions.withReverse","text":"<pre><code>withReverse(value)\n</code></pre> <p>Reverses the color scheme</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithscale","title":"fn options.color.HeatmapColorOptions.withScale","text":"<pre><code>withScale(value)\n</code></pre> <p>Controls the color scale of the heatmap</p> <p>Accepted values for <code>value</code> are linear, exponential</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithscheme","title":"fn options.color.HeatmapColorOptions.withScheme","text":"<pre><code>withScheme(value)\n</code></pre> <p>Controls the color scheme used</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionscolorheatmapcoloroptionswithsteps","title":"fn options.color.HeatmapColorOptions.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Controls the number of color steps</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionsexemplars","title":"obj options.exemplars","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionsexemplarswithcolor","title":"fn options.exemplars.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>Sets the color of the exemplar markers</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionsfiltervalues","title":"obj options.filterValues","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionsfiltervalueswithfiltervaluerange","title":"fn options.filterValues.withFilterValueRange","text":"<pre><code>withFilterValueRange(value)\n</code></pre> <p>Controls the value filter range</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsfiltervalueswithfiltervaluerangemixin","title":"fn options.filterValues.withFilterValueRangeMixin","text":"<pre><code>withFilterValueRangeMixin(value)\n</code></pre> <p>Controls the value filter range</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionsfiltervaluesfiltervaluerange","title":"obj options.filterValues.FilterValueRange","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionsfiltervaluesfiltervaluerangewithge","title":"fn options.filterValues.FilterValueRange.withGe","text":"<pre><code>withGe(value)\n</code></pre> <p>Sets the filter range to values greater than or equal to the given value</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsfiltervaluesfiltervaluerangewithle","title":"fn options.filterValues.FilterValueRange.withLe","text":"<pre><code>withLe(value)\n</code></pre> <p>Sets the filter range to values less than or equal to the given value</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionslegendwithshow","title":"fn options.legend.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Controls if the legend is shown</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionsrowsframe","title":"obj options.rowsFrame","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionsrowsframewithlayout","title":"fn options.rowsFrame.withLayout","text":"<pre><code>withLayout(value)\n</code></pre> <p>Accepted values for <code>value</code> are le, ge, unknown, auto</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsrowsframewithvalue","title":"fn options.rowsFrame.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>Sets the name of the cell when not calculating from data</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionstooltipwithshow","title":"fn options.tooltip.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Controls if the tooltip is shown</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionstooltipwithyhistogram","title":"fn options.tooltip.withYHistogram","text":"<pre><code>withYHistogram(value)\n</code></pre> <p>Controls if the tooltip shows a histogram of the y-axis values</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionsyaxis","title":"obj options.yAxis","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxiscenteredzero","title":"fn options.yAxis.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxiscolormode","title":"fn options.yAxis.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are text, series</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxisgridshow","title":"fn options.yAxis.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxislabel","title":"fn options.yAxis.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxisplacement","title":"fn options.yAxis.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, top, right, bottom, left, hidden</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxissoftmax","title":"fn options.yAxis.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxissoftmin","title":"fn options.yAxis.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithaxiswidth","title":"fn options.yAxis.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithdecimals","title":"fn options.yAxis.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Controls the number of decimals for yAxis values</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithmax","title":"fn options.yAxis.withMax","text":"<pre><code>withMax(value)\n</code></pre> <p>Sets the maximum value for the yAxis</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithmin","title":"fn options.yAxis.withMin","text":"<pre><code>withMin(value)\n</code></pre> <p>Sets the minimum value for the yAxis</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithreverse","title":"fn options.yAxis.withReverse","text":"<pre><code>withReverse(value)\n</code></pre> <p>Reverses the yAxis</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithscaledistribution","title":"fn options.yAxis.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithscaledistributionmixin","title":"fn options.yAxis.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxiswithunit","title":"fn options.yAxis.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Sets the yAxis unit</p>"},{"location":"grafonnet/panel/heatmap/#obj-optionsyaxisscaledistribution","title":"obj options.yAxis.scaleDistribution","text":""},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxisscaledistributionwithlinearthreshold","title":"fn options.yAxis.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxisscaledistributionwithlog","title":"fn options.yAxis.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-optionsyaxisscaledistributionwithtype","title":"fn options.yAxis.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/heatmap/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/heatmap/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/heatmap/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/heatmap/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/heatmap/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/heatmap/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/heatmap/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/","title":"histogram","text":"<p>grafonnet.panel.histogram</p>"},{"location":"grafonnet/panel/histogram/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj custom</code></li> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withFillOpacity(value=80)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withBucketOffset(value=0)</code></li> <li><code>fn withBucketSize(value)</code></li> <li><code>fn withCombine(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/histogram/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/histogram/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new histogram panel with a title.</p>"},{"location":"grafonnet/panel/histogram/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/histogram/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/histogram/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/histogram/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/histogram/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/histogram/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/histogram/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/histogram/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/histogram/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/histogram/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/histogram/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/histogram/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/histogram/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/histogram/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/histogram/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/histogram/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/histogram/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/histogram/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are text, series</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, top, right, bottom, left, hidden</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=80)\n</code></pre> <p>Controls the fill opacity of the bars.</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are none, opacity, hue, scheme</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre> <p>Controls line width of the bars.</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/histogram/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/histogram/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/histogram/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/histogram/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/histogram/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/histogram/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/histogram/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/histogram/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/histogram/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/histogram/#fn-optionswithbucketoffset","title":"fn options.withBucketOffset","text":"<pre><code>withBucketOffset(value=0)\n</code></pre> <p>Offset buckets by this amount</p>"},{"location":"grafonnet/panel/histogram/#fn-optionswithbucketsize","title":"fn options.withBucketSize","text":"<pre><code>withBucketSize(value)\n</code></pre> <p>Size of each bucket</p>"},{"location":"grafonnet/panel/histogram/#fn-optionswithcombine","title":"fn options.withCombine","text":"<pre><code>withCombine(value)\n</code></pre> <p>Combines multiple series into a single histogram</p>"},{"location":"grafonnet/panel/histogram/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/histogram/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are list, table, hidden</p>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are bottom, right</p>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/histogram/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are single, multi, none</p>"},{"location":"grafonnet/panel/histogram/#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are asc, desc, none</p>"},{"location":"grafonnet/panel/histogram/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/histogram/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/histogram/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/histogram/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/histogram/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/histogram/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/histogram/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/","title":"logs","text":"<p>grafonnet.panel.logs</p>"},{"location":"grafonnet/panel/logs/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withDedupStrategy(value)</code></li> <li><code>fn withEnableLogDetails(value)</code></li> <li><code>fn withPrettifyLogMessage(value)</code></li> <li><code>fn withShowCommonLabels(value)</code></li> <li><code>fn withShowLabels(value)</code></li> <li><code>fn withShowTime(value)</code></li> <li><code>fn withSortOrder(value)</code></li> <li><code>fn withWrapLogMessage(value)</code></li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/logs/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/logs/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new logs panel with a title.</p>"},{"location":"grafonnet/panel/logs/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/logs/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/logs/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/logs/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/logs/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/logs/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/logs/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/logs/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/logs/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/logs/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/logs/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/logs/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/logs/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/logs/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/logs/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/logs/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/logs/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/logs/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/logs/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/logs/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/logs/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/logs/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/logs/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/logs/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/logs/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/logs/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/logs/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/logs/#fn-optionswithdedupstrategy","title":"fn options.withDedupStrategy","text":"<pre><code>withDedupStrategy(value)\n</code></pre> <p>Accepted values for <code>value</code> are none, exact, numbers, signature</p>"},{"location":"grafonnet/panel/logs/#fn-optionswithenablelogdetails","title":"fn options.withEnableLogDetails","text":"<pre><code>withEnableLogDetails(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-optionswithprettifylogmessage","title":"fn options.withPrettifyLogMessage","text":"<pre><code>withPrettifyLogMessage(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-optionswithshowcommonlabels","title":"fn options.withShowCommonLabels","text":"<pre><code>withShowCommonLabels(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-optionswithshowlabels","title":"fn options.withShowLabels","text":"<pre><code>withShowLabels(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-optionswithshowtime","title":"fn options.withShowTime","text":"<pre><code>withShowTime(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-optionswithsortorder","title":"fn options.withSortOrder","text":"<pre><code>withSortOrder(value)\n</code></pre> <p>Accepted values for <code>value</code> are Descending, Ascending</p>"},{"location":"grafonnet/panel/logs/#fn-optionswithwraplogmessage","title":"fn options.withWrapLogMessage","text":"<pre><code>withWrapLogMessage(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/logs/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/logs/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/logs/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/logs/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/logs/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/logs/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news/","title":"news","text":"<p>grafonnet.panel.news</p>"},{"location":"grafonnet/panel/news/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFeedUrl(value)</code></li> <li><code>fn withShowImage(value=true)</code></li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/news/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/news/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new news panel with a title.</p>"},{"location":"grafonnet/panel/news/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/news/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/news/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/news/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/news/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/news/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/news/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/news/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/news/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/news/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/news/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/news/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/news/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/news/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/news/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/news/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/news/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/news/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/news/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/news/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/news/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/news/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/news/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/news/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/news/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/news/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/news/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/news/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/news/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/news/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/news/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/news/#fn-optionswithfeedurl","title":"fn options.withFeedUrl","text":"<pre><code>withFeedUrl(value)\n</code></pre> <p>empty/missing will default to grafana blog</p>"},{"location":"grafonnet/panel/news/#fn-optionswithshowimage","title":"fn options.withShowImage","text":"<pre><code>withShowImage(value=true)\n</code></pre>"},{"location":"grafonnet/panel/news/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/news/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/news/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/news/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/news/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/news/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/news/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/","title":"nodeGraph","text":"<p>grafonnet.panel.nodeGraph</p>"},{"location":"grafonnet/panel/nodeGraph/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withEdges(value)</code></li> <li><code>fn withEdgesMixin(value)</code></li> <li><code>fn withNodes(value)</code></li> <li><code>fn withNodesMixin(value)</code></li> <li><code>obj edges</code><ul> <li><code>fn withMainStatUnit(value)</code></li> <li><code>fn withSecondaryStatUnit(value)</code></li> </ul> </li> <li><code>obj nodes</code><ul> <li><code>fn withArcs(value)</code></li> <li><code>fn withArcsMixin(value)</code></li> <li><code>fn withMainStatUnit(value)</code></li> <li><code>fn withSecondaryStatUnit(value)</code></li> <li><code>obj arcs</code></li> <li><code>fn withColor(value)</code></li> <li><code>fn withField(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/nodeGraph/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new nodeGraph panel with a title.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-optionswithedges","title":"fn options.withEdges","text":"<pre><code>withEdges(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionswithedgesmixin","title":"fn options.withEdgesMixin","text":"<pre><code>withEdgesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionswithnodes","title":"fn options.withNodes","text":"<pre><code>withNodes(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionswithnodesmixin","title":"fn options.withNodesMixin","text":"<pre><code>withNodesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#obj-optionsedges","title":"obj options.edges","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-optionsedgeswithmainstatunit","title":"fn options.edges.withMainStatUnit","text":"<pre><code>withMainStatUnit(value)\n</code></pre> <p>Unit for the main stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionsedgeswithsecondarystatunit","title":"fn options.edges.withSecondaryStatUnit","text":"<pre><code>withSecondaryStatUnit(value)\n</code></pre> <p>Unit for the secondary stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-optionsnodes","title":"obj options.nodes","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-optionsnodeswitharcs","title":"fn options.nodes.withArcs","text":"<pre><code>withArcs(value)\n</code></pre> <p>Define which fields are shown as part of the node arc (colored circle around the node).</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionsnodeswitharcsmixin","title":"fn options.nodes.withArcsMixin","text":"<pre><code>withArcsMixin(value)\n</code></pre> <p>Define which fields are shown as part of the node arc (colored circle around the node).</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionsnodeswithmainstatunit","title":"fn options.nodes.withMainStatUnit","text":"<pre><code>withMainStatUnit(value)\n</code></pre> <p>Unit for the main stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionsnodeswithsecondarystatunit","title":"fn options.nodes.withSecondaryStatUnit","text":"<pre><code>withSecondaryStatUnit(value)\n</code></pre> <p>Unit for the secondary stat to override what ever is set in the data frame.</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-optionsnodesarcs","title":"obj options.nodes.arcs","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-optionsnodesarcswithcolor","title":"fn options.nodes.arcs.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>The color of the arc.</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-optionsnodesarcswithfield","title":"fn options.nodes.arcs.withField","text":"<pre><code>withField(value)\n</code></pre> <p>Field from which to get the value. Values should be less than 1, representing fraction of a circle.</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/nodeGraph/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/nodeGraph/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/nodeGraph/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/nodeGraph/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/","title":"pieChart","text":"<p>grafonnet.panel.pieChart</p>"},{"location":"grafonnet/panel/pieChart/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj custom</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withDisplayLabels(value)</code></li> <li><code>fn withDisplayLabelsMixin(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withPieType(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withValues(value)</code></li> <li><code>fn withValuesMixin(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/pieChart/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/pieChart/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new pieChart panel with a title.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/pieChart/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/pieChart/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/pieChart/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/pieChart/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/pieChart/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/pieChart/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/pieChart/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/pieChart/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/pieChart/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/pieChart/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/pieChart/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/pieChart/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/pieChart/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/pieChart/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/pieChart/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/pieChart/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/pieChart/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/pieChart/#fn-optionswithdisplaylabels","title":"fn options.withDisplayLabels","text":"<pre><code>withDisplayLabels(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithdisplaylabelsmixin","title":"fn options.withDisplayLabelsMixin","text":"<pre><code>withDisplayLabelsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, vertical, horizontal</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithpietype","title":"fn options.withPieType","text":"<pre><code>withPieType(value)\n</code></pre> <p>Select the pie chart display style.</p> <p>Accepted values for <code>value</code> are pie, donut</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/pieChart/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are list, table, hidden</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are bottom, right</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithvalues","title":"fn options.legend.withValues","text":"<pre><code>withValues(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithvaluesmixin","title":"fn options.legend.withValuesMixin","text":"<pre><code>withValuesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/pieChart/#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/pieChart/#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/pieChart/#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/pieChart/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/pieChart/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are single, multi, none</p>"},{"location":"grafonnet/panel/pieChart/#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are asc, desc, none</p>"},{"location":"grafonnet/panel/pieChart/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/pieChart/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/pieChart/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/pieChart/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/pieChart/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/pieChart/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/pieChart/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/row/","title":"row","text":"<p>grafonnet.panel.row</p>"},{"location":"grafonnet/panel/row/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withCollapsed(value=false)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPanels(value)</code></li> <li><code>fn withPanelsMixin(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> </ul>"},{"location":"grafonnet/panel/row/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/row/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new row panel with a title.</p>"},{"location":"grafonnet/panel/row/#fn-withcollapsed","title":"fn withCollapsed","text":"<pre><code>withCollapsed(value=false)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Name of default datasource.</p>"},{"location":"grafonnet/panel/row/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>Name of default datasource.</p>"},{"location":"grafonnet/panel/row/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-withpanels","title":"fn withPanels","text":"<pre><code>withPanels(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-withpanelsmixin","title":"fn withPanelsMixin","text":"<pre><code>withPanelsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/row/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-withtype","title":"fn withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are row</p>"},{"location":"grafonnet/panel/row/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/row/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/row/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/row/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/row/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/row/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/row/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/row/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/stat/","title":"stat","text":"<p>grafonnet.panel.stat</p>"},{"location":"grafonnet/panel/stat/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withColorMode(value)</code></li> <li><code>fn withGraphMode(value)</code></li> <li><code>fn withJustifyMode(value)</code></li> <li><code>fn withOrientation(value)</code></li> <li><code>fn withReduceOptions(value)</code></li> <li><code>fn withReduceOptionsMixin(value)</code></li> <li><code>fn withText(value)</code></li> <li><code>fn withTextMixin(value)</code></li> <li><code>fn withTextMode(value)</code></li> <li><code>obj reduceOptions</code><ul> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withValues(value)</code></li> </ul> </li> <li><code>obj text</code><ul> <li><code>fn withTitleSize(value)</code></li> <li><code>fn withValueSize(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/stat/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/stat/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new stat panel with a title.</p>"},{"location":"grafonnet/panel/stat/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stat/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stat/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/stat/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stat/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stat/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stat/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/stat/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/stat/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/stat/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/stat/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stat/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stat/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stat/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stat/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/stat/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/stat/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/stat/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/stat/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stat/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/stat/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stat/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/stat/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/stat/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/stat/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/stat/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/stat/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/stat/#fn-optionswithcolormode","title":"fn options.withColorMode","text":"<pre><code>withColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are value, background, background_solid, none</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithgraphmode","title":"fn options.withGraphMode","text":"<pre><code>withGraphMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are none, line, area</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithjustifymode","title":"fn options.withJustifyMode","text":"<pre><code>withJustifyMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, center</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithorientation","title":"fn options.withOrientation","text":"<pre><code>withOrientation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, vertical, horizontal</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithreduceoptions","title":"fn options.withReduceOptions","text":"<pre><code>withReduceOptions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithreduceoptionsmixin","title":"fn options.withReduceOptionsMixin","text":"<pre><code>withReduceOptionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithtext","title":"fn options.withText","text":"<pre><code>withText(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithtextmixin","title":"fn options.withTextMixin","text":"<pre><code>withTextMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stat/#fn-optionswithtextmode","title":"fn options.withTextMode","text":"<pre><code>withTextMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, value, value_and_name, name, none</p>"},{"location":"grafonnet/panel/stat/#obj-optionsreduceoptions","title":"obj options.reduceOptions","text":""},{"location":"grafonnet/panel/stat/#fn-optionsreduceoptionswithcalcs","title":"fn options.reduceOptions.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/stat/#fn-optionsreduceoptionswithcalcsmixin","title":"fn options.reduceOptions.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre> <p>When !values, pick one value for the whole field</p>"},{"location":"grafonnet/panel/stat/#fn-optionsreduceoptionswithfields","title":"fn options.reduceOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre> <p>Which fields to show.  By default this is only numeric fields</p>"},{"location":"grafonnet/panel/stat/#fn-optionsreduceoptionswithlimit","title":"fn options.reduceOptions.withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>if showing all values limit</p>"},{"location":"grafonnet/panel/stat/#fn-optionsreduceoptionswithvalues","title":"fn options.reduceOptions.withValues","text":"<pre><code>withValues(value)\n</code></pre> <p>If true show each row value</p>"},{"location":"grafonnet/panel/stat/#obj-optionstext","title":"obj options.text","text":""},{"location":"grafonnet/panel/stat/#fn-optionstextwithtitlesize","title":"fn options.text.withTitleSize","text":"<pre><code>withTitleSize(value)\n</code></pre> <p>Explicit title text size</p>"},{"location":"grafonnet/panel/stat/#fn-optionstextwithvaluesize","title":"fn options.text.withValueSize","text":"<pre><code>withValueSize(value)\n</code></pre> <p>Explicit value text size</p>"},{"location":"grafonnet/panel/stat/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/stat/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/stat/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/stat/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/stat/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/stat/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/stat/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/","title":"stateTimeline","text":"<p>grafonnet.panel.stateTimeline</p>"},{"location":"grafonnet/panel/stateTimeline/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj custom</code></li> <li><code>fn withFillOpacity(value=70)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=0)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withAlignValue(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withMergeValues(value=true)</code></li> <li><code>fn withRowHeight(value=0.90000000000000002)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withTimezoneMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/stateTimeline/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new stateTimeline panel with a title.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=70)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=0)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithalignvalue","title":"fn options.withAlignValue","text":"<pre><code>withAlignValue(value)\n</code></pre> <p>Controls the value alignment in the TimelineChart component</p> <p>Accepted values for <code>value</code> are center, left, right</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithmergevalues","title":"fn options.withMergeValues","text":"<pre><code>withMergeValues(value=true)\n</code></pre> <p>Merge equal consecutive values</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithrowheight","title":"fn options.withRowHeight","text":"<pre><code>withRowHeight(value=0.90000000000000002)\n</code></pre> <p>Controls the row height</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, never, always</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithtimezone","title":"fn options.withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithtimezonemixin","title":"fn options.withTimezoneMixin","text":"<pre><code>withTimezoneMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are list, table, hidden</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are bottom, right</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are single, multi, none</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are asc, desc, none</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/stateTimeline/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/stateTimeline/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/stateTimeline/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/stateTimeline/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/","title":"statusHistory","text":"<p>grafonnet.panel.statusHistory</p>"},{"location":"grafonnet/panel/statusHistory/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj custom</code></li> <li><code>fn withFillOpacity(value=70)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineWidth(value=1)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withColWidth(value=0.90000000000000002)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withRowHeight(value=0.90000000000000002)</code></li> <li><code>fn withShowValue(value)</code></li> <li><code>fn withTimezone(value)</code></li> <li><code>fn withTimezoneMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/statusHistory/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/statusHistory/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new statusHistory panel with a title.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/statusHistory/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value=70)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value=1)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/statusHistory/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/statusHistory/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/statusHistory/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/statusHistory/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/statusHistory/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/statusHistory/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/statusHistory/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/statusHistory/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/statusHistory/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/statusHistory/#fn-optionswithcolwidth","title":"fn options.withColWidth","text":"<pre><code>withColWidth(value=0.90000000000000002)\n</code></pre> <p>Controls the column width</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithrowheight","title":"fn options.withRowHeight","text":"<pre><code>withRowHeight(value=0.90000000000000002)\n</code></pre> <p>Set the height of the rows</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithshowvalue","title":"fn options.withShowValue","text":"<pre><code>withShowValue(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, never, always</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithtimezone","title":"fn options.withTimezone","text":"<pre><code>withTimezone(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithtimezonemixin","title":"fn options.withTimezoneMixin","text":"<pre><code>withTimezoneMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/statusHistory/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are list, table, hidden</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are bottom, right</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/statusHistory/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are single, multi, none</p>"},{"location":"grafonnet/panel/statusHistory/#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are asc, desc, none</p>"},{"location":"grafonnet/panel/statusHistory/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/statusHistory/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/statusHistory/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/statusHistory/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/statusHistory/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/statusHistory/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/statusHistory/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table/","title":"table","text":"<p>grafonnet.panel.table</p>"},{"location":"grafonnet/panel/table/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withCellHeight(value)</code></li> <li><code>fn withFooter(value={\"countRows\": false, \"reducer\": [ ], \"show\": false})</code></li> <li><code>fn withFooterMixin(value={\"countRows\": false, \"reducer\": [ ], \"show\": false})</code></li> <li><code>fn withFrameIndex(value=0)</code></li> <li><code>fn withShowHeader(value=true)</code></li> <li><code>fn withShowRowNums(value=false)</code></li> <li><code>fn withShowTypeIcons(value=false)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortByMixin(value)</code></li> <li><code>obj footer</code><ul> <li><code>fn withTableFooterOptions(value)</code></li> <li><code>fn withTableFooterOptionsMixin(value)</code></li> <li><code>obj TableFooterOptions</code></li> <li><code>fn withCountRows(value)</code></li> <li><code>fn withEnablePagination(value)</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withFieldsMixin(value)</code></li> <li><code>fn withReducer(value)</code></li> <li><code>fn withReducerMixin(value)</code></li> <li><code>fn withShow(value)</code></li> </ul> </li> <li><code>obj sortBy</code><ul> <li><code>fn withDesc(value)</code></li> <li><code>fn withDisplayName(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/table/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/table/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new table panel with a title.</p>"},{"location":"grafonnet/panel/table/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/table/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/table/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/table/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/table/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/table/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/table/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/table/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/table/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/table/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/table/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/table/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/table/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/table/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/table/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/table/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/table/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/table/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/table/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/table/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/table/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/table/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/table/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/table/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/table/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/table/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/table/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/table/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/table/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/table/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/table/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/table/#fn-optionswithcellheight","title":"fn options.withCellHeight","text":"<pre><code>withCellHeight(value)\n</code></pre> <p>Height of a table cell</p> <p>Accepted values for <code>value</code> are sm, md, lg</p>"},{"location":"grafonnet/panel/table/#fn-optionswithfooter","title":"fn options.withFooter","text":"<pre><code>withFooter(value={\"countRows\": false, \"reducer\": [ ], \"show\": false})\n</code></pre> <p>Controls footer options</p>"},{"location":"grafonnet/panel/table/#fn-optionswithfootermixin","title":"fn options.withFooterMixin","text":"<pre><code>withFooterMixin(value={\"countRows\": false, \"reducer\": [ ], \"show\": false})\n</code></pre> <p>Controls footer options</p>"},{"location":"grafonnet/panel/table/#fn-optionswithframeindex","title":"fn options.withFrameIndex","text":"<pre><code>withFrameIndex(value=0)\n</code></pre> <p>Represents the index of the selected frame</p>"},{"location":"grafonnet/panel/table/#fn-optionswithshowheader","title":"fn options.withShowHeader","text":"<pre><code>withShowHeader(value=true)\n</code></pre> <p>Controls whether the panel should show the header</p>"},{"location":"grafonnet/panel/table/#fn-optionswithshowrownums","title":"fn options.withShowRowNums","text":"<pre><code>withShowRowNums(value=false)\n</code></pre> <p>Controls whether the columns should be numbered</p>"},{"location":"grafonnet/panel/table/#fn-optionswithshowtypeicons","title":"fn options.withShowTypeIcons","text":"<pre><code>withShowTypeIcons(value=false)\n</code></pre> <p>Controls whether the header should show icons for the column types</p>"},{"location":"grafonnet/panel/table/#fn-optionswithsortby","title":"fn options.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre> <p>Used to control row sorting</p>"},{"location":"grafonnet/panel/table/#fn-optionswithsortbymixin","title":"fn options.withSortByMixin","text":"<pre><code>withSortByMixin(value)\n</code></pre> <p>Used to control row sorting</p>"},{"location":"grafonnet/panel/table/#obj-optionsfooter","title":"obj options.footer","text":""},{"location":"grafonnet/panel/table/#fn-optionsfooterwithtablefooteroptions","title":"fn options.footer.withTableFooterOptions","text":"<pre><code>withTableFooterOptions(value)\n</code></pre> <p>Footer options</p>"},{"location":"grafonnet/panel/table/#fn-optionsfooterwithtablefooteroptionsmixin","title":"fn options.footer.withTableFooterOptionsMixin","text":"<pre><code>withTableFooterOptionsMixin(value)\n</code></pre> <p>Footer options</p>"},{"location":"grafonnet/panel/table/#obj-optionsfootertablefooteroptions","title":"obj options.footer.TableFooterOptions","text":""},{"location":"grafonnet/panel/table/#fn-optionsfootertablefooteroptionswithcountrows","title":"fn options.footer.TableFooterOptions.withCountRows","text":"<pre><code>withCountRows(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-optionsfootertablefooteroptionswithenablepagination","title":"fn options.footer.TableFooterOptions.withEnablePagination","text":"<pre><code>withEnablePagination(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-optionsfootertablefooteroptionswithfields","title":"fn options.footer.TableFooterOptions.withFields","text":"<pre><code>withFields(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-optionsfootertablefooteroptionswithfieldsmixin","title":"fn options.footer.TableFooterOptions.withFieldsMixin","text":"<pre><code>withFieldsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-optionsfootertablefooteroptionswithreducer","title":"fn options.footer.TableFooterOptions.withReducer","text":"<pre><code>withReducer(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-optionsfootertablefooteroptionswithreducermixin","title":"fn options.footer.TableFooterOptions.withReducerMixin","text":"<pre><code>withReducerMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-optionsfootertablefooteroptionswithshow","title":"fn options.footer.TableFooterOptions.withShow","text":"<pre><code>withShow(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#obj-optionssortby","title":"obj options.sortBy","text":""},{"location":"grafonnet/panel/table/#fn-optionssortbywithdesc","title":"fn options.sortBy.withDesc","text":"<pre><code>withDesc(value)\n</code></pre> <p>Flag used to indicate descending sort order</p>"},{"location":"grafonnet/panel/table/#fn-optionssortbywithdisplayname","title":"fn options.sortBy.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>Sets the display name of the field to sort by</p>"},{"location":"grafonnet/panel/table/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/table/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/table/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/table/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/table/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/table/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/table/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text/","title":"text","text":"<p>grafonnet.panel.text</p>"},{"location":"grafonnet/panel/text/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withCode(value)</code></li> <li><code>fn withCodeMixin(value)</code></li> <li>[`fn withContent(value='# Title</li> </ul> <p>For markdown syntax help: commonmark.org/help')<code>](#fn-optionswithcontent)   * [</code>fn withMode(value)<code>](#fn-optionswithmode)   * [</code>obj code<code>](#obj-optionscode)     * [</code>fn withLanguage(value='plaintext')<code>](#fn-optionscodewithlanguage)     * [</code>fn withShowLineNumbers(value=false)<code>](#fn-optionscodewithshowlinenumbers)     * [</code>fn withShowMiniMap(value=false)<code>](#fn-optionscodewithshowminimap) * [</code>obj transformations<code>](#obj-transformations)   * [</code>fn withDisabled(value)<code>](#fn-transformationswithdisabled)   * [</code>fn withFilter(value)<code>](#fn-transformationswithfilter)   * [</code>fn withFilterMixin(value)<code>](#fn-transformationswithfiltermixin)   * [</code>fn withId(value)<code>](#fn-transformationswithid)   * [</code>fn withOptions(value)<code>](#fn-transformationswithoptions)   * [</code>obj filter<code>](#obj-transformationsfilter)     * [</code>fn withId(value='')<code>](#fn-transformationsfilterwithid)     * [</code>fn withOptions(value)`](#fn-transformationsfilterwithoptions)</p>"},{"location":"grafonnet/panel/text/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/text/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new text panel with a title.</p>"},{"location":"grafonnet/panel/text/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/text/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/text/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/text/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/text/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/text/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/text/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/text/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/text/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/text/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/text/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/text/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/text/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/text/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/text/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/text/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/text/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/text/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/text/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/text/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/text/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/text/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/text/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/text/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/text/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/text/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/text/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/text/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/text/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/text/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/text/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/text/#fn-optionswithcode","title":"fn options.withCode","text":"<pre><code>withCode(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-optionswithcodemixin","title":"fn options.withCodeMixin","text":"<pre><code>withCodeMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-optionswithcontent","title":"fn options.withContent","text":"<pre><code>withContent(value='# Title\n\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)')\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-optionswithmode","title":"fn options.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are html, markdown, code</p>"},{"location":"grafonnet/panel/text/#obj-optionscode","title":"obj options.code","text":""},{"location":"grafonnet/panel/text/#fn-optionscodewithlanguage","title":"fn options.code.withLanguage","text":"<pre><code>withLanguage(value='plaintext')\n</code></pre> <p>Accepted values for <code>value</code> are plaintext, yaml, xml, typescript, sql, go, markdown, html, json</p>"},{"location":"grafonnet/panel/text/#fn-optionscodewithshowlinenumbers","title":"fn options.code.withShowLineNumbers","text":"<pre><code>withShowLineNumbers(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-optionscodewithshowminimap","title":"fn options.code.withShowMiniMap","text":"<pre><code>withShowMiniMap(value=false)\n</code></pre>"},{"location":"grafonnet/panel/text/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/text/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/text/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/text/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/text/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/text/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/text/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/","title":"timeSeries","text":"<p>grafonnet.panel.timeSeries</p>"},{"location":"grafonnet/panel/timeSeries/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj custom</code></li> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withBarAlignment(value)</code></li> <li><code>fn withBarMaxWidth(value)</code></li> <li><code>fn withBarWidthFactor(value)</code></li> <li><code>fn withDrawStyle(value)</code></li> <li><code>fn withFillBelowTo(value)</code></li> <li><code>fn withFillColor(value)</code></li> <li><code>fn withFillOpacity(value)</code></li> <li><code>fn withGradientMode(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLineColor(value)</code></li> <li><code>fn withLineInterpolation(value)</code></li> <li><code>fn withLineStyle(value)</code></li> <li><code>fn withLineStyleMixin(value)</code></li> <li><code>fn withLineWidth(value)</code></li> <li><code>fn withPointColor(value)</code></li> <li><code>fn withPointSize(value)</code></li> <li><code>fn withPointSymbol(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withShowPoints(value)</code></li> <li><code>fn withSpanNulls(value)</code></li> <li><code>fn withSpanNullsMixin(value)</code></li> <li><code>fn withStacking(value)</code></li> <li><code>fn withStackingMixin(value)</code></li> <li><code>fn withThresholdsStyle(value)</code></li> <li><code>fn withThresholdsStyleMixin(value)</code></li> <li><code>fn withTransform(value)</code></li> <li><code>obj hideFrom</code><ul> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> </ul> </li> <li><code>obj lineStyle</code><ul> <li><code>fn withDash(value)</code></li> <li><code>fn withDashMixin(value)</code></li> <li><code>fn withFill(value)</code></li> </ul> </li> <li><code>obj scaleDistribution</code><ul> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj stacking</code><ul> <li><code>fn withGroup(value)</code></li> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj thresholdsStyle</code><ul> <li><code>fn withMode(value)</code></li> </ul> </li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/timeSeries/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/timeSeries/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new timeSeries panel with a title.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/timeSeries/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultscustom","title":"obj fieldConfig.defaults.custom","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxiscenteredzero","title":"fn fieldConfig.defaults.custom.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxiscolormode","title":"fn fieldConfig.defaults.custom.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are text, series</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxisgridshow","title":"fn fieldConfig.defaults.custom.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxislabel","title":"fn fieldConfig.defaults.custom.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxisplacement","title":"fn fieldConfig.defaults.custom.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, top, right, bottom, left, hidden</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxissoftmax","title":"fn fieldConfig.defaults.custom.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxissoftmin","title":"fn fieldConfig.defaults.custom.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithaxiswidth","title":"fn fieldConfig.defaults.custom.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithbaralignment","title":"fn fieldConfig.defaults.custom.withBarAlignment","text":"<pre><code>withBarAlignment(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are -1, 0, 1</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithbarmaxwidth","title":"fn fieldConfig.defaults.custom.withBarMaxWidth","text":"<pre><code>withBarMaxWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithbarwidthfactor","title":"fn fieldConfig.defaults.custom.withBarWidthFactor","text":"<pre><code>withBarWidthFactor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithdrawstyle","title":"fn fieldConfig.defaults.custom.withDrawStyle","text":"<pre><code>withDrawStyle(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are line, bars, points</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithfillbelowto","title":"fn fieldConfig.defaults.custom.withFillBelowTo","text":"<pre><code>withFillBelowTo(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithfillcolor","title":"fn fieldConfig.defaults.custom.withFillColor","text":"<pre><code>withFillColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithfillopacity","title":"fn fieldConfig.defaults.custom.withFillOpacity","text":"<pre><code>withFillOpacity(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithgradientmode","title":"fn fieldConfig.defaults.custom.withGradientMode","text":"<pre><code>withGradientMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are none, opacity, hue, scheme</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithhidefrom","title":"fn fieldConfig.defaults.custom.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithhidefrommixin","title":"fn fieldConfig.defaults.custom.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithlinecolor","title":"fn fieldConfig.defaults.custom.withLineColor","text":"<pre><code>withLineColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithlineinterpolation","title":"fn fieldConfig.defaults.custom.withLineInterpolation","text":"<pre><code>withLineInterpolation(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, smooth, stepBefore, stepAfter</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithlinestyle","title":"fn fieldConfig.defaults.custom.withLineStyle","text":"<pre><code>withLineStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithlinestylemixin","title":"fn fieldConfig.defaults.custom.withLineStyleMixin","text":"<pre><code>withLineStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithlinewidth","title":"fn fieldConfig.defaults.custom.withLineWidth","text":"<pre><code>withLineWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithpointcolor","title":"fn fieldConfig.defaults.custom.withPointColor","text":"<pre><code>withPointColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithpointsize","title":"fn fieldConfig.defaults.custom.withPointSize","text":"<pre><code>withPointSize(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithpointsymbol","title":"fn fieldConfig.defaults.custom.withPointSymbol","text":"<pre><code>withPointSymbol(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithscaledistribution","title":"fn fieldConfig.defaults.custom.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithscaledistributionmixin","title":"fn fieldConfig.defaults.custom.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithshowpoints","title":"fn fieldConfig.defaults.custom.withShowPoints","text":"<pre><code>withShowPoints(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, never, always</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithspannulls","title":"fn fieldConfig.defaults.custom.withSpanNulls","text":"<pre><code>withSpanNulls(value)\n</code></pre> <p>Indicate if null values should be treated as gaps or connected. When the value is a number, it represents the maximum delta in the X axis that should be considered connected.  For timeseries, this is milliseconds</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithspannullsmixin","title":"fn fieldConfig.defaults.custom.withSpanNullsMixin","text":"<pre><code>withSpanNullsMixin(value)\n</code></pre> <p>Indicate if null values should be treated as gaps or connected. When the value is a number, it represents the maximum delta in the X axis that should be considered connected.  For timeseries, this is milliseconds</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithstacking","title":"fn fieldConfig.defaults.custom.withStacking","text":"<pre><code>withStacking(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithstackingmixin","title":"fn fieldConfig.defaults.custom.withStackingMixin","text":"<pre><code>withStackingMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwiththresholdsstyle","title":"fn fieldConfig.defaults.custom.withThresholdsStyle","text":"<pre><code>withThresholdsStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwiththresholdsstylemixin","title":"fn fieldConfig.defaults.custom.withThresholdsStyleMixin","text":"<pre><code>withThresholdsStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomwithtransform","title":"fn fieldConfig.defaults.custom.withTransform","text":"<pre><code>withTransform(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are constant, negative-Y</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultscustomhidefrom","title":"obj fieldConfig.defaults.custom.hideFrom","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomhidefromwithlegend","title":"# fn fieldConfig.defaults.custom.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomhidefromwithtooltip","title":"# fn fieldConfig.defaults.custom.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomhidefromwithviz","title":"# fn fieldConfig.defaults.custom.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultscustomlinestyle","title":"obj fieldConfig.defaults.custom.lineStyle","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomlinestylewithdash","title":"# fn fieldConfig.defaults.custom.lineStyle.withDash","text":"<pre><code>withDash(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomlinestylewithdashmixin","title":"# fn fieldConfig.defaults.custom.lineStyle.withDashMixin","text":"<pre><code>withDashMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomlinestylewithfill","title":"# fn fieldConfig.defaults.custom.lineStyle.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Accepted values for <code>value</code> are solid, dash, dot, square</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultscustomscaledistribution","title":"obj fieldConfig.defaults.custom.scaleDistribution","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomscaledistributionwithlinearthreshold","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomscaledistributionwithlog","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomscaledistributionwithtype","title":"# fn fieldConfig.defaults.custom.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultscustomstacking","title":"obj fieldConfig.defaults.custom.stacking","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomstackingwithgroup","title":"# fn fieldConfig.defaults.custom.stacking.withGroup","text":"<pre><code>withGroup(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomstackingwithmode","title":"# fn fieldConfig.defaults.custom.stacking.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are none, normal, percent</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultscustomthresholdsstyle","title":"obj fieldConfig.defaults.custom.thresholdsStyle","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultscustomthresholdsstylewithmode","title":"# fn fieldConfig.defaults.custom.thresholdsStyle.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are off, line, dashed, area, line+area, dashed+area, series</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/timeSeries/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/timeSeries/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/timeSeries/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/timeSeries/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/timeSeries/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/timeSeries/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/timeSeries/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/timeSeries/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/timeSeries/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/timeSeries/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/timeSeries/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are list, table, hidden</p>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are bottom, right</p>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/timeSeries/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are single, multi, none</p>"},{"location":"grafonnet/panel/timeSeries/#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are asc, desc, none</p>"},{"location":"grafonnet/panel/timeSeries/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/timeSeries/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/timeSeries/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/timeSeries/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/timeSeries/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/timeSeries/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/timeSeries/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/","title":"xyChart","text":"<p>grafonnet.panel.xyChart</p>"},{"location":"grafonnet/panel/xyChart/#index","title":"Index","text":"<ul> <li><code>fn new(title)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withDatasourceMixin(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withFieldConfig(value)</code></li> <li><code>fn withFieldConfigMixin(value)</code></li> <li><code>fn withGridPos(value)</code></li> <li><code>fn withGridPosMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withLibraryPanel(value)</code></li> <li><code>fn withLibraryPanelMixin(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMaxDataPoints(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withPluginVersion(value)</code></li> <li><code>fn withRepeat(value)</code></li> <li><code>fn withRepeatDirection(value='h')</code></li> <li><code>fn withRepeatPanelId(value)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargets(value)</code></li> <li><code>fn withTargetsMixin(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withTimeFrom(value)</code></li> <li><code>fn withTimeRegions(value)</code></li> <li><code>fn withTimeRegionsMixin(value)</code></li> <li><code>fn withTimeShift(value)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTransformations(value)</code></li> <li><code>fn withTransformationsMixin(value)</code></li> <li><code>fn withTransparent(value=false)</code></li> <li><code>fn withType()</code></li> <li><code>obj datasource</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj fieldConfig</code></li> <li><code>fn withDefaults(value)</code></li> <li><code>fn withDefaultsMixin(value)</code></li> <li><code>fn withOverrides(value)</code></li> <li><code>fn withOverridesMixin(value)</code></li> <li><code>obj defaults</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withColorMixin(value)</code></li> <li><code>fn withCustom(value)</code></li> <li><code>fn withCustomMixin(value)</code></li> <li><code>fn withDecimals(value)</code></li> <li><code>fn withDescription(value)</code></li> <li><code>fn withDisplayName(value)</code></li> <li><code>fn withDisplayNameFromDS(value)</code></li> <li><code>fn withFilterable(value)</code></li> <li><code>fn withLinks(value)</code></li> <li><code>fn withLinksMixin(value)</code></li> <li><code>fn withMappings(value)</code></li> <li><code>fn withMappingsMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>fn withNoValue(value)</code></li> <li><code>fn withPath(value)</code></li> <li><code>fn withThresholds(value)</code></li> <li><code>fn withThresholdsMixin(value)</code></li> <li><code>fn withUnit(value)</code></li> <li><code>fn withWriteable(value)</code></li> <li><code>obj color</code></li> <li><code>fn withFixedColor(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSeriesBy(value)</code></li> <li><code>obj mappings</code></li> <li><code>obj RangeMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withFrom(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>fn withTo(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj RegexMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj SpecialValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj options</code></li> <li><code>fn withMatch(value)</code></li> <li><code>fn withPattern(value)</code></li> <li><code>fn withResult(value)</code></li> <li><code>fn withResultMixin(value)</code></li> <li><code>obj result</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withText(value)</code></li> </ul> </li> </ul> </li> <li><code>obj ValueMap</code><ul> <li><code>fn withOptions(value)</code></li> <li><code>fn withOptionsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj thresholds</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withSteps(value)</code></li> <li><code>fn withStepsMixin(value)</code></li> <li><code>obj steps</code><ul> <li><code>fn withColor(value)</code></li> <li><code>fn withIndex(value)</code></li> <li><code>fn withState(value)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> </ul> </li> <li><code>obj overrides</code><ul> <li><code>fn withMatcher(value)</code></li> <li><code>fn withMatcherMixin(value)</code></li> <li><code>fn withProperties(value)</code></li> <li><code>fn withPropertiesMixin(value)</code></li> <li><code>obj matcher</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj properties</code></li> <li><code>fn withId(value='')</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj gridPos</code></li> <li><code>fn withH(value=9)</code></li> <li><code>fn withStatic(value)</code></li> <li><code>fn withW(value=12)</code></li> <li><code>fn withX(value=0)</code></li> <li><code>fn withY(value=0)</code></li> <li><code>obj libraryPanel</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withUid(value)</code></li> <li><code>obj links</code></li> <li><code>fn withAsDropdown(value=false)</code></li> <li><code>fn withIcon(value)</code></li> <li><code>fn withIncludeVars(value=false)</code></li> <li><code>fn withKeepTime(value=false)</code></li> <li><code>fn withTags(value)</code></li> <li><code>fn withTagsMixin(value)</code></li> <li><code>fn withTargetBlank(value=false)</code></li> <li><code>fn withTitle(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj options</code></li> <li><code>fn withDims(value)</code></li> <li><code>fn withDimsMixin(value)</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withLegendMixin(value)</code></li> <li><code>fn withSeries(value)</code></li> <li><code>fn withSeriesMapping(value)</code></li> <li><code>fn withSeriesMixin(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withTooltipMixin(value)</code></li> <li><code>obj dims</code><ul> <li><code>fn withExclude(value)</code></li> <li><code>fn withExcludeMixin(value)</code></li> <li><code>fn withFrame(value)</code></li> <li><code>fn withX(value)</code></li> </ul> </li> <li><code>obj legend</code><ul> <li><code>fn withAsTable(value)</code></li> <li><code>fn withCalcs(value)</code></li> <li><code>fn withCalcsMixin(value)</code></li> <li><code>fn withDisplayMode(value)</code></li> <li><code>fn withIsVisible(value)</code></li> <li><code>fn withPlacement(value)</code></li> <li><code>fn withShowLegend(value)</code></li> <li><code>fn withSortBy(value)</code></li> <li><code>fn withSortDesc(value)</code></li> <li><code>fn withWidth(value)</code></li> </ul> </li> <li><code>obj series</code><ul> <li><code>fn withAxisCenteredZero(value)</code></li> <li><code>fn withAxisColorMode(value)</code></li> <li><code>fn withAxisGridShow(value)</code></li> <li><code>fn withAxisLabel(value)</code></li> <li><code>fn withAxisPlacement(value)</code></li> <li><code>fn withAxisSoftMax(value)</code></li> <li><code>fn withAxisSoftMin(value)</code></li> <li><code>fn withAxisWidth(value)</code></li> <li><code>fn withHideFrom(value)</code></li> <li><code>fn withHideFromMixin(value)</code></li> <li><code>fn withLabel(value)</code></li> <li><code>fn withLabelValue(value)</code></li> <li><code>fn withLabelValueMixin(value)</code></li> <li><code>fn withLineColor(value)</code></li> <li><code>fn withLineColorMixin(value)</code></li> <li><code>fn withLineStyle(value)</code></li> <li><code>fn withLineStyleMixin(value)</code></li> <li><code>fn withLineWidth(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withPointColor(value)</code></li> <li><code>fn withPointColorMixin(value)</code></li> <li><code>fn withPointSize(value)</code></li> <li><code>fn withPointSizeMixin(value)</code></li> <li><code>fn withScaleDistribution(value)</code></li> <li><code>fn withScaleDistributionMixin(value)</code></li> <li><code>fn withShow(value)</code></li> <li><code>fn withX(value)</code></li> <li><code>fn withY(value)</code></li> <li><code>obj hideFrom</code></li> <li><code>fn withLegend(value)</code></li> <li><code>fn withTooltip(value)</code></li> <li><code>fn withViz(value)</code></li> <li><code>obj labelValue</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>obj lineColor</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>obj lineStyle</code></li> <li><code>fn withDash(value)</code></li> <li><code>fn withDashMixin(value)</code></li> <li><code>fn withFill(value)</code></li> <li><code>obj pointColor</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>obj pointSize</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withFixed(value)</code></li> <li><code>fn withFixedMixin(value)</code></li> <li><code>fn withMax(value)</code></li> <li><code>fn withMin(value)</code></li> <li><code>obj scaleDistribution</code></li> <li><code>fn withLinearThreshold(value)</code></li> <li><code>fn withLog(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj tooltip</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withSort(value)</code></li> </ul> </li> <li><code>obj transformations</code></li> <li><code>fn withDisabled(value)</code></li> <li><code>fn withFilter(value)</code></li> <li><code>fn withFilterMixin(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOptions(value)</code></li> <li><code>obj filter</code><ul> <li><code>fn withId(value='')</code></li> <li><code>fn withOptions(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/panel/xyChart/#fields","title":"Fields","text":""},{"location":"grafonnet/panel/xyChart/#fn-new","title":"fn new","text":"<pre><code>new(title)\n</code></pre> <p>Creates a new xyChart panel with a title.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withdatasourcemixin","title":"fn withDatasourceMixin","text":"<pre><code>withDatasourceMixin(value)\n</code></pre> <p>The datasource used in all targets.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withdescription","title":"fn withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Description.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withfieldconfig","title":"fn withFieldConfig","text":"<pre><code>withFieldConfig(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withfieldconfigmixin","title":"fn withFieldConfigMixin","text":"<pre><code>withFieldConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withgridpos","title":"fn withGridPos","text":"<pre><code>withGridPos(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withgridposmixin","title":"fn withGridPosMixin","text":"<pre><code>withGridPosMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withid","title":"fn withId","text":"<pre><code>withId(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withinterval","title":"fn withInterval","text":"<pre><code>withInterval(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/xyChart/#fn-withlibrarypanel","title":"fn withLibraryPanel","text":"<pre><code>withLibraryPanel(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withlibrarypanelmixin","title":"fn withLibraryPanelMixin","text":"<pre><code>withLibraryPanelMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withlinks","title":"fn withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/xyChart/#fn-withlinksmixin","title":"fn withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>Panel links. TODO fill this out - seems there are a couple variants?</p>"},{"location":"grafonnet/panel/xyChart/#fn-withmaxdatapoints","title":"fn withMaxDataPoints","text":"<pre><code>withMaxDataPoints(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withoptions","title":"fn withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withoptionsmixin","title":"fn withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre> <p>options is specified by the PanelOptions field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withpluginversion","title":"fn withPluginVersion","text":"<pre><code>withPluginVersion(value)\n</code></pre> <p>FIXME this almost certainly has to be changed in favor of scuemata versions</p>"},{"location":"grafonnet/panel/xyChart/#fn-withrepeat","title":"fn withRepeat","text":"<pre><code>withRepeat(value)\n</code></pre> <p>Name of template variable to repeat for.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withrepeatdirection","title":"fn withRepeatDirection","text":"<pre><code>withRepeatDirection(value='h')\n</code></pre> <p>Direction to repeat in if 'repeat' is set. \"h\" for horizontal, \"v\" for vertical. TODO this is probably optional</p> <p>Accepted values for <code>value</code> are h, v</p>"},{"location":"grafonnet/panel/xyChart/#fn-withrepeatpanelid","title":"fn withRepeatPanelId","text":"<pre><code>withRepeatPanelId(value)\n</code></pre> <p>Id of the repeating panel.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtags","title":"fn withTags","text":"<pre><code>withTags(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtagsmixin","title":"fn withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtargets","title":"fn withTargets","text":"<pre><code>withTargets(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtargetsmixin","title":"fn withTargetsMixin","text":"<pre><code>withTargetsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withthresholds","title":"fn withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/xyChart/#fn-withthresholdsmixin","title":"fn withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre> <p>TODO docs - seems to be an old field from old dashboard alerts?</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtimefrom","title":"fn withTimeFrom","text":"<pre><code>withTimeFrom(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtimeregions","title":"fn withTimeRegions","text":"<pre><code>withTimeRegions(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtimeregionsmixin","title":"fn withTimeRegionsMixin","text":"<pre><code>withTimeRegionsMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtimeshift","title":"fn withTimeShift","text":"<pre><code>withTimeShift(value)\n</code></pre> <p>TODO docs TODO tighter constraint</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtitle","title":"fn withTitle","text":"<pre><code>withTitle(value)\n</code></pre> <p>Panel title.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtransformations","title":"fn withTransformations","text":"<pre><code>withTransformations(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withtransformationsmixin","title":"fn withTransformationsMixin","text":"<pre><code>withTransformationsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-withtransparent","title":"fn withTransparent","text":"<pre><code>withTransparent(value=false)\n</code></pre> <p>Whether to display the panel without a background.</p>"},{"location":"grafonnet/panel/xyChart/#fn-withtype","title":"fn withType","text":"<pre><code>withType()\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-datasource","title":"obj datasource","text":""},{"location":"grafonnet/panel/xyChart/#fn-datasourcewithtype","title":"fn datasource.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-datasourcewithuid","title":"fn datasource.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfig","title":"obj fieldConfig","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigwithdefaults","title":"fn fieldConfig.withDefaults","text":"<pre><code>withDefaults(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigwithdefaultsmixin","title":"fn fieldConfig.withDefaultsMixin","text":"<pre><code>withDefaultsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigwithoverrides","title":"fn fieldConfig.withOverrides","text":"<pre><code>withOverrides(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigwithoverridesmixin","title":"fn fieldConfig.withOverridesMixin","text":"<pre><code>withOverridesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaults","title":"obj fieldConfig.defaults","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithcolor","title":"fn fieldConfig.defaults.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithcolormixin","title":"fn fieldConfig.defaults.withColorMixin","text":"<pre><code>withColorMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithcustom","title":"fn fieldConfig.defaults.withCustom","text":"<pre><code>withCustom(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithcustommixin","title":"fn fieldConfig.defaults.withCustomMixin","text":"<pre><code>withCustomMixin(value)\n</code></pre> <p>custom is specified by the PanelFieldConfig field in panel plugin schemas.</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithdecimals","title":"fn fieldConfig.defaults.withDecimals","text":"<pre><code>withDecimals(value)\n</code></pre> <p>Significant digits (for display)</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithdescription","title":"fn fieldConfig.defaults.withDescription","text":"<pre><code>withDescription(value)\n</code></pre> <p>Human readable field metadata</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithdisplayname","title":"fn fieldConfig.defaults.withDisplayName","text":"<pre><code>withDisplayName(value)\n</code></pre> <p>The display value for this field.  This supports template variables blank is auto</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithdisplaynamefromds","title":"fn fieldConfig.defaults.withDisplayNameFromDS","text":"<pre><code>withDisplayNameFromDS(value)\n</code></pre> <p>This can be used by data sources that return and explicit naming structure for values and labels When this property is configured, this value is used rather than the default naming strategy.</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithfilterable","title":"fn fieldConfig.defaults.withFilterable","text":"<pre><code>withFilterable(value)\n</code></pre> <p>True if data source field supports ad-hoc filters</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithlinks","title":"fn fieldConfig.defaults.withLinks","text":"<pre><code>withLinks(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithlinksmixin","title":"fn fieldConfig.defaults.withLinksMixin","text":"<pre><code>withLinksMixin(value)\n</code></pre> <p>The behavior when clicking on a result</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithmappings","title":"fn fieldConfig.defaults.withMappings","text":"<pre><code>withMappings(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithmappingsmixin","title":"fn fieldConfig.defaults.withMappingsMixin","text":"<pre><code>withMappingsMixin(value)\n</code></pre> <p>Convert input values into a display string</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithmax","title":"fn fieldConfig.defaults.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithmin","title":"fn fieldConfig.defaults.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithnovalue","title":"fn fieldConfig.defaults.withNoValue","text":"<pre><code>withNoValue(value)\n</code></pre> <p>Alternative to empty string</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithpath","title":"fn fieldConfig.defaults.withPath","text":"<pre><code>withPath(value)\n</code></pre> <p>An explicit path to the field in the datasource.  When the frame meta includes a path, This will default to `${frame.meta.path}/${field.name}</p> <p>When defined, this value can be used as an identifier within the datasource scope, and may be used to update the results</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswiththresholds","title":"fn fieldConfig.defaults.withThresholds","text":"<pre><code>withThresholds(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswiththresholdsmixin","title":"fn fieldConfig.defaults.withThresholdsMixin","text":"<pre><code>withThresholdsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithunit","title":"fn fieldConfig.defaults.withUnit","text":"<pre><code>withUnit(value)\n</code></pre> <p>Numeric Options</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultswithwriteable","title":"fn fieldConfig.defaults.withWriteable","text":"<pre><code>withWriteable(value)\n</code></pre> <p>True if data source can write a value to the path.  Auth/authz are supported separately</p>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultscolor","title":"obj fieldConfig.defaults.color","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultscolorwithfixedcolor","title":"fn fieldConfig.defaults.color.withFixedColor","text":"<pre><code>withFixedColor(value)\n</code></pre> <p>Stores the fixed color value if mode is fixed</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultscolorwithmode","title":"fn fieldConfig.defaults.color.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>The main color scheme mode</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultscolorwithseriesby","title":"fn fieldConfig.defaults.color.withSeriesBy","text":"<pre><code>withSeriesBy(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are min, max, last</p>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappings","title":"obj fieldConfig.defaults.mappings","text":""},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsrangemap","title":"obj fieldConfig.defaults.mappings.RangeMap","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapwithoptions","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RangeMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapwithtype","title":"# fn fieldConfig.defaults.mappings.RangeMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsrangemapoptions","title":"# obj fieldConfig.defaults.mappings.RangeMap.options","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithfrom","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withFrom","text":"<pre><code>withFrom(value)\n</code></pre> <p>to and from are <code>number | null</code> in current ts, really not sure what to do</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionswithto","title":"## fn fieldConfig.defaults.mappings.RangeMap.options.withTo","text":"<pre><code>withTo(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsrangemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RangeMap.options.result","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsrangemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RangeMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsregexmap","title":"obj fieldConfig.defaults.mappings.RegexMap","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapwithoptions","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.RegexMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapwithtype","title":"# fn fieldConfig.defaults.mappings.RegexMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsregexmapoptions","title":"# obj fieldConfig.defaults.mappings.RegexMap.options","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.RegexMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsregexmapoptionsresult","title":"## obj fieldConfig.defaults.mappings.RegexMap.options.result","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsregexmapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.RegexMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsspecialvaluemap","title":"obj fieldConfig.defaults.mappings.SpecialValueMap","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.SpecialValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptions","title":"# obj fieldConfig.defaults.mappings.SpecialValueMap.options","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithmatch","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withMatch","text":"<pre><code>withMatch(value)\n</code></pre> <p>Accepted values for <code>value</code> are true, false</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithpattern","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withPattern","text":"<pre><code>withPattern(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresult","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResult","text":"<pre><code>withResult(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionswithresultmixin","title":"## fn fieldConfig.defaults.mappings.SpecialValueMap.options.withResultMixin","text":"<pre><code>withResultMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsspecialvaluemapoptionsresult","title":"## obj fieldConfig.defaults.mappings.SpecialValueMap.options.result","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithcolor","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withColor","text":"<pre><code>withColor(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithicon","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithindex","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withIndex","text":"<pre><code>withIndex(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsspecialvaluemapoptionsresultwithtext","title":"### fn fieldConfig.defaults.mappings.SpecialValueMap.options.result.withText","text":"<pre><code>withText(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsmappingsvaluemap","title":"obj fieldConfig.defaults.mappings.ValueMap","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsvaluemapwithoptions","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsvaluemapwithoptionsmixin","title":"# fn fieldConfig.defaults.mappings.ValueMap.withOptionsMixin","text":"<pre><code>withOptionsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsmappingsvaluemapwithtype","title":"# fn fieldConfig.defaults.mappings.ValueMap.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsthresholds","title":"obj fieldConfig.defaults.thresholds","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsthresholdswithmode","title":"fn fieldConfig.defaults.thresholds.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are absolute, percentage</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsthresholdswithsteps","title":"fn fieldConfig.defaults.thresholds.withSteps","text":"<pre><code>withSteps(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsthresholdswithstepsmixin","title":"fn fieldConfig.defaults.thresholds.withStepsMixin","text":"<pre><code>withStepsMixin(value)\n</code></pre> <p>Must be sorted by 'value', first value is always -Infinity</p>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigdefaultsthresholdssteps","title":"obj fieldConfig.defaults.thresholds.steps","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsthresholdsstepswithcolor","title":"# fn fieldConfig.defaults.thresholds.steps.withColor","text":"<pre><code>withColor(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsthresholdsstepswithindex","title":"# fn fieldConfig.defaults.thresholds.steps.withIndex","text":"<pre><code>withIndex(value)\n</code></pre> <p>Threshold index, an old property that is not needed an should only appear in older dashboards</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsthresholdsstepswithstate","title":"# fn fieldConfig.defaults.thresholds.steps.withState","text":"<pre><code>withState(value)\n</code></pre> <p>TODO docs TODO are the values here enumerable into a disjunction? Some seem to be listed in typescript comment</p>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigdefaultsthresholdsstepswithvalue","title":"# fn fieldConfig.defaults.thresholds.steps.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>TODO docs FIXME the corresponding typescript field is required/non-optional, but nulls currently appear here when serializing -Infinity to JSON</p>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigoverrides","title":"obj fieldConfig.overrides","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverrideswithmatcher","title":"fn fieldConfig.overrides.withMatcher","text":"<pre><code>withMatcher(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverrideswithmatchermixin","title":"fn fieldConfig.overrides.withMatcherMixin","text":"<pre><code>withMatcherMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverrideswithproperties","title":"fn fieldConfig.overrides.withProperties","text":"<pre><code>withProperties(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverrideswithpropertiesmixin","title":"fn fieldConfig.overrides.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigoverridesmatcher","title":"obj fieldConfig.overrides.matcher","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverridesmatcherwithid","title":"fn fieldConfig.overrides.matcher.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverridesmatcherwithoptions","title":"fn fieldConfig.overrides.matcher.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-fieldconfigoverridesproperties","title":"obj fieldConfig.overrides.properties","text":""},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverridespropertieswithid","title":"fn fieldConfig.overrides.properties.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-fieldconfigoverridespropertieswithvalue","title":"fn fieldConfig.overrides.properties.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-gridpos","title":"obj gridPos","text":""},{"location":"grafonnet/panel/xyChart/#fn-gridposwithh","title":"fn gridPos.withH","text":"<pre><code>withH(value=9)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/xyChart/#fn-gridposwithstatic","title":"fn gridPos.withStatic","text":"<pre><code>withStatic(value)\n</code></pre> <p>true if fixed</p>"},{"location":"grafonnet/panel/xyChart/#fn-gridposwithw","title":"fn gridPos.withW","text":"<pre><code>withW(value=12)\n</code></pre> <p>Panel</p>"},{"location":"grafonnet/panel/xyChart/#fn-gridposwithx","title":"fn gridPos.withX","text":"<pre><code>withX(value=0)\n</code></pre> <p>Panel x</p>"},{"location":"grafonnet/panel/xyChart/#fn-gridposwithy","title":"fn gridPos.withY","text":"<pre><code>withY(value=0)\n</code></pre> <p>Panel y</p>"},{"location":"grafonnet/panel/xyChart/#obj-librarypanel","title":"obj libraryPanel","text":""},{"location":"grafonnet/panel/xyChart/#fn-librarypanelwithname","title":"fn libraryPanel.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-librarypanelwithuid","title":"fn libraryPanel.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-links","title":"obj links","text":""},{"location":"grafonnet/panel/xyChart/#fn-linkswithasdropdown","title":"fn links.withAsDropdown","text":"<pre><code>withAsDropdown(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithicon","title":"fn links.withIcon","text":"<pre><code>withIcon(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithincludevars","title":"fn links.withIncludeVars","text":"<pre><code>withIncludeVars(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithkeeptime","title":"fn links.withKeepTime","text":"<pre><code>withKeepTime(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithtags","title":"fn links.withTags","text":"<pre><code>withTags(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithtagsmixin","title":"fn links.withTagsMixin","text":"<pre><code>withTagsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithtargetblank","title":"fn links.withTargetBlank","text":"<pre><code>withTargetBlank(value=false)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithtitle","title":"fn links.withTitle","text":"<pre><code>withTitle(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithtooltip","title":"fn links.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithtype","title":"fn links.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are link, dashboards</p>"},{"location":"grafonnet/panel/xyChart/#fn-linkswithurl","title":"fn links.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-options","title":"obj options","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionswithdims","title":"fn options.withDims","text":"<pre><code>withDims(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithdimsmixin","title":"fn options.withDimsMixin","text":"<pre><code>withDimsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithlegend","title":"fn options.withLegend","text":"<pre><code>withLegend(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithlegendmixin","title":"fn options.withLegendMixin","text":"<pre><code>withLegendMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithseries","title":"fn options.withSeries","text":"<pre><code>withSeries(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithseriesmapping","title":"fn options.withSeriesMapping","text":"<pre><code>withSeriesMapping(value)\n</code></pre> <p>Accepted values for <code>value</code> are auto, manual</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithseriesmixin","title":"fn options.withSeriesMixin","text":"<pre><code>withSeriesMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithtooltip","title":"fn options.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionswithtooltipmixin","title":"fn options.withTooltipMixin","text":"<pre><code>withTooltipMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#obj-optionsdims","title":"obj options.dims","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsdimswithexclude","title":"fn options.dims.withExclude","text":"<pre><code>withExclude(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsdimswithexcludemixin","title":"fn options.dims.withExcludeMixin","text":"<pre><code>withExcludeMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsdimswithframe","title":"fn options.dims.withFrame","text":"<pre><code>withFrame(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsdimswithx","title":"fn options.dims.withX","text":"<pre><code>withX(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-optionslegend","title":"obj options.legend","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithastable","title":"fn options.legend.withAsTable","text":"<pre><code>withAsTable(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithcalcs","title":"fn options.legend.withCalcs","text":"<pre><code>withCalcs(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithcalcsmixin","title":"fn options.legend.withCalcsMixin","text":"<pre><code>withCalcsMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithdisplaymode","title":"fn options.legend.withDisplayMode","text":"<pre><code>withDisplayMode(value)\n</code></pre> <p>TODO docs Note: \"hidden\" needs to remain as an option for plugins compatibility</p> <p>Accepted values for <code>value</code> are list, table, hidden</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithisvisible","title":"fn options.legend.withIsVisible","text":"<pre><code>withIsVisible(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithplacement","title":"fn options.legend.withPlacement","text":"<pre><code>withPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are bottom, right</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithshowlegend","title":"fn options.legend.withShowLegend","text":"<pre><code>withShowLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithsortby","title":"fn options.legend.withSortBy","text":"<pre><code>withSortBy(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithsortdesc","title":"fn options.legend.withSortDesc","text":"<pre><code>withSortDesc(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionslegendwithwidth","title":"fn options.legend.withWidth","text":"<pre><code>withWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-optionsseries","title":"obj options.series","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxiscenteredzero","title":"fn options.series.withAxisCenteredZero","text":"<pre><code>withAxisCenteredZero(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxiscolormode","title":"fn options.series.withAxisColorMode","text":"<pre><code>withAxisColorMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are text, series</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxisgridshow","title":"fn options.series.withAxisGridShow","text":"<pre><code>withAxisGridShow(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxislabel","title":"fn options.series.withAxisLabel","text":"<pre><code>withAxisLabel(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxisplacement","title":"fn options.series.withAxisPlacement","text":"<pre><code>withAxisPlacement(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, top, right, bottom, left, hidden</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxissoftmax","title":"fn options.series.withAxisSoftMax","text":"<pre><code>withAxisSoftMax(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxissoftmin","title":"fn options.series.withAxisSoftMin","text":"<pre><code>withAxisSoftMin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithaxiswidth","title":"fn options.series.withAxisWidth","text":"<pre><code>withAxisWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithhidefrom","title":"fn options.series.withHideFrom","text":"<pre><code>withHideFrom(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithhidefrommixin","title":"fn options.series.withHideFromMixin","text":"<pre><code>withHideFromMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlabel","title":"fn options.series.withLabel","text":"<pre><code>withLabel(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are auto, never, always</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlabelvalue","title":"fn options.series.withLabelValue","text":"<pre><code>withLabelValue(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlabelvaluemixin","title":"fn options.series.withLabelValueMixin","text":"<pre><code>withLabelValueMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlinecolor","title":"fn options.series.withLineColor","text":"<pre><code>withLineColor(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlinecolormixin","title":"fn options.series.withLineColorMixin","text":"<pre><code>withLineColorMixin(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlinestyle","title":"fn options.series.withLineStyle","text":"<pre><code>withLineStyle(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlinestylemixin","title":"fn options.series.withLineStyleMixin","text":"<pre><code>withLineStyleMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithlinewidth","title":"fn options.series.withLineWidth","text":"<pre><code>withLineWidth(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithname","title":"fn options.series.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithpointcolor","title":"fn options.series.withPointColor","text":"<pre><code>withPointColor(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithpointcolormixin","title":"fn options.series.withPointColorMixin","text":"<pre><code>withPointColorMixin(value)\n</code></pre> <p>This is actually an empty interface used mainly for naming?</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithpointsize","title":"fn options.series.withPointSize","text":"<pre><code>withPointSize(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithpointsizemixin","title":"fn options.series.withPointSizeMixin","text":"<pre><code>withPointSizeMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithscaledistribution","title":"fn options.series.withScaleDistribution","text":"<pre><code>withScaleDistribution(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithscaledistributionmixin","title":"fn options.series.withScaleDistributionMixin","text":"<pre><code>withScaleDistributionMixin(value)\n</code></pre> <p>TODO docs</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithshow","title":"fn options.series.withShow","text":"<pre><code>withShow(value)\n</code></pre> <p>Accepted values for <code>value</code> are points, lines, points+lines</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithx","title":"fn options.series.withX","text":"<pre><code>withX(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieswithy","title":"fn options.series.withY","text":"<pre><code>withY(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-optionsserieshidefrom","title":"obj options.series.hideFrom","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsserieshidefromwithlegend","title":"fn options.series.hideFrom.withLegend","text":"<pre><code>withLegend(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieshidefromwithtooltip","title":"fn options.series.hideFrom.withTooltip","text":"<pre><code>withTooltip(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieshidefromwithviz","title":"fn options.series.hideFrom.withViz","text":"<pre><code>withViz(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-optionsserieslabelvalue","title":"obj options.series.labelValue","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslabelvaluewithfield","title":"fn options.series.labelValue.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslabelvaluewithfixed","title":"fn options.series.labelValue.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslabelvaluewithfixedmixin","title":"fn options.series.labelValue.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslabelvaluewithmode","title":"fn options.series.labelValue.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are fixed, field, template</p>"},{"location":"grafonnet/panel/xyChart/#obj-optionsserieslinecolor","title":"obj options.series.lineColor","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslinecolorwithfield","title":"fn options.series.lineColor.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslinecolorwithfixed","title":"fn options.series.lineColor.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslinecolorwithfixedmixin","title":"fn options.series.lineColor.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-optionsserieslinestyle","title":"obj options.series.lineStyle","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslinestylewithdash","title":"fn options.series.lineStyle.withDash","text":"<pre><code>withDash(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslinestylewithdashmixin","title":"fn options.series.lineStyle.withDashMixin","text":"<pre><code>withDashMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsserieslinestylewithfill","title":"fn options.series.lineStyle.withFill","text":"<pre><code>withFill(value)\n</code></pre> <p>Accepted values for <code>value</code> are solid, dash, dot, square</p>"},{"location":"grafonnet/panel/xyChart/#obj-optionsseriespointcolor","title":"obj options.series.pointColor","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointcolorwithfield","title":"fn options.series.pointColor.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointcolorwithfixed","title":"fn options.series.pointColor.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointcolorwithfixedmixin","title":"fn options.series.pointColor.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-optionsseriespointsize","title":"obj options.series.pointSize","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointsizewithfield","title":"fn options.series.pointSize.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointsizewithfixed","title":"fn options.series.pointSize.withFixed","text":"<pre><code>withFixed(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointsizewithfixedmixin","title":"fn options.series.pointSize.withFixedMixin","text":"<pre><code>withFixedMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointsizewithmax","title":"fn options.series.pointSize.withMax","text":"<pre><code>withMax(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriespointsizewithmin","title":"fn options.series.pointSize.withMin","text":"<pre><code>withMin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#obj-optionsseriesscaledistribution","title":"obj options.series.scaleDistribution","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionsseriesscaledistributionwithlinearthreshold","title":"fn options.series.scaleDistribution.withLinearThreshold","text":"<pre><code>withLinearThreshold(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriesscaledistributionwithlog","title":"fn options.series.scaleDistribution.withLog","text":"<pre><code>withLog(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-optionsseriesscaledistributionwithtype","title":"fn options.series.scaleDistribution.withType","text":"<pre><code>withType(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are linear, log, ordinal, symlog</p>"},{"location":"grafonnet/panel/xyChart/#obj-optionstooltip","title":"obj options.tooltip","text":""},{"location":"grafonnet/panel/xyChart/#fn-optionstooltipwithmode","title":"fn options.tooltip.withMode","text":"<pre><code>withMode(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are single, multi, none</p>"},{"location":"grafonnet/panel/xyChart/#fn-optionstooltipwithsort","title":"fn options.tooltip.withSort","text":"<pre><code>withSort(value)\n</code></pre> <p>TODO docs</p> <p>Accepted values for <code>value</code> are asc, desc, none</p>"},{"location":"grafonnet/panel/xyChart/#obj-transformations","title":"obj transformations","text":""},{"location":"grafonnet/panel/xyChart/#fn-transformationswithdisabled","title":"fn transformations.withDisabled","text":"<pre><code>withDisabled(value)\n</code></pre> <p>Disabled transformations are skipped</p>"},{"location":"grafonnet/panel/xyChart/#fn-transformationswithfilter","title":"fn transformations.withFilter","text":"<pre><code>withFilter(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-transformationswithfiltermixin","title":"fn transformations.withFilterMixin","text":"<pre><code>withFilterMixin(value)\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-transformationswithid","title":"fn transformations.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Unique identifier of transformer</p>"},{"location":"grafonnet/panel/xyChart/#fn-transformationswithoptions","title":"fn transformations.withOptions","text":"<pre><code>withOptions(value)\n</code></pre> <p>Options to be passed to the transformer Valid options depend on the transformer id</p>"},{"location":"grafonnet/panel/xyChart/#obj-transformationsfilter","title":"obj transformations.filter","text":""},{"location":"grafonnet/panel/xyChart/#fn-transformationsfilterwithid","title":"fn transformations.filter.withId","text":"<pre><code>withId(value='')\n</code></pre>"},{"location":"grafonnet/panel/xyChart/#fn-transformationsfilterwithoptions","title":"fn transformations.filter.withOptions","text":"<pre><code>withOptions(value)\n</code></pre>"},{"location":"grafonnet/query/","title":"grafonnet.query","text":"<ul> <li>azureMonitor</li> <li>cloudWatch</li> <li>elasticsearch</li> <li>loki</li> <li>parca</li> <li>phlare</li> <li>prometheus</li> <li>tempo</li> <li>testData</li> </ul>"},{"location":"grafonnet/query/azureMonitor/","title":"azureMonitor","text":"<p>grafonnet.query.azureMonitor</p>"},{"location":"grafonnet/query/cloudWatch/","title":"cloudWatch","text":"<p>grafonnet.query.cloudWatch</p>"},{"location":"grafonnet/query/elasticsearch/","title":"elasticsearch","text":"<p>grafonnet.query.elasticsearch</p>"},{"location":"grafonnet/query/elasticsearch/#index","title":"Index","text":"<ul> <li><code>fn withAlias(value)</code></li> <li><code>fn withBucketAggs(value)</code></li> <li><code>fn withBucketAggsMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withMetrics(value)</code></li> <li><code>fn withMetricsMixin(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withTimeField(value)</code></li> <li><code>obj bucketAggs</code></li> <li><code>obj DateHistogram</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMinDocCount(value)</code></li> <li><code>fn withOffset(value)</code></li> <li><code>fn withTimeZone(value)</code></li> <li><code>fn withTrimEdges(value)</code></li> </ul> </li> <li><code>obj Filters</code><ul> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code></li> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>obj filters</code><ul> <li><code>fn withLabel(value)</code></li> <li><code>fn withQuery(value)</code></li> </ul> </li> </ul> </li> <li><code>obj GeoHashGrid</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code></li> <li><code>fn withPrecision(value)</code></li> </ul> </li> <li><code>obj Histogram</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code></li> <li><code>fn withInterval(value)</code></li> <li><code>fn withMinDocCount(value)</code></li> </ul> </li> <li><code>obj Nested</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj Terms</code><ul> <li><code>fn withField(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code></li> <li><code>fn withMinDocCount(value)</code></li> <li><code>fn withMissing(value)</code></li> <li><code>fn withOrder(value)</code></li> <li><code>fn withOrderBy(value)</code></li> <li><code>fn withSize(value)</code></li> </ul> </li> <li><code>obj metrics</code></li> <li><code>obj Count</code><ul> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> <li><code>obj MetricAggregationWithSettings</code><ul> <li><code>obj Average</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj BucketScript</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineVariables(value)</code></li> <li><code>fn withPipelineVariablesMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj pipelineVariables</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> </ul> </li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj CumulativeSum</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFormat(value)</code></li> </ul> </li> <li><code>obj Derivative</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withUnit(value)</code></li> </ul> </li> <li><code>obj ExtendedStats</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withMeta(value)</code></li> <li><code>fn withMetaMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>fn withSigma(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj Logs</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withLimit(value)</code></li> </ul> </li> <li><code>obj Max</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj Min</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj MovingAverage</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj MovingFunction</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>fn withShift(value)</code></li> <li><code>fn withWindow(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj Percentiles</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withPercents(value)</code></li> <li><code>fn withPercentsMixin(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj Rate</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMode(value)</code></li> <li><code>fn withUnit(value)</code></li> </ul> </li> <li><code>obj RawData</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withSize(value)</code></li> </ul> </li> <li><code>obj RawDocument</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withSize(value)</code></li> </ul> </li> <li><code>obj SerialDiff</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withLag(value)</code></li> </ul> </li> <li><code>obj Sum</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj TopMetrics</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMetrics(value)</code></li> <li><code>fn withMetricsMixin(value)</code></li> <li><code>fn withOrder(value)</code></li> <li><code>fn withOrderBy(value)</code></li> </ul> </li> <li><code>obj UniqueCount</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withMissing(value)</code></li> <li><code>fn withPrecisionThreshold(value)</code></li> </ul> </li> </ul> </li> <li><code>obj PipelineMetricAggregation</code><ul> <li><code>obj BucketScript</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineVariables(value)</code></li> <li><code>fn withPipelineVariablesMixin(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj pipelineVariables</code><ul> <li><code>fn withName(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> </ul> </li> <li><code>obj settings</code><ul> <li><code>fn withScript(value)</code></li> <li><code>fn withScriptMixin(value)</code></li> <li><code>obj script</code></li> <li><code>fn withInline(value)</code></li> </ul> </li> <li><code>obj CumulativeSum</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withFormat(value)</code></li> </ul> </li> <li><code>obj Derivative</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj settings</code><ul> <li><code>fn withUnit(value)</code></li> </ul> </li> <li><code>obj MovingAverage</code></li> <li><code>fn withField(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withPipelineAgg(value)</code></li> <li><code>fn withSettings(value)</code></li> <li><code>fn withSettingsMixin(value)</code></li> <li><code>fn withType(value)</code></li> </ul> </li> </ul>"},{"location":"grafonnet/query/elasticsearch/#fields","title":"Fields","text":""},{"location":"grafonnet/query/elasticsearch/#fn-withalias","title":"fn withAlias","text":"<pre><code>withAlias(value)\n</code></pre> <p>Alias pattern</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withbucketaggs","title":"fn withBucketAggs","text":"<pre><code>withBucketAggs(value)\n</code></pre> <p>List of bucket aggregations</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withbucketaggsmixin","title":"fn withBucketAggsMixin","text":"<pre><code>withBucketAggsMixin(value)\n</code></pre> <p>List of bucket aggregations</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withmetrics","title":"fn withMetrics","text":"<pre><code>withMetrics(value)\n</code></pre> <p>List of metric aggregations</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withmetricsmixin","title":"fn withMetricsMixin","text":"<pre><code>withMetricsMixin(value)\n</code></pre> <p>List of metric aggregations</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withquery","title":"fn withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>Lucene query</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/elasticsearch/#fn-withtimefield","title":"fn withTimeField","text":"<pre><code>withTimeField(value)\n</code></pre> <p>Name of time field</p>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggs","title":"obj bucketAggs","text":""},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsdatehistogram","title":"obj bucketAggs.DateHistogram","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramwithfield","title":"fn bucketAggs.DateHistogram.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramwithid","title":"fn bucketAggs.DateHistogram.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramwithsettings","title":"fn bucketAggs.DateHistogram.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramwithsettingsmixin","title":"fn bucketAggs.DateHistogram.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramwithtype","title":"fn bucketAggs.DateHistogram.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsdatehistogramsettings","title":"obj bucketAggs.DateHistogram.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramsettingswithinterval","title":"fn bucketAggs.DateHistogram.settings.withInterval","text":"<pre><code>withInterval(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramsettingswithmindoccount","title":"fn bucketAggs.DateHistogram.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramsettingswithoffset","title":"fn bucketAggs.DateHistogram.settings.withOffset","text":"<pre><code>withOffset(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramsettingswithtimezone","title":"fn bucketAggs.DateHistogram.settings.withTimeZone","text":"<pre><code>withTimeZone(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsdatehistogramsettingswithtrimedges","title":"fn bucketAggs.DateHistogram.settings.withTrimEdges","text":"<pre><code>withTrimEdges(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsfilters","title":"obj bucketAggs.Filters","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterswithid","title":"fn bucketAggs.Filters.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterswithsettings","title":"fn bucketAggs.Filters.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterswithsettingsmixin","title":"fn bucketAggs.Filters.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterswithtype","title":"fn bucketAggs.Filters.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsfilterssettings","title":"obj bucketAggs.Filters.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterssettingswithfilters","title":"fn bucketAggs.Filters.settings.withFilters","text":"<pre><code>withFilters(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterssettingswithfiltersmixin","title":"fn bucketAggs.Filters.settings.withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsfilterssettingsfilters","title":"obj bucketAggs.Filters.settings.filters","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterssettingsfilterswithlabel","title":"# fn bucketAggs.Filters.settings.filters.withLabel","text":"<pre><code>withLabel(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsfilterssettingsfilterswithquery","title":"# fn bucketAggs.Filters.settings.filters.withQuery","text":"<pre><code>withQuery(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsgeohashgrid","title":"obj bucketAggs.GeoHashGrid","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsgeohashgridwithfield","title":"fn bucketAggs.GeoHashGrid.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsgeohashgridwithid","title":"fn bucketAggs.GeoHashGrid.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsgeohashgridwithsettings","title":"fn bucketAggs.GeoHashGrid.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsgeohashgridwithsettingsmixin","title":"fn bucketAggs.GeoHashGrid.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsgeohashgridwithtype","title":"fn bucketAggs.GeoHashGrid.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsgeohashgridsettings","title":"obj bucketAggs.GeoHashGrid.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsgeohashgridsettingswithprecision","title":"fn bucketAggs.GeoHashGrid.settings.withPrecision","text":"<pre><code>withPrecision(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggshistogram","title":"obj bucketAggs.Histogram","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggshistogramwithfield","title":"fn bucketAggs.Histogram.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggshistogramwithid","title":"fn bucketAggs.Histogram.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggshistogramwithsettings","title":"fn bucketAggs.Histogram.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggshistogramwithsettingsmixin","title":"fn bucketAggs.Histogram.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggshistogramwithtype","title":"fn bucketAggs.Histogram.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggshistogramsettings","title":"obj bucketAggs.Histogram.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggshistogramsettingswithinterval","title":"fn bucketAggs.Histogram.settings.withInterval","text":"<pre><code>withInterval(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggshistogramsettingswithmindoccount","title":"fn bucketAggs.Histogram.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsnested","title":"obj bucketAggs.Nested","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsnestedwithfield","title":"fn bucketAggs.Nested.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsnestedwithid","title":"fn bucketAggs.Nested.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsnestedwithsettings","title":"fn bucketAggs.Nested.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsnestedwithsettingsmixin","title":"fn bucketAggs.Nested.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggsnestedwithtype","title":"fn bucketAggs.Nested.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggsterms","title":"obj bucketAggs.Terms","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermswithfield","title":"fn bucketAggs.Terms.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermswithid","title":"fn bucketAggs.Terms.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermswithsettings","title":"fn bucketAggs.Terms.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermswithsettingsmixin","title":"fn bucketAggs.Terms.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermswithtype","title":"fn bucketAggs.Terms.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-bucketaggstermssettings","title":"obj bucketAggs.Terms.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermssettingswithmindoccount","title":"fn bucketAggs.Terms.settings.withMinDocCount","text":"<pre><code>withMinDocCount(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermssettingswithmissing","title":"fn bucketAggs.Terms.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermssettingswithorder","title":"fn bucketAggs.Terms.settings.withOrder","text":"<pre><code>withOrder(value)\n</code></pre> <p>Accepted values for <code>value</code> are desc, asc</p>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermssettingswithorderby","title":"fn bucketAggs.Terms.settings.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-bucketaggstermssettingswithsize","title":"fn bucketAggs.Terms.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metrics","title":"obj metrics","text":""},{"location":"grafonnet/query/elasticsearch/#obj-metricscount","title":"obj metrics.Count","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricscountwithhide","title":"fn metrics.Count.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricscountwithid","title":"fn metrics.Count.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricscountwithtype","title":"fn metrics.Count.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettings","title":"obj metrics.MetricAggregationWithSettings","text":""},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsaverage","title":"obj metrics.MetricAggregationWithSettings.Average","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragewithfield","title":"fn metrics.MetricAggregationWithSettings.Average.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragewithhide","title":"fn metrics.MetricAggregationWithSettings.Average.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragewithid","title":"fn metrics.MetricAggregationWithSettings.Average.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragewithsettings","title":"fn metrics.MetricAggregationWithSettings.Average.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Average.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragewithtype","title":"fn metrics.MetricAggregationWithSettings.Average.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsaveragesettings","title":"obj metrics.MetricAggregationWithSettings.Average.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragesettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragesettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragesettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Average.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsaveragesettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Average.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsaveragesettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Average.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsbucketscript","title":"obj metrics.MetricAggregationWithSettings.BucketScript","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptwithhide","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptwithid","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptwithpipelinevariables","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withPipelineVariables","text":"<pre><code>withPipelineVariables(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptwithpipelinevariablesmixin","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withPipelineVariablesMixin","text":"<pre><code>withPipelineVariablesMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptwithsettings","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptwithtype","title":"fn metrics.MetricAggregationWithSettings.BucketScript.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsbucketscriptpipelinevariables","title":"obj metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptpipelinevariableswithname","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptpipelinevariableswithpipelineagg","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.pipelineVariables.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsbucketscriptsettings","title":"obj metrics.MetricAggregationWithSettings.BucketScript.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.BucketScript.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsbucketscriptsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.BucketScript.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsbucketscriptsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.BucketScript.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingscumulativesum","title":"obj metrics.MetricAggregationWithSettings.CumulativeSum","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumwithfield","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumwithhide","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumwithid","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumwithsettings","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumwithtype","title":"fn metrics.MetricAggregationWithSettings.CumulativeSum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingscumulativesumsettings","title":"obj metrics.MetricAggregationWithSettings.CumulativeSum.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingscumulativesumsettingswithformat","title":"# fn metrics.MetricAggregationWithSettings.CumulativeSum.settings.withFormat","text":"<pre><code>withFormat(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsderivative","title":"obj metrics.MetricAggregationWithSettings.Derivative","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativewithfield","title":"fn metrics.MetricAggregationWithSettings.Derivative.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativewithhide","title":"fn metrics.MetricAggregationWithSettings.Derivative.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativewithid","title":"fn metrics.MetricAggregationWithSettings.Derivative.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativewithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.Derivative.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativewithsettings","title":"fn metrics.MetricAggregationWithSettings.Derivative.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Derivative.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativewithtype","title":"fn metrics.MetricAggregationWithSettings.Derivative.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsderivativesettings","title":"obj metrics.MetricAggregationWithSettings.Derivative.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsderivativesettingswithunit","title":"# fn metrics.MetricAggregationWithSettings.Derivative.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsextendedstats","title":"obj metrics.MetricAggregationWithSettings.ExtendedStats","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithfield","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithhide","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithid","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithmeta","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withMeta","text":"<pre><code>withMeta(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithmetamixin","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withMetaMixin","text":"<pre><code>withMetaMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithsettings","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatswithtype","title":"fn metrics.MetricAggregationWithSettings.ExtendedStats.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsextendedstatssettings","title":"obj metrics.MetricAggregationWithSettings.ExtendedStats.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatssettingswithsigma","title":"# fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.withSigma","text":"<pre><code>withSigma(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsextendedstatssettingsscript","title":"# obj metrics.MetricAggregationWithSettings.ExtendedStats.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsextendedstatssettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.ExtendedStats.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingslogs","title":"obj metrics.MetricAggregationWithSettings.Logs","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingslogswithhide","title":"fn metrics.MetricAggregationWithSettings.Logs.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingslogswithid","title":"fn metrics.MetricAggregationWithSettings.Logs.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingslogswithsettings","title":"fn metrics.MetricAggregationWithSettings.Logs.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingslogswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Logs.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingslogswithtype","title":"fn metrics.MetricAggregationWithSettings.Logs.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingslogssettings","title":"obj metrics.MetricAggregationWithSettings.Logs.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingslogssettingswithlimit","title":"# fn metrics.MetricAggregationWithSettings.Logs.settings.withLimit","text":"<pre><code>withLimit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmax","title":"obj metrics.MetricAggregationWithSettings.Max","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxwithfield","title":"fn metrics.MetricAggregationWithSettings.Max.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxwithhide","title":"fn metrics.MetricAggregationWithSettings.Max.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxwithid","title":"fn metrics.MetricAggregationWithSettings.Max.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxwithsettings","title":"fn metrics.MetricAggregationWithSettings.Max.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Max.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxwithtype","title":"fn metrics.MetricAggregationWithSettings.Max.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmaxsettings","title":"obj metrics.MetricAggregationWithSettings.Max.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Max.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmaxsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Max.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmaxsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Max.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmin","title":"obj metrics.MetricAggregationWithSettings.Min","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminwithfield","title":"fn metrics.MetricAggregationWithSettings.Min.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminwithhide","title":"fn metrics.MetricAggregationWithSettings.Min.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminwithid","title":"fn metrics.MetricAggregationWithSettings.Min.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminwithsettings","title":"fn metrics.MetricAggregationWithSettings.Min.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Min.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminwithtype","title":"fn metrics.MetricAggregationWithSettings.Min.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsminsettings","title":"obj metrics.MetricAggregationWithSettings.Min.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Min.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsminsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Min.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsminsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Min.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmovingaverage","title":"obj metrics.MetricAggregationWithSettings.MovingAverage","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingaveragewithfield","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingaveragewithhide","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingaveragewithid","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingaveragewithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingaveragewithsettings","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingaveragewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingaveragewithtype","title":"fn metrics.MetricAggregationWithSettings.MovingAverage.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmovingfunction","title":"obj metrics.MetricAggregationWithSettings.MovingFunction","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionwithfield","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionwithhide","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionwithid","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionwithsettings","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionwithtype","title":"fn metrics.MetricAggregationWithSettings.MovingFunction.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmovingfunctionsettings","title":"obj metrics.MetricAggregationWithSettings.MovingFunction.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithshift","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withShift","text":"<pre><code>withShift(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingswithwindow","title":"# fn metrics.MetricAggregationWithSettings.MovingFunction.settings.withWindow","text":"<pre><code>withWindow(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsmovingfunctionsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.MovingFunction.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsmovingfunctionsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.MovingFunction.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingspercentiles","title":"obj metrics.MetricAggregationWithSettings.Percentiles","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentileswithfield","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentileswithhide","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentileswithid","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentileswithsettings","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentileswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentileswithtype","title":"fn metrics.MetricAggregationWithSettings.Percentiles.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingspercentilessettings","title":"obj metrics.MetricAggregationWithSettings.Percentiles.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentilessettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentilessettingswithpercents","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withPercents","text":"<pre><code>withPercents(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentilessettingswithpercentsmixin","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withPercentsMixin","text":"<pre><code>withPercentsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentilessettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentilessettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Percentiles.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingspercentilessettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Percentiles.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingspercentilessettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Percentiles.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsrate","title":"obj metrics.MetricAggregationWithSettings.Rate","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratewithfield","title":"fn metrics.MetricAggregationWithSettings.Rate.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratewithhide","title":"fn metrics.MetricAggregationWithSettings.Rate.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratewithid","title":"fn metrics.MetricAggregationWithSettings.Rate.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratewithsettings","title":"fn metrics.MetricAggregationWithSettings.Rate.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratewithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Rate.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratewithtype","title":"fn metrics.MetricAggregationWithSettings.Rate.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsratesettings","title":"obj metrics.MetricAggregationWithSettings.Rate.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratesettingswithmode","title":"# fn metrics.MetricAggregationWithSettings.Rate.settings.withMode","text":"<pre><code>withMode(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsratesettingswithunit","title":"# fn metrics.MetricAggregationWithSettings.Rate.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsrawdata","title":"obj metrics.MetricAggregationWithSettings.RawData","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdatawithhide","title":"fn metrics.MetricAggregationWithSettings.RawData.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdatawithid","title":"fn metrics.MetricAggregationWithSettings.RawData.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdatawithsettings","title":"fn metrics.MetricAggregationWithSettings.RawData.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdatawithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.RawData.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdatawithtype","title":"fn metrics.MetricAggregationWithSettings.RawData.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsrawdatasettings","title":"obj metrics.MetricAggregationWithSettings.RawData.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdatasettingswithsize","title":"# fn metrics.MetricAggregationWithSettings.RawData.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsrawdocument","title":"obj metrics.MetricAggregationWithSettings.RawDocument","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdocumentwithhide","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdocumentwithid","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdocumentwithsettings","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdocumentwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdocumentwithtype","title":"fn metrics.MetricAggregationWithSettings.RawDocument.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsrawdocumentsettings","title":"obj metrics.MetricAggregationWithSettings.RawDocument.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsrawdocumentsettingswithsize","title":"# fn metrics.MetricAggregationWithSettings.RawDocument.settings.withSize","text":"<pre><code>withSize(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsserialdiff","title":"obj metrics.MetricAggregationWithSettings.SerialDiff","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffwithfield","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffwithhide","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffwithid","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffwithpipelineagg","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffwithsettings","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffwithtype","title":"fn metrics.MetricAggregationWithSettings.SerialDiff.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsserialdiffsettings","title":"obj metrics.MetricAggregationWithSettings.SerialDiff.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsserialdiffsettingswithlag","title":"# fn metrics.MetricAggregationWithSettings.SerialDiff.settings.withLag","text":"<pre><code>withLag(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingssum","title":"obj metrics.MetricAggregationWithSettings.Sum","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumwithfield","title":"fn metrics.MetricAggregationWithSettings.Sum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumwithhide","title":"fn metrics.MetricAggregationWithSettings.Sum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumwithid","title":"fn metrics.MetricAggregationWithSettings.Sum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumwithsettings","title":"fn metrics.MetricAggregationWithSettings.Sum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.Sum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumwithtype","title":"fn metrics.MetricAggregationWithSettings.Sum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingssumsettings","title":"obj metrics.MetricAggregationWithSettings.Sum.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumsettingswithscript","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumsettingswithscriptmixin","title":"# fn metrics.MetricAggregationWithSettings.Sum.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingssumsettingsscript","title":"# obj metrics.MetricAggregationWithSettings.Sum.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingssumsettingsscriptwithinline","title":"## fn metrics.MetricAggregationWithSettings.Sum.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingstopmetrics","title":"obj metrics.MetricAggregationWithSettings.TopMetrics","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricswithhide","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricswithid","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricswithsettings","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricswithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricswithtype","title":"fn metrics.MetricAggregationWithSettings.TopMetrics.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingstopmetricssettings","title":"obj metrics.MetricAggregationWithSettings.TopMetrics.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricssettingswithmetrics","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withMetrics","text":"<pre><code>withMetrics(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricssettingswithmetricsmixin","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withMetricsMixin","text":"<pre><code>withMetricsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricssettingswithorder","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withOrder","text":"<pre><code>withOrder(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingstopmetricssettingswithorderby","title":"# fn metrics.MetricAggregationWithSettings.TopMetrics.settings.withOrderBy","text":"<pre><code>withOrderBy(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsuniquecount","title":"obj metrics.MetricAggregationWithSettings.UniqueCount","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountwithfield","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountwithhide","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountwithid","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountwithsettings","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountwithsettingsmixin","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountwithtype","title":"fn metrics.MetricAggregationWithSettings.UniqueCount.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricsmetricaggregationwithsettingsuniquecountsettings","title":"obj metrics.MetricAggregationWithSettings.UniqueCount.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountsettingswithmissing","title":"# fn metrics.MetricAggregationWithSettings.UniqueCount.settings.withMissing","text":"<pre><code>withMissing(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricsmetricaggregationwithsettingsuniquecountsettingswithprecisionthreshold","title":"# fn metrics.MetricAggregationWithSettings.UniqueCount.settings.withPrecisionThreshold","text":"<pre><code>withPrecisionThreshold(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregation","title":"obj metrics.PipelineMetricAggregation","text":""},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationbucketscript","title":"obj metrics.PipelineMetricAggregation.BucketScript","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptwithhide","title":"fn metrics.PipelineMetricAggregation.BucketScript.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptwithid","title":"fn metrics.PipelineMetricAggregation.BucketScript.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptwithpipelinevariables","title":"fn metrics.PipelineMetricAggregation.BucketScript.withPipelineVariables","text":"<pre><code>withPipelineVariables(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptwithpipelinevariablesmixin","title":"fn metrics.PipelineMetricAggregation.BucketScript.withPipelineVariablesMixin","text":"<pre><code>withPipelineVariablesMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptwithsettings","title":"fn metrics.PipelineMetricAggregation.BucketScript.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptwithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.BucketScript.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptwithtype","title":"fn metrics.PipelineMetricAggregation.BucketScript.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationbucketscriptpipelinevariables","title":"obj metrics.PipelineMetricAggregation.BucketScript.pipelineVariables","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptpipelinevariableswithname","title":"# fn metrics.PipelineMetricAggregation.BucketScript.pipelineVariables.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptpipelinevariableswithpipelineagg","title":"# fn metrics.PipelineMetricAggregation.BucketScript.pipelineVariables.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationbucketscriptsettings","title":"obj metrics.PipelineMetricAggregation.BucketScript.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptsettingswithscript","title":"# fn metrics.PipelineMetricAggregation.BucketScript.settings.withScript","text":"<pre><code>withScript(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptsettingswithscriptmixin","title":"# fn metrics.PipelineMetricAggregation.BucketScript.settings.withScriptMixin","text":"<pre><code>withScriptMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationbucketscriptsettingsscript","title":"# obj metrics.PipelineMetricAggregation.BucketScript.settings.script","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationbucketscriptsettingsscriptwithinline","title":"## fn metrics.PipelineMetricAggregation.BucketScript.settings.script.withInline","text":"<pre><code>withInline(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationcumulativesum","title":"obj metrics.PipelineMetricAggregation.CumulativeSum","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumwithfield","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumwithhide","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumwithid","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumwithpipelineagg","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumwithsettings","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumwithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumwithtype","title":"fn metrics.PipelineMetricAggregation.CumulativeSum.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationcumulativesumsettings","title":"obj metrics.PipelineMetricAggregation.CumulativeSum.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationcumulativesumsettingswithformat","title":"# fn metrics.PipelineMetricAggregation.CumulativeSum.settings.withFormat","text":"<pre><code>withFormat(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationderivative","title":"obj metrics.PipelineMetricAggregation.Derivative","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativewithfield","title":"fn metrics.PipelineMetricAggregation.Derivative.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativewithhide","title":"fn metrics.PipelineMetricAggregation.Derivative.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativewithid","title":"fn metrics.PipelineMetricAggregation.Derivative.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativewithpipelineagg","title":"fn metrics.PipelineMetricAggregation.Derivative.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativewithsettings","title":"fn metrics.PipelineMetricAggregation.Derivative.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativewithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.Derivative.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativewithtype","title":"fn metrics.PipelineMetricAggregation.Derivative.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationderivativesettings","title":"obj metrics.PipelineMetricAggregation.Derivative.settings","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationderivativesettingswithunit","title":"# fn metrics.PipelineMetricAggregation.Derivative.settings.withUnit","text":"<pre><code>withUnit(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#obj-metricspipelinemetricaggregationmovingaverage","title":"obj metrics.PipelineMetricAggregation.MovingAverage","text":""},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationmovingaveragewithfield","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withField","text":"<pre><code>withField(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationmovingaveragewithhide","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withHide","text":"<pre><code>withHide(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationmovingaveragewithid","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withId","text":"<pre><code>withId(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationmovingaveragewithpipelineagg","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withPipelineAgg","text":"<pre><code>withPipelineAgg(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationmovingaveragewithsettings","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withSettings","text":"<pre><code>withSettings(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationmovingaveragewithsettingsmixin","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withSettingsMixin","text":"<pre><code>withSettingsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/elasticsearch/#fn-metricspipelinemetricaggregationmovingaveragewithtype","title":"fn metrics.PipelineMetricAggregation.MovingAverage.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/loki/","title":"loki","text":"<p>grafonnet.query.loki</p>"},{"location":"grafonnet/query/loki/#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withEditorMode(value)</code></li> <li><code>fn withExpr(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withInstant(value)</code></li> <li><code>fn withLegendFormat(value)</code></li> <li><code>fn withMaxLines(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRange(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withResolution(value)</code></li> </ul>"},{"location":"grafonnet/query/loki/#fields","title":"Fields","text":""},{"location":"grafonnet/query/loki/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/loki/#fn-witheditormode","title":"fn withEditorMode","text":"<pre><code>withEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are code, builder</p>"},{"location":"grafonnet/query/loki/#fn-withexpr","title":"fn withExpr","text":"<pre><code>withExpr(value)\n</code></pre> <p>The LogQL query.</p>"},{"location":"grafonnet/query/loki/#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/loki/#fn-withinstant","title":"fn withInstant","text":"<pre><code>withInstant(value)\n</code></pre> <p>@deprecated, now use queryType.</p>"},{"location":"grafonnet/query/loki/#fn-withlegendformat","title":"fn withLegendFormat","text":"<pre><code>withLegendFormat(value)\n</code></pre> <p>Used to override the name of the series.</p>"},{"location":"grafonnet/query/loki/#fn-withmaxlines","title":"fn withMaxLines","text":"<pre><code>withMaxLines(value)\n</code></pre> <p>Used to limit the number of log rows returned.</p>"},{"location":"grafonnet/query/loki/#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/loki/#fn-withrange","title":"fn withRange","text":"<pre><code>withRange(value)\n</code></pre> <p>@deprecated, now use queryType.</p>"},{"location":"grafonnet/query/loki/#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/loki/#fn-withresolution","title":"fn withResolution","text":"<pre><code>withResolution(value)\n</code></pre> <p>Used to scale the interval value.</p>"},{"location":"grafonnet/query/parca/","title":"parca","text":"<p>grafonnet.query.parca</p>"},{"location":"grafonnet/query/parca/#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabelSelector(value='{}')</code></li> <li><code>fn withProfileTypeId(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"grafonnet/query/parca/#fields","title":"Fields","text":""},{"location":"grafonnet/query/parca/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/parca/#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/parca/#fn-withlabelselector","title":"fn withLabelSelector","text":"<pre><code>withLabelSelector(value='{}')\n</code></pre> <p>Specifies the query label selectors.</p>"},{"location":"grafonnet/query/parca/#fn-withprofiletypeid","title":"fn withProfileTypeId","text":"<pre><code>withProfileTypeId(value)\n</code></pre> <p>Specifies the type of profile to query.</p>"},{"location":"grafonnet/query/parca/#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/parca/#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/phlare/","title":"phlare","text":"<p>grafonnet.query.phlare</p>"},{"location":"grafonnet/query/phlare/#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withGroupBy(value)</code></li> <li><code>fn withGroupByMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabelSelector(value='{}')</code></li> <li><code>fn withProfileTypeId(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"grafonnet/query/phlare/#fields","title":"Fields","text":""},{"location":"grafonnet/query/phlare/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/phlare/#fn-withgroupby","title":"fn withGroupBy","text":"<pre><code>withGroupBy(value)\n</code></pre> <p>Allows to group the results.</p>"},{"location":"grafonnet/query/phlare/#fn-withgroupbymixin","title":"fn withGroupByMixin","text":"<pre><code>withGroupByMixin(value)\n</code></pre> <p>Allows to group the results.</p>"},{"location":"grafonnet/query/phlare/#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/phlare/#fn-withlabelselector","title":"fn withLabelSelector","text":"<pre><code>withLabelSelector(value='{}')\n</code></pre> <p>Specifies the query label selectors.</p>"},{"location":"grafonnet/query/phlare/#fn-withprofiletypeid","title":"fn withProfileTypeId","text":"<pre><code>withProfileTypeId(value)\n</code></pre> <p>Specifies the type of profile to query.</p>"},{"location":"grafonnet/query/phlare/#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/phlare/#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/prometheus/","title":"prometheus","text":"<p>grafonnet.query.prometheus</p>"},{"location":"grafonnet/query/prometheus/#index","title":"Index","text":"<ul> <li><code>fn new(datasource, expr)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withEditorMode(value)</code></li> <li><code>fn withExemplar(value)</code></li> <li><code>fn withExpr(value)</code></li> <li><code>fn withFormat(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withInstant(value)</code></li> <li><code>fn withIntervalFactor(value)</code></li> <li><code>fn withLegendFormat(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRange(value)</code></li> <li><code>fn withRefId(value)</code></li> </ul>"},{"location":"grafonnet/query/prometheus/#fields","title":"Fields","text":""},{"location":"grafonnet/query/prometheus/#fn-new","title":"fn new","text":"<pre><code>new(datasource, expr)\n</code></pre> <p>Creates a new prometheus query target for panels.</p>"},{"location":"grafonnet/query/prometheus/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>Set the datasource for this query.</p>"},{"location":"grafonnet/query/prometheus/#fn-witheditormode","title":"fn withEditorMode","text":"<pre><code>withEditorMode(value)\n</code></pre> <p>Accepted values for <code>value</code> are code, builder</p>"},{"location":"grafonnet/query/prometheus/#fn-withexemplar","title":"fn withExemplar","text":"<pre><code>withExemplar(value)\n</code></pre> <p>Execute an additional query to identify interesting raw samples relevant for the given expr</p>"},{"location":"grafonnet/query/prometheus/#fn-withexpr","title":"fn withExpr","text":"<pre><code>withExpr(value)\n</code></pre> <p>The actual expression/query that will be evaluated by Prometheus</p>"},{"location":"grafonnet/query/prometheus/#fn-withformat","title":"fn withFormat","text":"<pre><code>withFormat(value)\n</code></pre> <p>Accepted values for <code>value</code> are time_series, table, heatmap</p>"},{"location":"grafonnet/query/prometheus/#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/prometheus/#fn-withinstant","title":"fn withInstant","text":"<pre><code>withInstant(value)\n</code></pre> <p>Returns only the latest value that Prometheus has scraped for the requested time series</p>"},{"location":"grafonnet/query/prometheus/#fn-withintervalfactor","title":"fn withIntervalFactor","text":"<pre><code>withIntervalFactor(value)\n</code></pre> <p>Set the interval factor for this query.</p>"},{"location":"grafonnet/query/prometheus/#fn-withlegendformat","title":"fn withLegendFormat","text":"<pre><code>withLegendFormat(value)\n</code></pre> <p>Set the legend format for this query.</p>"},{"location":"grafonnet/query/prometheus/#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/prometheus/#fn-withrange","title":"fn withRange","text":"<pre><code>withRange(value)\n</code></pre> <p>Returns a Range vector, comprised of a set of time series containing a range of data points over time for each time series</p>"},{"location":"grafonnet/query/prometheus/#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/tempo/","title":"tempo","text":"<p>grafonnet.query.tempo</p>"},{"location":"grafonnet/query/tempo/#index","title":"Index","text":"<ul> <li><code>fn withDatasource(value)</code></li> <li><code>fn withFilters(value)</code></li> <li><code>fn withFiltersMixin(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLimit(value)</code></li> <li><code>fn withMaxDuration(value)</code></li> <li><code>fn withMinDuration(value)</code></li> <li><code>fn withQuery(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withSearch(value)</code></li> <li><code>fn withServiceMapQuery(value)</code></li> <li><code>fn withServiceName(value)</code></li> <li><code>fn withSpanName(value)</code></li> <li><code>obj filters</code></li> <li><code>fn withId(value)</code></li> <li><code>fn withOperator(value)</code></li> <li><code>fn withScope(value)</code></li> <li><code>fn withTag(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withValue(value)</code></li> <li><code>fn withValueMixin(value)</code></li> <li><code>fn withValueType(value)</code></li> </ul>"},{"location":"grafonnet/query/tempo/#fields","title":"Fields","text":""},{"location":"grafonnet/query/tempo/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/tempo/#fn-withfilters","title":"fn withFilters","text":"<pre><code>withFilters(value)\n</code></pre>"},{"location":"grafonnet/query/tempo/#fn-withfiltersmixin","title":"fn withFiltersMixin","text":"<pre><code>withFiltersMixin(value)\n</code></pre>"},{"location":"grafonnet/query/tempo/#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/tempo/#fn-withlimit","title":"fn withLimit","text":"<pre><code>withLimit(value)\n</code></pre> <p>Defines the maximum number of traces that are returned from Tempo</p>"},{"location":"grafonnet/query/tempo/#fn-withmaxduration","title":"fn withMaxDuration","text":"<pre><code>withMaxDuration(value)\n</code></pre> <p>Define the maximum duration to select traces. Use duration format, for example: 1.2s, 100ms</p>"},{"location":"grafonnet/query/tempo/#fn-withminduration","title":"fn withMinDuration","text":"<pre><code>withMinDuration(value)\n</code></pre> <p>Define the minimum duration to select traces. Use duration format, for example: 1.2s, 100ms</p>"},{"location":"grafonnet/query/tempo/#fn-withquery","title":"fn withQuery","text":"<pre><code>withQuery(value)\n</code></pre> <p>TraceQL query or trace ID</p>"},{"location":"grafonnet/query/tempo/#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/tempo/#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/tempo/#fn-withsearch","title":"fn withSearch","text":"<pre><code>withSearch(value)\n</code></pre> <p>Logfmt query to filter traces by their tags. Example: http.status_code=200 error=true</p>"},{"location":"grafonnet/query/tempo/#fn-withservicemapquery","title":"fn withServiceMapQuery","text":"<pre><code>withServiceMapQuery(value)\n</code></pre> <p>Filters to be included in a PromQL query to select data for the service graph. Example: {client=\"app\",service=\"app\"}</p>"},{"location":"grafonnet/query/tempo/#fn-withservicename","title":"fn withServiceName","text":"<pre><code>withServiceName(value)\n</code></pre> <p>Query traces by service name</p>"},{"location":"grafonnet/query/tempo/#fn-withspanname","title":"fn withSpanName","text":"<pre><code>withSpanName(value)\n</code></pre> <p>Query traces by span name</p>"},{"location":"grafonnet/query/tempo/#obj-filters","title":"obj filters","text":""},{"location":"grafonnet/query/tempo/#fn-filterswithid","title":"fn filters.withId","text":"<pre><code>withId(value)\n</code></pre> <p>Uniquely identify the filter, will not be used in the query generation</p>"},{"location":"grafonnet/query/tempo/#fn-filterswithoperator","title":"fn filters.withOperator","text":"<pre><code>withOperator(value)\n</code></pre> <p>The operator that connects the tag to the value, for example: =, &gt;, !=, =~</p>"},{"location":"grafonnet/query/tempo/#fn-filterswithscope","title":"fn filters.withScope","text":"<pre><code>withScope(value)\n</code></pre> <p>Accepted values for <code>value</code> are unscoped, resource, span</p>"},{"location":"grafonnet/query/tempo/#fn-filterswithtag","title":"fn filters.withTag","text":"<pre><code>withTag(value)\n</code></pre> <p>The tag for the search filter, for example: .http.status_code, .service.name, status</p>"},{"location":"grafonnet/query/tempo/#fn-filterswithtype","title":"fn filters.withType","text":"<pre><code>withType(value)\n</code></pre> <p>static fields are pre-set in the UI, dynamic fields are added by the user</p> <p>Accepted values for <code>value</code> are static, dynamic</p>"},{"location":"grafonnet/query/tempo/#fn-filterswithvalue","title":"fn filters.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>The value for the search filter</p>"},{"location":"grafonnet/query/tempo/#fn-filterswithvaluemixin","title":"fn filters.withValueMixin","text":"<pre><code>withValueMixin(value)\n</code></pre> <p>The value for the search filter</p>"},{"location":"grafonnet/query/tempo/#fn-filterswithvaluetype","title":"fn filters.withValueType","text":"<pre><code>withValueType(value)\n</code></pre> <p>The type of the value, used for example to check whether we need to wrap the value in quotes when generating the query</p>"},{"location":"grafonnet/query/testData/","title":"testData","text":"<p>grafonnet.query.testData</p>"},{"location":"grafonnet/query/testData/#index","title":"Index","text":"<ul> <li><code>fn withAlias(value)</code></li> <li><code>fn withChannel(value)</code></li> <li><code>fn withCsvContent(value)</code></li> <li><code>fn withCsvFileName(value)</code></li> <li><code>fn withCsvWave(value)</code></li> <li><code>fn withCsvWaveMixin(value)</code></li> <li><code>fn withDatasource(value)</code></li> <li><code>fn withErrorType(value)</code></li> <li><code>fn withHide(value)</code></li> <li><code>fn withLabels(value)</code></li> <li><code>fn withLevelColumn(value)</code></li> <li><code>fn withLines(value)</code></li> <li><code>fn withNodes(value)</code></li> <li><code>fn withNodesMixin(value)</code></li> <li><code>fn withPoints(value)</code></li> <li><code>fn withPointsMixin(value)</code></li> <li><code>fn withPulseWave(value)</code></li> <li><code>fn withPulseWaveMixin(value)</code></li> <li><code>fn withQueryType(value)</code></li> <li><code>fn withRawFrameContent(value)</code></li> <li><code>fn withRefId(value)</code></li> <li><code>fn withScenarioId(value)</code></li> <li><code>fn withSeriesCount(value)</code></li> <li><code>fn withSim(value)</code></li> <li><code>fn withSimMixin(value)</code></li> <li><code>fn withSpanCount(value)</code></li> <li><code>fn withStream(value)</code></li> <li><code>fn withStreamMixin(value)</code></li> <li><code>fn withStringInput(value)</code></li> <li><code>fn withUsa(value)</code></li> <li><code>fn withUsaMixin(value)</code></li> <li><code>obj csvWave</code></li> <li><code>fn withLabels(value)</code></li> <li><code>fn withName(value)</code></li> <li><code>fn withTimeStep(value)</code></li> <li><code>fn withValuesCSV(value)</code></li> <li><code>obj nodes</code></li> <li><code>fn withCount(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>obj pulseWave</code></li> <li><code>fn withOffCount(value)</code></li> <li><code>fn withOffValue(value)</code></li> <li><code>fn withOnCount(value)</code></li> <li><code>fn withOnValue(value)</code></li> <li><code>fn withTimeStep(value)</code></li> <li><code>obj sim</code></li> <li><code>fn withConfig(value)</code></li> <li><code>fn withConfigMixin(value)</code></li> <li><code>fn withKey(value)</code></li> <li><code>fn withKeyMixin(value)</code></li> <li><code>fn withLast(value)</code></li> <li><code>fn withStream(value)</code></li> <li><code>obj key</code><ul> <li><code>fn withTick(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUid(value)</code></li> </ul> </li> <li><code>obj stream</code></li> <li><code>fn withBands(value)</code></li> <li><code>fn withNoise(value)</code></li> <li><code>fn withSpeed(value)</code></li> <li><code>fn withSpread(value)</code></li> <li><code>fn withType(value)</code></li> <li><code>fn withUrl(value)</code></li> <li><code>obj usa</code></li> <li><code>fn withFields(value)</code></li> <li><code>fn withFieldsMixin(value)</code></li> <li><code>fn withMode(value)</code></li> <li><code>fn withPeriod(value)</code></li> <li><code>fn withStates(value)</code></li> <li><code>fn withStatesMixin(value)</code></li> </ul>"},{"location":"grafonnet/query/testData/#fields","title":"Fields","text":""},{"location":"grafonnet/query/testData/#fn-withalias","title":"fn withAlias","text":"<pre><code>withAlias(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withchannel","title":"fn withChannel","text":"<pre><code>withChannel(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withcsvcontent","title":"fn withCsvContent","text":"<pre><code>withCsvContent(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withcsvfilename","title":"fn withCsvFileName","text":"<pre><code>withCsvFileName(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withcsvwave","title":"fn withCsvWave","text":"<pre><code>withCsvWave(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withcsvwavemixin","title":"fn withCsvWaveMixin","text":"<pre><code>withCsvWaveMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withdatasource","title":"fn withDatasource","text":"<pre><code>withDatasource(value)\n</code></pre> <p>For mixed data sources the selected datasource is on the query level. For non mixed scenarios this is undefined. TODO find a better way to do this ^ that's friendly to schema TODO this shouldn't be unknown but DataSourceRef | null</p>"},{"location":"grafonnet/query/testData/#fn-witherrortype","title":"fn withErrorType","text":"<pre><code>withErrorType(value)\n</code></pre> <p>Accepted values for <code>value</code> are server_panic, frontend_exception, frontend_observable</p>"},{"location":"grafonnet/query/testData/#fn-withhide","title":"fn withHide","text":"<pre><code>withHide(value)\n</code></pre> <p>true if query is disabled (ie should not be returned to the dashboard) Note this does not always imply that the query should not be executed since the results from a hidden query may be used as the input to other queries (SSE etc)</p>"},{"location":"grafonnet/query/testData/#fn-withlabels","title":"fn withLabels","text":"<pre><code>withLabels(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withlevelcolumn","title":"fn withLevelColumn","text":"<pre><code>withLevelColumn(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withlines","title":"fn withLines","text":"<pre><code>withLines(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withnodes","title":"fn withNodes","text":"<pre><code>withNodes(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withnodesmixin","title":"fn withNodesMixin","text":"<pre><code>withNodesMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withpoints","title":"fn withPoints","text":"<pre><code>withPoints(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withpointsmixin","title":"fn withPointsMixin","text":"<pre><code>withPointsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withpulsewave","title":"fn withPulseWave","text":"<pre><code>withPulseWave(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withpulsewavemixin","title":"fn withPulseWaveMixin","text":"<pre><code>withPulseWaveMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withquerytype","title":"fn withQueryType","text":"<pre><code>withQueryType(value)\n</code></pre> <p>Specify the query flavor TODO make this required and give it a default</p>"},{"location":"grafonnet/query/testData/#fn-withrawframecontent","title":"fn withRawFrameContent","text":"<pre><code>withRawFrameContent(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withrefid","title":"fn withRefId","text":"<pre><code>withRefId(value)\n</code></pre> <p>A unique identifier for the query within the list of targets. In server side expressions, the refId is used as a variable name to identify results. By default, the UI will assign A-&gt;Z; however setting meaningful names may be useful.</p>"},{"location":"grafonnet/query/testData/#fn-withscenarioid","title":"fn withScenarioId","text":"<pre><code>withScenarioId(value)\n</code></pre> <p>Accepted values for <code>value</code> are random_walk, slow_query, random_walk_with_error, random_walk_table, exponential_heatmap_bucket_data, linear_heatmap_bucket_data, no_data_points, datapoints_outside_range, csv_metric_values, predictable_pulse, predictable_csv_wave, streaming_client, simulation, usa, live, grafana_api, arrow, annotations, table_static, server_error_500, logs, node_graph, flame_graph, raw_frame, csv_file, csv_content, trace, manual_entry, variables-query</p>"},{"location":"grafonnet/query/testData/#fn-withseriescount","title":"fn withSeriesCount","text":"<pre><code>withSeriesCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withsim","title":"fn withSim","text":"<pre><code>withSim(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withsimmixin","title":"fn withSimMixin","text":"<pre><code>withSimMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withspancount","title":"fn withSpanCount","text":"<pre><code>withSpanCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withstream","title":"fn withStream","text":"<pre><code>withStream(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withstreammixin","title":"fn withStreamMixin","text":"<pre><code>withStreamMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withstringinput","title":"fn withStringInput","text":"<pre><code>withStringInput(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withusa","title":"fn withUsa","text":"<pre><code>withUsa(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-withusamixin","title":"fn withUsaMixin","text":"<pre><code>withUsaMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#obj-csvwave","title":"obj csvWave","text":""},{"location":"grafonnet/query/testData/#fn-csvwavewithlabels","title":"fn csvWave.withLabels","text":"<pre><code>withLabels(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-csvwavewithname","title":"fn csvWave.withName","text":"<pre><code>withName(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-csvwavewithtimestep","title":"fn csvWave.withTimeStep","text":"<pre><code>withTimeStep(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-csvwavewithvaluescsv","title":"fn csvWave.withValuesCSV","text":"<pre><code>withValuesCSV(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#obj-nodes","title":"obj nodes","text":""},{"location":"grafonnet/query/testData/#fn-nodeswithcount","title":"fn nodes.withCount","text":"<pre><code>withCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-nodeswithtype","title":"fn nodes.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are random, response, random edges</p>"},{"location":"grafonnet/query/testData/#obj-pulsewave","title":"obj pulseWave","text":""},{"location":"grafonnet/query/testData/#fn-pulsewavewithoffcount","title":"fn pulseWave.withOffCount","text":"<pre><code>withOffCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-pulsewavewithoffvalue","title":"fn pulseWave.withOffValue","text":"<pre><code>withOffValue(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-pulsewavewithoncount","title":"fn pulseWave.withOnCount","text":"<pre><code>withOnCount(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-pulsewavewithonvalue","title":"fn pulseWave.withOnValue","text":"<pre><code>withOnValue(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-pulsewavewithtimestep","title":"fn pulseWave.withTimeStep","text":"<pre><code>withTimeStep(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#obj-sim","title":"obj sim","text":""},{"location":"grafonnet/query/testData/#fn-simwithconfig","title":"fn sim.withConfig","text":"<pre><code>withConfig(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-simwithconfigmixin","title":"fn sim.withConfigMixin","text":"<pre><code>withConfigMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-simwithkey","title":"fn sim.withKey","text":"<pre><code>withKey(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-simwithkeymixin","title":"fn sim.withKeyMixin","text":"<pre><code>withKeyMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-simwithlast","title":"fn sim.withLast","text":"<pre><code>withLast(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-simwithstream","title":"fn sim.withStream","text":"<pre><code>withStream(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#obj-simkey","title":"obj sim.key","text":""},{"location":"grafonnet/query/testData/#fn-simkeywithtick","title":"fn sim.key.withTick","text":"<pre><code>withTick(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-simkeywithtype","title":"fn sim.key.withType","text":"<pre><code>withType(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-simkeywithuid","title":"fn sim.key.withUid","text":"<pre><code>withUid(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#obj-stream","title":"obj stream","text":""},{"location":"grafonnet/query/testData/#fn-streamwithbands","title":"fn stream.withBands","text":"<pre><code>withBands(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-streamwithnoise","title":"fn stream.withNoise","text":"<pre><code>withNoise(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-streamwithspeed","title":"fn stream.withSpeed","text":"<pre><code>withSpeed(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-streamwithspread","title":"fn stream.withSpread","text":"<pre><code>withSpread(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-streamwithtype","title":"fn stream.withType","text":"<pre><code>withType(value)\n</code></pre> <p>Accepted values for <code>value</code> are signal, logs, fetch</p>"},{"location":"grafonnet/query/testData/#fn-streamwithurl","title":"fn stream.withUrl","text":"<pre><code>withUrl(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#obj-usa","title":"obj usa","text":""},{"location":"grafonnet/query/testData/#fn-usawithfields","title":"fn usa.withFields","text":"<pre><code>withFields(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-usawithfieldsmixin","title":"fn usa.withFieldsMixin","text":"<pre><code>withFieldsMixin(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-usawithmode","title":"fn usa.withMode","text":"<pre><code>withMode(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-usawithperiod","title":"fn usa.withPeriod","text":"<pre><code>withPeriod(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-usawithstates","title":"fn usa.withStates","text":"<pre><code>withStates(value)\n</code></pre>"},{"location":"grafonnet/query/testData/#fn-usawithstatesmixin","title":"fn usa.withStatesMixin","text":"<pre><code>withStatesMixin(value)\n</code></pre>"}]}